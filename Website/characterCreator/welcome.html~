<!DOCTYPE html>
<html>

<head profile="http://www.w3.org/2005/10/profile">
<link rel="icon"
	type="image/png"
	href="../images/favIcon.png" />
<title>WinterDawn RPG - Character Creator</title>

<link rel="stylesheet" href="../styles.css">

<script src="../generalUtilityFunction.js"></script>

<section style="position:fixed; top:0%; left:0%; width:100%; height:15%;">

<img id "logo1" src="../images/winterdawnLogoSingle.svg" alt="WinterDawn RPG ;" style="width:auto;height:95%;position:absolute;left:8.75%;top:50%;transform: translate(-50%, -50%);">

<img id "logo2" src="../images/winterdawnLogoSingle.svg" alt="WinterDawn RPG ;" style="width:auto;height:95%;position:absolute;left:92.25%;top:50%;transform: translate(-50%, -50%);">

<img id "name" src="../images/WinterDawnName.svg" alt="WinterDawn RPG ;" style="width:auto;height:100%;max-width:60%;position:absolute;left:50%;top:50%;transform: translate(-50%, -50%);">

</section>

<section style="position:fixed; top:10%;left:0%;height:60px;width:100%;overflow:hidden;">

<h1>Character Creation Tool</h1>

</section>

</head>

<body style="font-family:liberation;text-align:center;">

<!--<link rel="import" href="characterCreation.html" id="characterCreationInfo">-->


<script>
	
	"use strict";
	
	function objSkill (parName, parAttribute, parExp, parRank, parSubSkills)
	{
		this.strName = parName;
		this.strAttribute = parAttribute;
		this.intExp = parExp;
		this.intRank = parRank;
		this.objSubSkills = parSubSkills;
	}
	
	function initSkill()
	{
		var skillsList = 
		{
			acrobatics: (new objSkill("Acrobatics", "Agi", 0, 0)),
			appraise: (new objSkill("Appraise", "Sag", 0, 0)),
			artsPerformance: (new objSkill("Arts & Performance", "Per", 0, 0)),
			athleticism: (new objSkill("Athleticism", "Pow", 0, 0)),
			charmPersuasion: (new objSkill("Charms & Persuasion", "Per", 0, 0)),
			confidenceEgo: (new objSkill("Confidence & Ego", "Per/Sag", 0, 0)),
			cooking: (new objSkill("Cooking", "Sag", 0, 0)),
			crafting: (new objSkill("Crafting", "Sag", 0, 0)),
			deductionLogic: (new objSkill("Deduction & Logic", "Sag", 0, 0)),
			detectMotive: (new objSkill("Detect Motive", "Sag", 0, 0)),
			elementalism: (new objSkill("Elementalism", "Eru/Per", 0, 0)),
			insultIntimidation: (new objSkill("Insult & Intimidation", "Per", 0, 0)),
			knowledge: (new objSkill("Knowledge", "Erudition", 0, 0)),
			lawsLegalSystems: (new objSkill("Laws & Legal Systems", "Eru/Per/Sag", 0, 0)),
			luck: (new objSkill("Luck", "Per", 0, 0)),
			mechanics: (new objSkill("Mechanics", "Sag", 0, 0)),
			meleeCombat: (new objSkill("Melee Combat", "Agi/Pow", 0, 0)),
			mysticism: (new objSkill("Mysticism", "Per/Sag", 0, 0)),
			naturalHealing: (new objSkill("Natural Healing", "Con", 0, 0)),
			perceptionVigilance: (new objSkill("Perception & Vigilance", "Sag", 0, 0)),
			rangeCombat: (new objSkill("Range Combat", "Agi/Pow", 0, 0)),
			reflex: (new objSkill("Reflex", "Agi", 0, 0)),
			resistCold: (new objSkill("Resist Cold", "Con", 0, 0)),
			resistFatigue: (new objSkill("Resist Fatigue", "Con", 0, 0)),
			resistHeat: (new objSkill("Resist Heat", "Con", 0, 0)),
			resistHunger: (new objSkill("Resist Hunger", "Con", 0, 0)),
			resistPain: (new objSkill("Resist Pain", "Con", 0, 0)),
			resistPoison: (new objSkill("Resist Poison", "Con", 0, 0)),
			resistShock: (new objSkill("Resist Shock", "Con", 0, 0)),
			riding: (new objSkill("Riding", "Agi", 0, 0)),
			science: (new objSkill("Science", "Eru", 0, 0)),
			seamanship: (new objSkill("Seamanship", "Sag", 0, 0)),
			shamanism: (new objSkill("Shamanism", "Sag", 0, 0)),
			sleightOfHand: (new objSkill("Sleight of Hand", "Agi", 0, 0)),
			sorcery: (new objSkill("Sorcery", "Per", 0, 0)),
			stealth: (new objSkill("Stealth", "Agi", 0, 0)),
			survival: (new objSkill("Survival", "Sag", 0, 0)),
			tamingTraining: (new objSkill("Taming & Training", "Per", 0, 0)),
			torture: (new objSkill("Torture", "Per/Sag", 0, 0)),
			witchcraft: (new objSkill("Witchcraft", "Eru/Sag", 0, 0)),
			wizardry: (new objSkill("Wizardry", "Eru", 0, 0))
		};
		
		skillsList.artsPerformance.objSubSkills = 
		{
			acting: (new objSkill("Acting", "Per", 0, 0)),
			dancing: (new objSkill("Dancing", "Per", 0, 0)),
			drawingPainting: (new objSkill("Drawing & Painting", "Per", 0, 0)),
			musicSinging: (new objSkill("Music & Singing", "Per", 0, 0)),
			oratoryPoetry: (new objSkill("Oratory & Poetry", "Per", 0, 0))
		};
		
		skillsList.athleticism.objSubSkills = 
		{
			climbing: (new objSkill("Climbing", "Pow", 0, 0)),
			jumping: (new objSkill("Jumping", "Pow", 0, 0)),
			liftingPushing: (new objSkill("Lifting & Pushing", "Pow", 0, 0)),
			running: (new objSkill("Running", "Pow", 0, 0)),
			swimming: (new objSkill("Swimming", "Pow", 0, 0))
		};
		
		skillsList.crafting.objSubSkills = 
		{
			metalworking: (new objSkill("Metalworking", "Sag", 0, 0)),
			scribing: (new objSkill("Scribing", "Sag", 0, 0)),
			stonecutting: (new objSkill("Stonecutting", "Sag", 0, 0)),
			tailoring: (new objSkill("Tailoring", "Sag", 0, 0)),
			woodworking: (new objSkill("Woodworking", "Sag", 0, 0))
		};
		
		skillsList.elementalism.objSubSkills = 
		{
			aether: (new objSkill("Aether", "Eru/Per", 0, 0)),
			air: (new objSkill("Air", "Eru/Per", 0, 0)),
			earth: (new objSkill("Earth", "Eru/Per", 0, 0)),
			fire: (new objSkill("Fire", "Eru/Per", 0, 0)),
			water: (new objSkill("Water", "Eru/Per", 0, 0))
		};
		
		skillsList.knowledge.objSubSkills = 
		{
			geography: (new objSkill("Geography", "Eru", 0, 0)),
			heraldryNobility: (new objSkill("Heraldry & Nobility", "Eru", 0, 0)),
			history: (new objSkill("History", "Eru", 0, 0)),
			linguistic: (new objSkill("Linguistic", "Eru", 0, 0)),
			religions: (new objSkill("Religions", "Eru", 0, 0))
		};
		
		skillsList.meleeCombat.objSubSkills = 
		{
			axesMaces: (new objSkill("Axes and Maces", "Agi/Pow", 0, 0)),
			brawling: (new objSkill("Brawling", "Agi/Pow", 0, 0)),
			oneHanded: (new objSkill("One Handed Swords", "Agi/Pow", 0, 0)),
			polearms: (new objSkill("Polearms", "Agi/Pow", 0, 0)),
			twoHanded: (new objSkill("Two Handed Swords", "Agi/Pow", 0, 0))
		};
		
		skillsList.mysticism.objSubSkills = 
		{
			blessCurse: (new objSkill("Bless & Curse", "Per/Sag", 0, 0)),
			cureHeal: (new objSkill("Cure & Heal", "Per/Sag", 0, 0)),
			divination: (new objSkill("Divination", "Per/Sag", 0, 0)),
			necromancy: (new objSkill("Necromancy", "Per/Sag", 0, 0)),
			retribution: (new objSkill("Retribution", "Per/Sag", 0, 0))
		};
		
		skillsList.rangeCombat.objSubSkills = 
		{
			bows: (new objSkill("Bows", "Agility or Power", 0, 0)),
			crossbowsFirearms: (new objSkill("Crossbows & Firearms", "Agi/Pow", 0, 0)),
			javelinsSpears: (new objSkill("Javelins & Spears", "Agi/Pow", 0, 0)),
			slings: (new objSkill("Slings", "Agi/Pow", 0, 0)),
			thrown: (new objSkill("Thrown", "Agi/Pow", 0, 0))
		};
		
		skillsList.science.objSubSkills = 
		{
			alchemyChemistry: (new objSkill("Alchemy & Chemistry", "Eru", 0, 0)),
			botany: (new objSkill("Botany", "Eru", 0, 0)),
			engineeringPhysics: (new objSkill("Engineering & Physics", "Eru", 0, 0)),
			medicine: (new objSkill("Medicine", "Eru", 0, 0)),
			zoology: (new objSkill("Zoology", "Eru", 0, 0))
		};
		
		skillsList.shamanism.objSubSkills = 
		{
			ancestors: (new objSkill("Ancestors", "Sag", 0, 0)),
			beasts: (new objSkill("Beasts", "Sag", 0, 0)),
			lakesRivers: (new objSkill("Lakes & Rivers", "Sag", 0, 0)),
			mountainsRocks: (new objSkill("Mountains & rocks", "Sag", 0, 0)),
			plantsTrees: (new objSkill("Plants & Trees", "Sag", 0, 0))
		};
		
		skillsList.sorcery.objSubSkills = 
		{
			abyssal: (new objSkill("Abyssal", "Per", 0, 0)),
			blood: (new objSkill("Blood", "Per", 0, 0)),
			chaos: (new objSkill("Chaos", "Per", 0, 0)),
			death: (new objSkill("Death", "Per", 0, 0)),
			unknown: (new objSkill("The Unknown", "Per", 0, 0))
		};
		
		skillsList.survival.objSubSkills = 
		{
			firstAid: (new objSkill("First-Aid", "Sag", 0, 0)),
			foragingHunting: (new objSkill("Foraging & Hunting", "Sag", 0, 0)),
			navigation: (new objSkill("Navigation", "Sag", 0, 0)),
			sheltering: (new objSkill("Sheltering", "Sag", 0, 0)),
			tracking: (new objSkill("Tracking", "Sag", 0, 0))
		};
		
		skillsList.witchcraft.objSubSkills = 
		{
			balmsPotions: (new objSkill("Balms & Potions", "Eru/Sag", 0, 0)),
			curios: (new objSkill("Curios", "Eru/Sag", 0, 0)),
			fumesPhials: (new objSkill("Fumes & Phials", "Eru/Sag", 0, 0)),
			staffsWands: (new objSkill("Staff & Wands", "Eru/Sag", 0, 0)),
			thirdEye: (new objSkill("Third Eye", "Eru/Sag", 0, 0))
		};
		
		skillsList.wizardry.objSubSkills = 
		{
			abjuration: (new objSkill("Abjuration", "Eru", 0, 0)),
			conjuration: (new objSkill("Conjuration", "Eru", 0, 0)),
			enchantment: (new objSkill("Enchantment", "Eru", 0, 0)),
			evocation: (new objSkill("Evocation", "Eru", 0, 0)),
			illusion: (new objSkill("Illusion", "Eru", 0, 0))
		};
		
		return skillsList;
	}
	
	var selectedEventsArray = [];
	
	function objSelectedEvent (parId, parName, parCost, parOpt1, parOpt2)
	{
		this.eventId = parId;
		this.eventName = parName;
		this.eventCost = parCost;
		this.eventOpt1= parOpt1;
		this.eventOpt2 = parOpt2;
	}
	
	function displayEvent (eventId)
	{
		var eventIdArray = 
		[
			"parentHasBeenExecutedRightfully", "parentHasBeenExecutedWrongfully",
			"parentHasBeenMurdered", "parentDiedAtWar",
			"parentDiedFromWar", "parentDiedFromDisease",
			"almostDrown", "becameAnOrphan",
			"becameSeriouslySick", "beenAccusedOfACrime",
			"beenAttackedByCriminals", "beenExiled",
			"beenLeftForDead", "beenRaisedByAnHermit",
			"beenSeverelyBurnt", "beenToAGoodSchool",
			"beenToAnOrphanage", "bornANoble",
			"bornASlave", "enteredAnElementalismWizardrySchool",
			"gotAChild", "hasARichRelative",
			"joinedAReligiousOrder", "joinedAStreetGang",
			"killedSomeone", "lostAParentDueToExposureStarvation",
			"motherDiedInChildbirth", "neglectfulChildhood",
			"sawAMonster", "spentTimeInJail",
			"violentChildhood", "witnessedAMiracle"
		];
		
		for (var i = 0; i < eventIdArray.length; i++)
		{
			if (eventIdArray[i] === eventId)
			{
				document.getElementById(("sec_" + eventIdArray[i])).style.display = 'block';
			}
			else if (document.getElementById(("sec_" + eventIdArray[i])) != undefined)
			{
				document.getElementById(("sec_" + eventIdArray[i])).style.display = 'none';
			}
		}
	}
	
	var selectedOccupationsArray = [];
	
	function objSelectedOccupation (parId, parName, parOpt1, parOpt2)
	{
		this.occupationId = parId;
		this.occupationName = parName;
		this.occupationOpt1= parOpt1;
		this.occupationOpt2 = parOpt2;
	}
	
	function displayOccupation (occupationId)
	{
		var occupationIdArray = 
		[
			"actor", "altarBoy", "apothecary", "apprentice", "arbalestierArcher", "armourer", "aspiringArtist", "assassin", "banker",
			"beadle", "beggar", "blacksmith", "burglar", "campServantSquire", "carpenter", "cavalryman", "cheiftainMayor", "clerk",
			"conman", "cook", "dancer", "deckHand", "diplomat", "drunk", "elementalist", "engineer", "farmHand",
			"fence", "firstMate", "fisherman", "gambler", "guard", "guide", "hermit", "highwayman", "hunter",
			"illuminator", "inquisitor", "jailer", "jeweller", "knight", "lawyer", "lumberjack", "mason", "miner",
			"musician", "navigator", "noblePatriarch","operaComposer", "outcast", "outlaw", "painter", "peasant", "physician",
			"pickpocket", "pikeman", "pirate", "playwright", "poet", "priest", "prostitute", "scholar", "scientist",
			"scout", "scribe","sculptor","shaman", "shepherd", "shipwright", "siegeEngineer", "sorcerer", "student",
			"tailor", "taxCollector", "torturer", "trader", "wanderer","warbandMusician", "witch", "wizard"
		];
		
		for (var i = 0; i < occupationIdArray.length; i++)
		{
			if (occupationIdArray[i] === occupationId)
			{
				document.getElementById(("sec_" + occupationIdArray[i])).style.display = 'block';
			}
			else if (document.getElementById(("sec_" + occupationIdArray[i])) != undefined)
			{
				document.getElementById(("sec_" + occupationIdArray[i])).style.display = 'none';
			}
		}
	}
	
	function addEventToSelected (objEvent)
	{
		selectedEventsArray.push(objEvent);
		document.getElementById("selectedEventsId").innerHTML = "";
		for (var i = 0; i < selectedEventsArray.length; i++)
		{
			document.getElementById("selectedEventsId").innerHTML = (document.getElementById("selectedEventsId").innerHTML) + 
				"<option value='" + selectedEventsArray[i].eventId + "'>" + selectedEventsArray[i].eventName + "</option>";
		}
		updateCharacter();
	}
	
	function removeEventFromSelected (eventIndexes)
	{
		for (var i = eventIndexes.length - 1; i >= 0; i--)
		{
			selectedEventsArray.splice(eventIndexes[i], 1);
		}
		document.getElementById("selectedEventsId").innerHTML = "";
		for (var i = 0; i < selectedEventsArray.length; i++)
		{
			document.getElementById("selectedEventsId").innerHTML = (document.getElementById("selectedEventsId").innerHTML) + 
				"<option value='" + selectedEventsArray[i].eventId + "'>" + selectedEventsArray[i].eventName + "</option>";
		}
		updateCharacter();
	}
	
	function changeEventOrder(eventIndexes, moveDirection)
	{
		moveArrayElements(selectedEventsArray, eventIndexes, moveDirection);
	
		document.getElementById("selectedEventsId").innerHTML = "";
		for (var i = 0; i < selectedEventsArray.length; i++)
		{
			document.getElementById("selectedEventsId").innerHTML = (document.getElementById("selectedEventsId").innerHTML) + 
				"<option value='" + selectedEventsArray[i].eventId + "'>" + selectedEventsArray[i].eventName + "</option>";
		}
		updateCharacter();
	}
	
/*  [0,1,2,3,4,5]  */	

	function addOccupationToSelected (objOccupation)
	{
		selectedOccupationsArray.push(objOccupation);
		updateCharacter();
		document.getElementById("selectedOccupationsId").innerHTML = "";
		for (var i = 0; i < selectedOccupationsArray.length; i++)
		{
			document.getElementById("selectedOccupationsId").innerHTML = (document.getElementById("selectedOccupationsId").innerHTML) + 
				"<option value='" + selectedOccupationsArray[i].occupationtId + "'>" + selectedOccupationsArray[i].occupationName + "</option>";
		}
	}
	
	function removeOccupationFromSelected (occupationIndexes)
	{
		for (var i = occupationIndexes.length - 1; i >= 0; i--)
		{
			selectedOccupationsArray.splice(occupationIndexes[i], 1);
		}
		updateCharacter();
		document.getElementById("selectedOccupationsId").innerHTML = "";
		for (var i = 0; i < selectedOccupationsArray.length; i++)
		{
			document.getElementById("selectedOccupationsId").innerHTML = (document.getElementById("selectedOccupationsId").innerHTML) + 
				"<option value='" + selectedOccupationsArray[i].occupationtId + "'>" + selectedOccupationsArray[i].occupationName + "</option>";
		}
	}
	
	function changeOccupationOrder(occupationIndexes, moveDirection)
	{
		moveArrayElements(selectedOccupationsArray, occupationIndexes, moveDirection);
		
		updateCharacter();
		document.getElementById("selectedOccupationsId").innerHTML = "";
		for (var i = 0; i < selectedOccupationsArray.length; i++)
		{
			document.getElementById("selectedOccupationsId").innerHTML = (document.getElementById("selectedOccupationsId").innerHTML) + 
				"<option value='" + selectedOccupationsArray[i].occupationtId + "'>" + selectedOccupationsArray[i].occupationName + "</option>";
		}
	}
	
	var character = 
	{
		player:"",
		charName:"John Doe",
		race:"High-Man",
		subRace:"",
		gender:"???",
		age:16,
		strSize:"Medium",
		speed:"9m",
		attributes:{agility:{rank:6, exp:0}, power:{rank:6, exp:0}, constitution:{rank:6, exp:0}, erudition:{rank:6, exp:0}, persona:{rank:6, exp:0}, sagacity:{rank:6, exp:0}},
		skills:initSkill(),
		languages:["common"],
		values:{honour:0, morality:2, faith:0},
		virtues:{courage:0, friendliness:0, dignity:0, generosity:0, temperance:0},
		backgrounds:{origin:"", reason:"",motivation:"", events:[], occupations:[]},
		traits:[],
		equipment:[],
		backgroundCost:0,
		
		characterString: function()
			{
				var maxEncumbrance = 0;
				switch (character.strSize)
				{
					case "Small":
						maxEncumbrance = (this.attributes.constitution.rank + this.attributes.power.rank) * 1.5;
					break;
					
					case "Medium":
						maxEncumbrance = (this.attributes.constitution.rank + this.attributes.power.rank) * 2;
					break;
					
					case "Large":
						maxEncumbrance = (this.attributes.constitution.rank + this.attributes.power.rank) * 2.5;
					break;
				}
				var resultString = "<pre><b>Character</b>" +
					"<hr><br>" +
					"<b>Name: </b>" + this.charName +
					"<b>		Race: </b>" + this.race + ", " + this.subRace +
					 "				<b>Background Cost:</b> " + character.backgroundCost + 
					"<br><b>Age: </b>" + this.age +
					"	<b>Gender: </b>" + this.gender +
					"	<b>Size: </b>" + this.strSize + 
					"	<b>Speed: </b>" + this.speed + "m" +
					"	<b>Maximum Spirit: </b>" + (this.attributes.constitution.rank + this.attributes.persona.rank + this.attributes.sagacity.rank) +
					"	<b>Maximum Encumbrance: </b>" + maxEncumbrance +
					"<hr><b>Attributes: </b><br>" +
					"<b>Agility: </b> rank[ " + this.attributes.agility.rank + " ] <small>exp[ " + this.attributes.agility.exp + " ]</small>" +
					"	<b>Power: </b> rank[ " + this.attributes.power.rank + " ] <small>exp[ " + this.attributes.power.exp + " ]</small>" +
					"	<b>Constitution: </b> rank[ " + this.attributes.constitution.rank + " ] <small>exp[ " + this.attributes.constitution.exp + " ]</small><br>" +
					"<b>Erudition: </b> rank[ " + this.attributes.erudition.rank + " ] <small>exp[ " + this.attributes.erudition.exp + " ]</small>" +
					"	<b>Persona: </b> rank[ " + this.attributes.persona.rank + " ] <small>exp[ " + this.attributes.persona.exp + " ]</small>" +
					"	<b>Sagacity: </b> rank[ " + this.attributes.sagacity.rank + " ] <small>exp[ " + this.attributes.sagacity.exp + " ]</small><hr>" +
					"<b>Skills:</b>" + 
					"<table style='width:90%; position:relative; left:5%;text-align:left;'>";
	
					var skillsArray = [];
					
					var countI = 0;
					
					for (var i in this.skills)
					{
						if (this.skills.hasOwnProperty(i))
						{	
							skillsArray[countI] = ("<td><b>" + this.skills[i].strName + ":</b> (" + this.skills[i].strAttribute + ")<br><small>	Exp: [ " + this.skills[i].intExp + " ] Rank: [ " + this.skills[i].intRank + " ]</small>");
							countI += 1;
							
							for (var j in this.skills[i].objSubSkills)
							{
								if (this.skills[i].objSubSkills.hasOwnProperty(j))
								{
									skillsArray[countI] = ("<td><i>    " + this.skills[i].objSubSkills[j].strName + ":</i><br><small>	Exp: [ " + this.skills[i].objSubSkills[j].intExp + " ] Rank: [ " + this.skills[i].objSubSkills[j].intRank + " ]</small>");
									countI += 1;
								}
							}
						}
					}
					
					var numberOfRows = Math.ceil(skillsArray.length / 3)+1;
					for (i = 0; i < numberOfRows; i++)
					{
						resultString += "<tr>";
						resultString += skillsArray[i];
						resultString += skillsArray[i+numberOfRows];
						resultString += skillsArray[i+(numberOfRows * 2)];
					}
					
					resultString += ("</table>" +
					"<hr><b>Languages: </b><br>	" + this.languages.join("<br>	") +
					"<hr><b>Values:<br>	Honour: </b>" + this.values.honour +
					"	<b>Morality: </b>" + this.values.morality +
					"	<b>Faith: </b>" + this.values.faith +
					"<br><b>Virtues:<br>	Courage: </b>" + this.virtues.courage +
					"	<b>Friendliness: </b>" + this.virtues.friendliness +
					"	<b>Dignity: </b>" + this.virtues.dignity +
					"	<b>Generosity: </b>" + this.virtues.generosity +
					"	<b>Temperance: </b>" + this.virtues.temperance +
					"<hr><b>Background:</b><br>" +
					"<b>	Origin: </b>" + this.backgrounds.origin +
					"<br><b>	Life Events: </b><br>	" + this.backgrounds.events.join("<br>	") +
					"<br><b>	Occupations: </b><br>	" + this.backgrounds.occupations.join("<br>	") +
					"<br><b>	Reason to Adventure: </b>" + this.backgrounds.reason +
					"<br><b>	Motivation: </b>" + this.backgrounds.motivation +
					"<br><b>	Traits: </b><br>	" + this.traits.join("<br>	") +
					"<hr><b>Equipment:</b><br>	" + this.equipment.join("<br>	") + 
					"</pre>");
					
				return resultString;
			}
	}
	
	var attExpPerSag = 0;
	var attExpEruPerSag = 0;
	var attExpAgiPow = 0;
	var attExpEruSag = 0;
	var attExpEruPer = 0;
	
	function updateCharacter()
	{
		character = 
		{
			player:"",
			charName:"John Doe",
			race:"High-Man",
			subRace:"Riverlander",
			gender:"???",
			age:16,
			strSize:"Medium",
			speed:9,
			attributes:{agility:{rank:6, exp:0}, power:{rank:6, exp:0}, constitution:{rank:6, exp:0}, erudition:{rank:6, exp:0}, persona:{rank:6, exp:0}, sagacity:{rank:6, exp:0}},
			skills:initSkill(),
			languages:["common"],
			values:{honour:0, morality:2, faith:0},
			virtues:{courage:0, friendliness:0, dignity:0, generosity:0, temperance:0},
			backgrounds:{origin:"", reason:"",motivation:"", events:[], occupations:[], careerPath:[["unemployed"]]},
			traits:[],
			equipment:[],
			backgroundCost:0,
			characterString: function()
				{
					var maxEncumbrance = 0;
					switch (character.strSize)
					{
						case "Small":
							maxEncumbrance = (this.attributes.constitution.rank + this.attributes.power.rank) * 1.5;
						break;
						
						case "Medium":
							maxEncumbrance = (this.attributes.constitution.rank + this.attributes.power.rank) * 2;
						break;
						
						case "Large":
							maxEncumbrance = (this.attributes.constitution.rank + this.attributes.power.rank) * 2.5;
						break;
					}
					var resultString = "<pre><b>Character</b>" +
						"<hr><br>" +
						"<b>Name: </b>" + this.charName +
						"<b>		Race: </b>" + this.race + ", " + this.subRace +
						 "				<b>Background Cost:</b> " + character.backgroundCost + 
						"<br><b>Age: </b>" + this.age +
						"	<b>Gender: </b>" + this.gender +
						"	<b>Size: </b>" + this.strSize + 
						"	<b>Speed: </b>" + this.speed + "m" +
						"	<b>Maximum Spirit: </b>" + (this.attributes.constitution.rank + this.attributes.persona.rank + this.attributes.sagacity.rank) +
						"	<b>Maximum Encumbrance: </b>" + maxEncumbrance +
						"<hr><b>Attributes: </b><br>" +
						"<table style='width:90%; position:relative; left:5%;text-align:left;'><tr>" + 
						"<td><b>Agility: </b><td><small>Exp[ " + this.attributes.agility.exp + " ] Rank[ " + this.attributes.agility.rank + " ]</small>" +
						"<td><b>Power: </b><td><small>Exp[ " + this.attributes.power.exp + " ] Rank[ " + this.attributes.power.rank + " ]</small>" +
						"<td><b>Constitution: </b><td><small>Exp[ " + this.attributes.constitution.exp + " ] Rank[ " + this.attributes.constitution.rank + " ]</small>" +
						"<tr><td><b>Erudition: </b><td><small>Exp[ " + this.attributes.erudition.exp + " ] Rank[ " + this.attributes.erudition.rank + " ]</small>" +
						"<td><b>Persona: </b><td><small>Exp[ " + this.attributes.persona.exp + " ] Rank[ " + this.attributes.persona.rank + " ]</small>" +
						"<td><b>Sagacity: </b><td><small>Exp[ " + this.attributes.sagacity.exp + " ] Rank[ " + this.attributes.sagacity.rank + " ]</small></table><hr>" +
						"<b>Skills:</b>" + 
						"<table style='width:90%; position:relative; left:5%;text-align:left;'>";
	
					var skillsArray = [];
					
					var countI = 0;
					
					for (var i in this.skills)
					{
						if (this.skills.hasOwnProperty(i))
						{	
							skillsArray[countI] = ("<td><b>" + this.skills[i].strName + ":</b> (" + this.skills[i].strAttribute + ")<br><small>	Exp: [ " + this.skills[i].intExp + " ] Rank: [ " + this.skills[i].intRank + " ]</small>");
							countI += 1;
							
							for (var j in this.skills[i].objSubSkills)
							{
								if (this.skills[i].objSubSkills.hasOwnProperty(j))
								{
									skillsArray[countI] = ("<td><i>    " + this.skills[i].objSubSkills[j].strName + ":</i><br><small>	Exp: [ " + this.skills[i].objSubSkills[j].intExp + " ] Rank: [ " + this.skills[i].objSubSkills[j].intRank + " ]</small>");
									countI += 1;
								}
							}
						}
					}
					
					var numberOfRows = Math.ceil(skillsArray.length / 3)+1;
					for (i = 0; i < numberOfRows; i++)
					{
						if (skillsArray[i] != undefined)
						{
							resultString += "<tr>";
							resultString += skillsArray[i];
						}
						if (skillsArray[i+numberOfRows] != undefined)
						{
							resultString += skillsArray[i+numberOfRows];
						}
						if (skillsArray[i+numberOfRows * 2] != undefined)
						{
							resultString += skillsArray[i+(numberOfRows * 2)];
						}
					}
					
					resultString += ("</table>" +
						"<hr><b>Languages: </b><br>	" + this.languages.join("<br>	") +
						"<hr><b>Values:<br>	Honour: </b>" + this.values.honour +
						"	<b>Morality: </b>" + this.values.morality +
						"	<b>Faith: </b>" + this.values.faith +
						"<br><b>Virtues:<br>	Courage: </b>" + this.virtues.courage +
						"	<b>Friendliness: </b>" + this.virtues.friendliness +
						"	<b>Dignity: </b>" + this.virtues.dignity +
						"	<b>Generosity: </b>" + this.virtues.generosity +
						"	<b>Temperance: </b>" + this.virtues.temperance +
						"<hr><b>Background:</b><br>" +
						"<b>	Origin: </b>" + this.backgrounds.origin +
						"<br><b>	Life Events: </b><br>		" + this.backgrounds.events.join("<br>		") +
						"<br><b>	Occupations: </b><br>		" + this.backgrounds.occupations.join("<br>		") +
						"<br><b>	Reason to Adventure: </b>" + this.backgrounds.reason +
						"<br><b>	Motivation: </b>" + this.backgrounds.motivation +
						"<br><b>	Traits: </b><br>		" + this.traits.join("<br>		") +
						"<hr><b>Equipment:</b><br>	" + this.equipment.join("<br>	") + 
						"</pre>");
						
					return resultString;
				}
		};
		
		switch (document.getElementById("selRace").value)
		{
			case "highMan":
				if (document.getElementById("taAgility").value != "" && document.getElementById("taAgility").value != null
					&& document.getElementById("taPower").value != "" && document.getElementById("taPower").value != null
					&& document.getElementById("taConstitution").value != "" && document.getElementById("taConstitution").value != null
					&& document.getElementById("taErudition").value != "" && document.getElementById("taErudition").value != null
					&& document.getElementById("taPersona").value != "" && document.getElementById("taPersona").value != null
					&& document.getElementById("taSagacity").value != "" && document.getElementById("taSagacity").value != null)
				{
					character.attributes.agility.rank = document.getElementById("taAgility").value * 1;
					character.attributes.power.rank = document.getElementById("taPower").value * 1;
					character.attributes.constitution.rank = document.getElementById("taConstitution").value * 1;
					character.attributes.erudition.rank = document.getElementById("taErudition").value * 1;
					character.attributes.persona.rank = document.getElementById("taPersona").value * 1;
					character.attributes.sagacity.rank = document.getElementById("taSagacity").value * 1;
					
					character.skills.meleeCombat.objSubSkills.brawling.intExp += 2;
					character.skills.detectMotive.intExp += 3;
					character.skills.knowledge.objSubSkills.linguistic.intExp += 4;
					character.skills.riding.intExp += 3;
					character.skills.perceptionVigilance.intExp += 2;
					
					character.traits.push("Natural talent");
					character.traits.push("Fast learner");
					
					character.race = "High-Man";
					
					character.age = 16;
					character.strSize = "Medium";
					character.speed = 9;
				
					switch(document.getElementById("selSubraceHighMan").value)
					{
						case "northerner":
							character.subRace = "Northerner";
							character.backgroundCost += 1;
							character.attributes.constitution.exp += 6;
							character.skills.meleeCombat.objSubSkills.oneHanded.intExp += 2;
							character.skills.resistCold.intExp += 4;
							character.skills.seamanship.intExp += 3;
							character.skills.confidenceEgo.intExp += 2;
							character.traits.push("Heat conservation");
							break;
							
						case "riverlander":
							character.subRace = "Riverlander";
							character.backgroundCost += 0;
							character.attributes.sagacity.exp += 6;
							character.skills.rangeCombat.objSubSkills.crossbowsFirearms.intExp += 2;
							character.skills.knowledge.objSubSkills.heraldryNobility.intExp += 4;
							character.skills.survival.intExp += 2;
							character.skills.riding.intExp += 4;
							break;
							
						case "sandman":
							character.subRace = "Sandman";
							character.backgroundCost += 3;
							character.attributes.persona.exp += 6;
							character.skills.appraise.intExp += 2;
							character.skills.charmPersuasion.intExp += 4;
							character.skills.resistHeat.intExp += 4;
							character.skills.sorcery.intExp += 2;
							character.traits.push("Heat expansion");
							if (document.getElementById("highManSandmanBoundToADarkPact").checked)
							{
								character.traits.push("Bound to a Dark Pact");
								character.backgroundCost += 4;
							}
							break;
					}
				}
				else 
				{
					alert("Please choose the attributes of your character.");
					return;
				}
				break;
				
			case "highlander":
				character.attributes.agility.rank = 4;
				character.attributes.power.rank = 7;
				character.attributes.constitution.rank = 7;
				character.attributes.erudition.rank = 6;
				character.attributes.persona.rank = 5;
				character.attributes.sagacity.rank = 6;
				
				character.skills.crafting.intExp += 4;
				character.skills.athleticism.objSubSkills.liftingPushing.intExp += 4;
				character.skills.resistFatigue.intExp += 2;
				character.skills.resistShock.intExp += 2;
				character.skills.resistPoison.intExp += 3;
				
				character.traits.push("Low light vision");
				character.traits.push("Beast of burden");
				
				character.race = "Highland Half-Man";
				
				character.age = 23;
				character.strSize = "Medium";
				character.speed = 7;
				
				switch(document.getElementById("selSubraceHighlander").value)
				{
					case "deepDweller":
						character.subRace = "Deep Dweller";
						character.backgroundCost += 3;
						character.attributes.constitution.exp += 6;
						character.skills.athleticism.intExp += 4;
						character.skills.meleeCombat.objSubSkills.brawling.intExp += 4;
						character.skills.resistFatigue.intExp += 2;
						character.skills.stealth.intExp += 2;
						
						character.traits.push("Dark vision");
						for (i = 0; i < character.traits.length; i++)
						{
							if (character.traits[i] === "Low light vision")
							{
								character.traits.splice(i, 1);						
							}
						}
					break;
					
					case "flatDweller":
						character.subRace = "Flat Dweller";
						character.backgroundCost += 0;
						character.attributes.sagacity.exp += 6;
						character.skills.appraise.intExp += 4;
						character.skills.knowledge.objSubSkills.geography.intExp += 2;
						character.skills.meleeCombat.objSubSkills.polearms.intExp += 2;
						character.skills.crafting.objSubSkills.stonecutting.intExp += 2;
					break;
					
					case "peakDweller":
						character.subRace = "Peak Dweller";
						character.backgroundCost += 1;
						character.attributes.erudition.exp += 6;
						character.skills.meleeCombat.objSubSkills.twoHanded.intExp += 2;
						character.skills.science.objSubSkills.engineeringPhysics.intExp += 4;
						character.skills.knowledge.intExp += 3;
						character.skills.resistCold.intExp += 3;
					break;
				}
	
			break;
				
			case "lowlander" :
				character.attributes.agility.rank = 7;
				character.attributes.power.rank = 4;
				character.attributes.constitution.rank = 5;
				character.attributes.erudition.rank = 6;
				character.attributes.persona.rank = 6;
				character.attributes.sagacity.rank = 7;
				
				character.skills.cooking.intExp += 4;
				character.skills.luck.intExp += 4;
				character.skills.reflex.intExp += 3;
				character.skills.stealth.intExp += 2;
				character.skills.sleightOfHand.intExp += 2;
				
				character.traits.push("Low light vision");
				character.traits.push("Lucky");
				
				character.race = "Lowland Half-Man";
				
				character.age = 18;
				character.strSize = "Small";
				character.speed = 9;
				
				switch(document.getElementById("selSubraceLowlander").value)
				{
					case "hillFolk":
						character.subRace = "Hill Folk";
						character.backgroundCost += 0;
						character.attributes.persona.exp += 6;
						character.skills.artsPerformance.intExp += 4;
						character.skills.charmPersuasion.intExp += 2;
						character.skills.rangeCombat.objSubSkills.slings.intExp += 3;
						character.skills.tamingTraining.intExp += 4;
						
						if (document.getElementById("lowlanderHillFolkTraitMerrymaker").checked)
						{
							character.traits.push("Merrymaker");
							character.backgroundCost += 3;
						}
					break;
					
					case "woodsFolk":
						character.subRace = "Woods Folk";
						character.backgroundCost += 2;
						character.attributes.sagacity.exp += 6;
						character.skills.rangeCombat.objSubSkills.bows.intExp += 2;
						character.skills.perceptionVigilance.intExp += 3;
						character.skills.stealth.intExp += 3;
						character.skills.survival.intExp += 3;
					break;
				}
				
			break;
			
			case "orc" :
				character.attributes.agility.rank = 6;
				character.attributes.power.rank = 7;
				character.attributes.constitution.rank = 6;
				character.attributes.erudition.rank = 4;
				character.attributes.persona.rank = 7;
				character.attributes.sagacity.rank = 5;
				
				character.skills.meleeCombat.objSubSkills.axesMaces.intExp += 3;
				character.skills.athleticism.intExp += 4;
				character.skills.confidenceEgo.intExp += 3;
				character.skills.insultIntimidation.intExp += 3;
				character.skills.resistPain.intExp += 2;
				
				character.traits.push("Fearsome");
				character.traits.push("Strong grip");
				
				character.race = "Orc";
				
				character.age = 15;
				character.strSize = "Medium";
				character.speed = 9;
				
				switch(document.getElementById("selSubraceOrc").value)
				{
					case "blackSkinned":
						character.subRace = "Black Skinned";
						character.backgroundCost += 3;
						character.attributes.constitution.exp += 6;
						character.skills.meleeCombat.objSubSkills.brawling.intExp += 3;
						character.skills.stealth.intExp += 4;
						character.skills.perceptionVigilance.intExp += 1;
						character.skills.resistPain.intExp += 2;
					break;
					
					case "pigRider":
						character.subRace = "Pig Rider";
						character.backgroundCost += 0;
						character.attributes.persona.exp += 6;
						character.skills.meleeCombat.objSubSkills.polearms.intExp += 3;
						character.skills.resistPoison.intExp += 3;
						character.skills.riding.intExp += 4;
						character.skills.tamingTraining.intExp += 2;
					break;
					
					case "tideCrasher":
						character.subRace = "Tide Crasher";
						character.backgroundCost += 1;
						character.attributes.constitution.exp += 6;
						character.skills.rangeCombat.objSubSkills.crossbowsFirearms.intExp += 3;
						character.skills.resistCold.intExp += 3;
						character.skills.seamanship.intExp += 4;
						character.skills.survival.intExp += 2;
					break;
				}
				
			break;
			
			case "goblin" :
				character.attributes.agility.rank = 7;
				character.attributes.power.rank = 4;
				character.attributes.constitution.rank = 6;
				character.attributes.erudition.rank = 7;
				character.attributes.persona.rank = 6;
				character.attributes.sagacity.rank = 5;
				
				character.skills.appraise.intExp += 4;
				character.skills.rangeCombat.objSubSkills.crossbowsFirearms.intExp += 2;
				character.skills.knowledge.intExp += 3;
				character.skills.science.intExp += 3;
				character.skills.stealth.intExp += 3;
				
				character.traits.push("Dark vision");
				character.traits.push("Greed");
				
				character.race = "Goblin";
				
				character.age = 21;
				character.strSize = "Small";
				character.speed = 9;
				
				switch(document.getElementById("selSubraceGoblin").value)
				{
					case "night":
						character.subRace = "Night";
						character.backgroundCost += 3;
						character.attributes.agility.exp += 6;
						character.skills.meleeCombat.objSubSkills.brawling.intExp += 2;
						character.skills.sleightOfHand.intExp += 4;
						character.skills.stealth.intExp += 4;
						character.skills.survival.intExp += 2;
					break;
					
					case "ravenous":
						character.subRace = "Ravenous";
						character.backgroundCost += 0;
						character.attributes.constitution.exp += 6;
						character.skills.charmPersuasion.intExp += 2;
						character.skills.meleeCombat.objSubSkills.polearms.intExp += 2;
						character.skills.resistPoison.intExp += 3;
						character.skills.riding.intExp += 4;
					break;
					
					case "redcap":
						character.subRace = "Redcap";
						character.backgroundCost += 0;
						character.attributes.sagacity.exp += 6;
						character.skills.meleeCombat.objSubSkills.axesMaces.intExp += 2;
						character.skills.confidenceEgo.intExp += 3;
						character.skills.mechanics.intExp += 3;
						character.skills.seamanship.intExp += 4;
					break;
				}
				
			break;
			
			case "hobgoblin" :
				
				character.skills.meleeCombat.objSubSkills.axesMaces.intExp += 2;
				character.skills.athleticism.intExp += 3;
				character.skills.detectMotive.intExp += 4;
				character.skills.insultIntimidation.intExp += 4;
				character.skills.reflex.intExp += 2;
				
				character.traits.push("Low light vision");
				character.traits.push("Infertile");
				character.traits.push("Fearless");
				
				character.race = "Hobgoblin";
				
				character.age = 18;
				character.strSize = "Medium";
				character.speed = 9;
				
				switch(document.getElementById("selSubraceHobgoblin").value)
				{
					case "orcFathered":
						
						if (!(document.getElementsByName("orcFatheredSkills")[0].checked) &&
							!(document.getElementsByName("orcFatheredSkills")[1].checked))
						{
							alert("Please select a skill for your subrace.");
							return;
						}
					
						character.attributes.agility.rank = 7;
						character.attributes.power.rank = 6;
						character.attributes.constitution.rank = 6;
						character.attributes.erudition.rank = 4;
						character.attributes.persona.rank = 7;
						character.attributes.sagacity.rank = 5;
					
						character.subRace = "Fathered by an Orc";
						character.backgroundCost += 3;
						character.skills.meleeCombat.objSubSkills.axesMaces.intExp += 2;
						character.skills.confidenceEgo.intExp += 3;
						character.skills.insultIntimidation.intExp += 3;
						if (document.getElementsByName("orcFatheredSkills")[0].checked)
						{
						character.skills.seamanship.intExp += 4;	
						}
						else 
						{
							character.skills.tamingTraining.intExp += 4;
						}
					break;
					
					case "goblinFathered":
						if (!(document.getElementsByName("goblinFatheredSkills")[0].checked) &&
							!(document.getElementsByName("goblinFatheredSkills")[1].checked))
						{
							alert("Please select a skill for your subrace.");
							return;
						}
					
						character.attributes.agility.rank = 7;
						character.attributes.power.rank = 4;
						character.attributes.constitution.rank = 6;
						character.attributes.erudition.rank = 6;
						character.attributes.persona.rank = 7;
						character.attributes.sagacity.rank = 5;
					
						character.subRace = "Fathered by a Goblin";
						character.backgroundCost += 0;
						character.skills.rangeCombat.objSubSkills.crossbowsFirearms.intExp += 2;
						character.skills.knowledge.intExp += 3;
						character.skills.science.intExp += 3;
						if ((document.getElementsByName("goblinFatheredSkills")[1]).checked)
						{
						character.skills.mechanics.intExp += 4;	
						}
						else 
						{
							character.skills.appraise.intExp += 4;
						}
					break;
				}
				
			break;
			
			case "elf" :
				character.attributes.agility.rank = 7;
				character.attributes.power.rank = 6;
				character.attributes.constitution.rank = 4;
				character.attributes.erudition.rank = 7;
				character.attributes.persona.rank = 5;
				character.attributes.sagacity.rank = 6;
				
				character.skills.rangeCombat.objSubSkills.bows.intExp += 2;
				character.skills.reflex.intExp += 3;
				character.skills.resistHunger.intExp += 4;
				character.skills.stealth.intExp += 3;
				character.skills.perceptionVigilance.intExp += 3;
				
				character.traits.push("Ascetic");
				character.traits.push("Nimble feet");
				character.traits.push("Spirit tree");
				
				character.race = "Elf";
				
				character.age = 35;
				character.strSize = "Medium";
				character.speed = 9;
				
				switch(document.getElementById("selSubraceElf").value)
				{
					case "seelie":
						character.subRace = "Summer Court";
						character.backgroundCost += 0;
						character.attributes.persona.exp += 6;
						character.skills.meleeCombat.objSubSkills.oneHanded.intExp += 2;
						character.skills.artsPerformance.intExp += 4;
						character.skills.charmPersuasion.intExp += 4;
						character.skills.resistHeat.intExp += 2;
					break;
					
					case "unseelie":
						character.subRace = "Winter Court";
						character.backgroundCost += 1;
						character.attributes.sagacity.exp += 6;
						character.skills.meleeCombat.objSubSkills.twoHanded.intExp += 2;
						character.skills.detectMotive.intExp += 3;
						character.skills.perceptionVigilance.intExp += 4;
						character.skills.resistCold.intExp += 3;
					break;
					
					case "twilight":
						character.subRace = "Twilight Court";
						character.backgroundCost += 3;
						character.attributes.erudition.exp += 6;
						character.skills.elementalism.intExp += 2;
						character.skills.knowledge.intExp += 4;
						character.skills.stealth.intExp += 3;
						character.skills.resistFatigue.intExp += 3;
					break;
				}
				
			break;
			
			case "faun" :
				character.skills.crafting.intExp += 4;
				character.skills.luck.intExp += 4;
				character.skills.meleeCombat.objSubSkills.polearms.intExp += 2;
				character.skills.survival.intExp += 2;
				character.skills.tamingTraining.intExp += 3;
				
				character.traits.push("Animal whisperer");
				character.traits.push("Hoofed feet");
				character.traits.push("Horned head");
				
				character.race = "Faun";
				
				character.age = 16;
				character.speed = 11;
				
				switch(document.getElementById("selSubraceFaun").value)
				{
					case "autumnBorn":
						character.attributes.agility.rank = 5;
						character.attributes.power.rank = 7;
						character.attributes.constitution.rank = 7;
						character.attributes.erudition.rank = 4;
						character.attributes.persona.rank = 6;
						character.attributes.sagacity.rank = 7;
						
						character.subRace = "Autumn Born";
						character.backgroundCost += 0;
						character.skills.athleticism.intExp += 4;
						character.skills.detectMotive.intExp += 3;
						character.skills.meleeCombat.objSubSkills.polearms.intExp += 2;
						character.skills.resistCold.intExp += 3;
						
						character.strSize = "Medium";
					break;
					
					case "springBorn":
						character.attributes.agility.rank = 7;
						character.attributes.power.rank = 4;
						character.attributes.constitution.rank = 5;
						character.attributes.erudition.rank = 6;
						character.attributes.persona.rank = 7;
						character.attributes.sagacity.rank = 7;
					
						character.subRace = "Spring Born";
						character.backgroundCost += 0;
						character.skills.acrobatics.intExp += 3;
						character.skills.artsPerformance.intExp += 4;
						character.skills.rangeCombat.objSubSkills.slings.intExp += 2;
						character.skills.stealth.intExp += 3;
						
						character.strSize = "Small";
						if (document.getElementById("faunSpringBornTraitMerrymaker").checked)
						{
							character.traits.push("Merrymaker");
							character.backgroundCost += 3;
						}
					break;
				}
				
			break;
			
			case "troll" :
				character.attributes.agility.rank = 6;
				character.attributes.power.rank = 7;
				character.attributes.constitution.rank = 8;
				character.attributes.erudition.rank = 4;
				character.attributes.persona.rank = 5;
				character.attributes.sagacity.rank = 4;
				
				character.skills.meleeCombat.objSubSkills.axesMaces.intExp += 2;
				character.skills.athleticism.intExp += 3;
				character.skills.insultIntimidation.intExp += 3;
				character.skills.naturalHealing.intExp += 4;
				character.skills.resistPain.intExp += 3;
				
				character.traits.push("Dark vision");
				character.traits.push("Fearsome");
				character.traits.push("Regeneration");
				character.traits.push("Turning to stone");
				
				character.race = "Troll";
				
				character.age = 15;
				character.strSize = "Large";
				character.speed = 9;
				
				switch(document.getElementById("selSubraceTroll").value)
				{
					case "basalt":
						character.subRace = "Basalt Clan";
						character.backgroundCost += 3;
						character.attributes.sagacity.exp += 6;
						character.skills.meleeCombat.objSubSkills.brawling.intExp += 3;
						character.skills.detectMotive.intExp += 3;
						character.skills.survival.intExp += 3;
						character.skills.stealth.intExp += 3;
					break;
					
					case "dirt":
						character.subRace = "Dirt Clan";
						character.backgroundCost += 1;
						character.attributes.agility.exp += 6;
						character.skills.acrobatics.intExp += 3;
						character.skills.cooking.intExp += 3;
						character.skills.crafting.intExp += 4;
						character.skills.reflex.intExp += 3;
						character.skills.rangeCombat.objSubSkills.thrown.intExp += 2;
					break;
					
					case "granite":
						character.subRace = "Granite Clan";
						character.backgroundCost += 0;
						character.attributes.constitution.exp += 6;
						character.skills.meleeCombat.objSubSkills.axesMaces.intExp += 2;
						character.skills.resistCold.intExp += 3;
						character.skills.resistPain.intExp += 3;
						character.skills.resistShock.intExp += 4;
					break;
					
					case "sand":
						character.subRace = "Sand Clan";
						character.backgroundCost += 3;
						character.attributes.persona.exp += 6;
						character.skills.confidenceEgo.intExp += 3;
						character.skills.insultIntimidation.intExp += 3;
						character.skills.perceptionVigilance.intExp += 4;
						character.skills.meleeCombat.objSubSkills.polearms.intExp += 2;
					break;
				}
				
			break;
		}
		
		switch (document.getElementById("selOrigin").value)
		{
			case "highMenCity":
				
				switch (character.race)
				{
					case "High-Man":
						character.backgroundCost += 0;
					break;
					case "Highland Half-Man":
						character.backgroundCost += 2;
					break;
					case "Lowland Half-Man":
						character.backgroundCost += 1;
					break;
					case "Orc":
						character.backgroundCost += 3;
					break;
					case "Goblin":
						character.backgroundCost += 1;
					break;
					case "Hobgoblin":
						character.backgroundCost += 1;
					break;
					case "Elf":
						character.backgroundCost += 4;
					break;
					case "Faun":
						character.backgroundCost += 3;
					break;
					case "Troll":
						character.backgroundCost += 6;
					break;
				}
				
				character.backgrounds.origin = "High-Men City";
				
				character.skills.appraise.intExp += 4;
				character.skills.artsPerformance.intExp += 2;
				character.skills.charmPersuasion.intExp += 2;
				character.skills.knowledge.objSubSkills.heraldryNobility.intExp += 3;
				character.skills.insultIntimidation.intExp += 4;
				character.skills.knowledge.objSubSkills.linguistic.intExp += 3;
				
				if (document.getElementById("highMenCityTraitUrban").checked)
				{
					character.traits.push("Urban");
				}
				
				character.backgrounds.careerPath[0].push("commerce");
				character.backgrounds.careerPath[0].push("maritime");
				character.backgrounds.careerPath[0].push("unemployed");
				character.backgrounds.careerPath[0].push("service");
			break;
			
			case "highMenTown":
				
				switch (character.race)
				{
					case "High-Man":
						character.backgroundCost += 0;
					break;
					case "Highland Half-Man":
						character.backgroundCost += 3;
					break;
					case "Lowland Half-Man":
						character.backgroundCost += 2;
					break;
					case "Orc":
						character.backgroundCost += 4;
					break;
					case "Goblin":
						character.backgroundCost += 3;
					break;
					case "Hobgoblin":
						character.backgroundCost += 4;
					break;
					case "Elf":
						character.backgroundCost += 4;
					break;
					case "Faun":
						character.backgroundCost += 3;
					break;
					case "Troll":
						alert("You cannot choose High-Men Town as origin if you are a Troll.");
						return;
					break;
				}
				
				character.backgrounds.origin = "High-Men Town";
				
				character.skills.meleeCombat.objSubSkills.brawling.intExp += 2;
				character.skills.crafting.intExp += 4;
				character.skills.charmPersuasion.intExp += 2;
				character.skills.mechanics.intExp += 3;
				character.skills.riding.intExp += 4;
				
				character.backgrounds.careerPath[0].push("crafts");
				character.backgrounds.careerPath[0].push("commerce");
				character.backgrounds.careerPath[0].push("maritime");
				character.backgrounds.careerPath[0].push("service");
				character.backgrounds.careerPath[0].push("primary");
			break;
			
			case "highMenVillage":
				
				switch (character.race)
				{
					case "High-Man":
						character.backgroundCost += 0;
					break;
					case "Highland Half-Man":
						character.backgroundCost += 5;
					break;
					case "Lowland Half-Man":
						character.backgroundCost += 4;
					break;
					case "Orc":
						alert("You cannot choose High-Men Village as origin if you are an Orc.");
						return;
					break;
					case "Goblin":
						character.backgroundCost += 5;
					break;
					case "Hobgoblin":
						alert("You cannot choose High-Men Town as origin if you are a Hobgoblin.");
						return;
					break;
					case "Elf":
						character.backgroundCost += 6;
					break;
					case "Faun":
						character.backgroundCost += 4;
					break;
					case "Troll":
						alert("You cannot choose High-Men Town as origin if you are a Troll.");
						return;
					break;
				}
				
				character.backgrounds.origin = "High-Men Village";
				
				character.skills.athleticism.intExp += 3;
				character.skills.meleeCombat.objSubSkills.brawling.intExp += 2;
				character.skills.crafting.intExp += 3;
				character.skills.mechanics.intExp += 3;
				character.skills.riding.intExp += 3;
				character.skills.tamingTraining.intExp += 4;
				
				character.backgrounds.careerPath[0].push("primary");
			break;
			
			case "highlanderCitadel":
				
				switch (character.race)
				{
					case "High-Man":
						character.backgroundCost += 4;
					break;
					case "Highland Half-Man":
						character.backgroundCost += 0;
					break;
					case "Lowland Half-Man":
						character.backgroundCost += 2;
					break;
					case "Orc":
						alert("You cannot choose Highlander Citadel as origin if you are an Orc.");
						return;
					break;
					case "Goblin":
						character.backgroundCost += 4;
					break;
					case "Hobgoblin":
						alert("You cannot choose Highlander Citadel as origin if you are a Hobgoblin.");
						return;
					break;
					case "Elf":
						character.backgroundCost += 6;
					break;
					case "Faun":
						character.backgroundCost += 5;
					break;
					case "Troll":
						alert("You cannot choose Highlander Citadel as origin if you are a Troll.");
						return;
					break;
				}
				
				character.backgrounds.origin = "Highlander Citadel";
				
				character.skills.appraise.intExp += 4;
				character.skills.crafting.intExp += 4;
				character.skills.deductionLogic.intExp += 3;
				character.skills.detectMotive.intExp += 3;
				character.skills.meleeCombat.intExp += 2;
				character.skills.perceptionVigilance.intExp += 2;
				
				if (document.getElementById("highlanderCitadelTraitBornUnderground").checked)
				{
					character.traits.push("Born Underground");
				}
				
				character.backgrounds.careerPath[0].push("crafts");
				character.backgrounds.careerPath[0].push("commerce");
				character.backgrounds.careerPath[0].push("military");
				character.backgrounds.careerPath[0].push("Scholar");
			break;
			
			case "lowlanderVillage":
				
				switch (character.race)
				{
					case "High-Man":
						character.backgroundCost += 3;
					break;
					case "Highland Half-Man":
						character.backgroundCost += 3;
					break;
					case "Lowland Half-Man":
						character.backgroundCost += 0;
					break;
					case "Orc":
						character.backgroundCost += 5;
					break;
					case "Goblin":
						character.backgroundCost += 4;
					break;
					case "Hobgoblin":
						character.backgroundCost += 5;
					break;
					case "Elf":
						character.backgroundCost += 4;
					break;
					case "Faun":
						character.backgroundCost += 3;
					break;
					case "Troll":
						alert("You cannot choose Lowlander Village as origin if you are a Troll.");
						return;
					break;
				}
				
				character.backgrounds.origin = "Lowlander Village";
				
				character.skills.artsPerformance.intExp += 2;
				character.skills.survival.objSubSkills.foragingHunting.intExp += 4;
				character.skills.perceptionVigilance.intExp += 2;
				character.skills.rangeCombat.intExp += 2;
				character.skills.stealth.intExp += 4;
				character.skills.survival.intExp += 3;
				
				character.backgrounds.careerPath[0].push("arts");
				character.backgrounds.careerPath[0].push("crafts");
				character.backgrounds.careerPath[0].push("commerce");
				character.backgrounds.careerPath[0].push("primary");
				character.backgrounds.careerPath[0].push("service");
			break;
			
			case "orchishHamlet":
				
				switch (character.race)
				{
					case "High-Man":
						character.backgroundCost += 3;
					break;
					case "Highland Half-Man":
						alert("You cannot choose Orchish Hamlet as origin if you are a Highland Half-Man.");
						return;
					break;
					case "Lowland Half-Man":
						character.backgroundCost += 5;
					break;
					case "Orc":
						character.backgroundCost += 0;
					break;
					case "Goblin":
						character.backgroundCost += 0;
					break;
					case "Hobgoblin":
						character.backgroundCost += 0;
					break;
					case "Elf":
						alert("You cannot choose Orchish Hamlet as origin if you are an Elf.");
						return;
					break;
					case "Faun":
						character.backgroundCost += 4;
					break;
					case "Troll":
						character.backgroundCost += 6;
					break;
				}
				
				character.backgrounds.origin = "Orchish Hamlet";
				
				character.skills.athleticism.intExp += 4;
				character.skills.confidenceEgo.intExp += 3;
				character.skills.insultIntimidation.intExp += 3;
				character.skills.meleeCombat.intExp += 2;
				character.skills.tamingTraining.intExp += 3;
				if (document.getElementsByName("orchishHamletSkills")[0].checked)
				{
					character.skills.seamanship.intExp += 3;	
				}
				else 
				{
					character.skills.riding.intExp += 3;
				}
		
				character.backgrounds.careerPath[0].push("crafts");
				character.backgrounds.careerPath[0].push("military");
				character.backgrounds.careerPath[0].push("primary");
			break;
			
			case "elvenVillage":
				
				switch (character.race)
				{
					case "High-Man":
						character.backgroundCost += 5;
					break;
					case "Highland Half-Man":
						alert("You cannot choose Elven Village as origin if you are a Highland Half-Man.");
						return;
					break;
					case "Lowland Half-Man":
						character.backgroundCost += 3;
					break;
					case "Orc":
						alert("You cannot choose Elven Village as origin if you are an Orc.");
						return;
					break;
					case "Goblin":
						alert("You cannot choose Elven Village as origin if you are a Goblin.");
						return;
					break;
					case "Hobgoblin":
						alert("You cannot choose Elven Village as origin if you are a Hobgoblin.");
						return;
					break;
					case "Elf":
						character.backgroundCost += 0;
					break;
					case "Faun":
						character.backgroundCost += 2;
					break;
					case "Troll":
						character.backgroundCost += 5;
					break;
				}
				
				character.backgrounds.origin = "Elven Village";
				
				character.skills.acrobatics.intExp += 3;
				character.skills.artsPerformance.intExp += 3;
				character.skills.charmPersuasion.intExp += 3;
				character.skills.elementalism.intExp += 2;
				character.skills.knowledge.intExp += 3;
				character.skills.survival.intExp += 4;
				
				if (document.getElementById("elvenVillageTraitCommandOfTheElements").checked)
				{
					character.traits.push("Command of the Elements");
					character.backgroundCost += 4;
				}
				
				character.backgrounds.careerPath[0].push("arts");
				character.backgrounds.careerPath[0].push("government");
				character.backgrounds.careerPath[0].push("primary");
				character.backgrounds.careerPath[0].push("scholar");
			break;
			
			case "faunCommunity":
				
				switch (character.race)
				{
					case "High-Man":
						character.backgroundCost += 5;
					break;
					case "Highland Half-Man":
						alert("You cannot choose Faun Community as origin if you are an Highland Half-Man.");
						return;
					break;
					case "Lowland Half-Man":
						character.backgroundCost += 3;
					break;
					case "Orc":
						character.backgroundCost += 5;
					break;
					case "Goblin":
						character.backgroundCost += 4;
					break;
					case "Hobgoblin":
						character.backgroundCost += 6;
					break;
					case "Elf":
						character.backgroundCost += 3;
					break;
					case "Faun":
						character.backgroundCost += 0;
					break;
					case "Troll":
						character.backgroundCost += 5;
					break;
				}
				
				character.backgrounds.origin = "Faun Community";
				
				character.skills.artsPerformance.intExp += 3;
				character.skills.crafting.intExp += 4;
				character.skills.perceptionVigilance.intExp += 2;
				character.skills.tamingTraining.intExp += 3;
				character.skills.shamanism.intExp += 2;
				character.skills.survival.intExp += 4;
				
				if (document.getElementById("faunCommunityTraitChildOfTheWild").checked)
				{
					character.traits.push("Child of the Wild");
				}
				
				if (document.getElementById("faunCommunityTraitInTouchWithSpirits").checked)
				{
					character.traits.push("In Touch With Spirits");
					character.backgroundCost += 4;
				}
				
				character.backgrounds.careerPath[0].push("arts");
				character.backgrounds.careerPath[0].push("crafts");
				character.backgrounds.careerPath[0].push("commerce");
				character.backgrounds.careerPath[0].push("primary");
				character.backgrounds.careerPath[0].push("scholar");
			break;
			
			case "trollCamp":
				
				switch (character.race)
				{
					case "High-Man":
						character.backgroundCost += 6;
					break;
					case "Highland Half-Man":
						character.backgroundCost += 6;
					break;
					case "Lowland Half-Man":
						character.backgroundCost += 6;
					break;
					case "Orc":
						alert("You cannot choose Troll Camp as origin if you are an Orc.");
						return;
					break;
					case "Goblin":
						character.backgroundCost += 4;
					break;
					case "Hobgoblin":
						character.backgroundCost += 6;
					break;
					case "Elf":
						character.backgroundCost += 5;
					break;
					case "Faun":
						character.backgroundCost += 4;
					break;
					case "Troll":
						character.backgroundCost += 0;
					break;
				}
				
				character.backgrounds.origin = "Troll Camp";
				
				character.skills.insultIntimidation.intExp += 4;
				character.skills.meleeCombat.intExp += 2;
				character.skills.perceptionVigilance.intExp += 2;
				character.skills.resistFatigue.intExp += 3;
				character.skills.resistPain.intExp += 4;
				character.skills.torture.intExp += 3;
				
				if (document.getElementById("trollCampTraitBornUnderground").checked)
				{
					character.traits.push("Born Underground");
				}
				
				character.backgrounds.careerPath[0].push("crafts");
				character.backgrounds.careerPath[0].push("military");
			break;
			
			case "inTheWild":
				
				switch (character.race)
				{
					case "High-Man":
						character.backgroundCost += 6;
					break;
					case "Highland Half-Man":
						character.backgroundCost += 6;
					break;
					case "Lowland Half-Man":
						character.backgroundCost += 3;
					break;
					case "Orc":
						character.backgroundCost += 4;
					break;
					case "Goblin":
						character.backgroundCost += 6;
					break;
					case "Hobgoblin":
						character.backgroundCost += 3;
					break;
					case "Elf":
						character.backgroundCost += 2;
					break;
					case "Faun":
						character.backgroundCost += 2;
					break;
					case "Troll":
						character.backgroundCost += 3;
					break;
				}
				
				character.backgrounds.origin = "In the Wild";
				
				character.skills.perceptionVigilance.intExp += 3;
				character.skills.resistHunger.intExp += 3;
				character.skills.survival.intExp += 4;
				character.skills.tamingTraining.intExp += 3;
				character.skills.witchcraft.intExp += 2;
				if (document.getElementsByName("inTheWildSkills")[0].checked)
				{
					character.skills.resistCold.intExp += 3;	
				}
				else 
				{
					character.skills.resistHeat.intExp += 3;
				}
				
				if (document.getElementById("inTheWildTraitChildOfTheWild").checked)
				{
					character.traits.push("Child of the Wild");
				}
				if (document.getElementById("inTheWildTraitKeeperOfTheOldWays").checked)
				{
					character.traits.push("Keeper of the Old Ways");
					character.backgroundCost += 4;
				}
				
				character.backgrounds.careerPath[0].push("criminal");
				character.backgrounds.careerPath[0].push("scholar");
				character.backgrounds.careerPath[0].push("unemployed");
			break;
	
		}
		
		for (var i = 0; i < selectedEventsArray.length; i++)
		{
			switch (selectedEventsArray[i].eventId)
			{
				case "parentHasBeenExecutedRightfully":
					character.skills.insultIntimidation.intExp += 3;
					character.skills.perceptionVigilance.intExp += 3;
					switch (selectedEventsArray[i].eventOpt1)
					{
						case "brawling":
							character.skills.meleeCombat.objSubSkills.brawling.intExp += 2;
						break;
						case "sorcery":
							character.skills.sorcery.intExp += 2;
						break;
					}
					character.backgrounds.events.push(selectedEventsArray[i].eventName);
					character.backgroundCost += selectedEventsArray[i].eventCost;
				break;
				
				case "parentHasBeenExecutedWrongfully":
					character.skills.deductionLogic.intExp += 3;
					character.skills.detectMotive.intExp += 3;
					character.skills.lawsLegalSystems.intExp += 3;
					
					character.backgrounds.events.push(selectedEventsArray[i].eventName);
					character.backgroundCost += selectedEventsArray[i].eventCost;
				break;
				
				case "parentHasBeenMurdered":
					character.skills.deductionLogic.intExp += 3;
					character.skills.detectMotive.intExp += 3;
					character.skills.perceptionVigilance.intExp += 3;
					
					character.backgrounds.events.push(selectedEventsArray[i].eventName);
					character.backgroundCost += selectedEventsArray[i].eventCost;
				break;
				
				case "parentDiedAtWar":
					character.skills.knowledge.objSubSkills.heraldryNobility.intExp += 3;
					character.skills.insultIntimidation.intExp += 3;
					switch (selectedEventsArray[i].eventOpt1)
					{
						case "meleeCombat":
							character.skills.meleeCombat.intExp += 3;
						break;
						case "rangeCombat":
							character.skills.rangeCombat.intExp += 3;
						break;
					}
					character.backgrounds.events.push(selectedEventsArray[i].eventName);
					character.backgroundCost += selectedEventsArray[i].eventCost;
				break;
				
				case "parentDiedFromWar":
					character.skills.perceptionVigilance.intExp += 4;
					character.skills.stealth.intExp += 3;
					character.skills.survival.intExp += 3;
					
					character.backgrounds.events.push(selectedEventsArray[i].eventName);
					character.backgroundCost += selectedEventsArray[i].eventCost;
				break;
				
				case "parentDiedFromDisease":
					character.skills.science.objSubSkills.medicine.intExp += 3;
					character.skills.mysticism.intExp += 2;
					character.skills.naturalHealing.intExp += 4;
					
					character.backgrounds.events.push(selectedEventsArray[i].eventName);
					character.backgroundCost += selectedEventsArray[i].eventCost;
				break;
				
				case "almostDrown":
					character.skills.athleticism.objSubSkills.swimming.intExp += 3;
					character.skills.seamanship.intExp += 4;
					switch (selectedEventsArray[i].eventOpt1)
					{
						case "water":
							character.skills.elementalism.objSubSkills.water.intExp += 2;
						break;
						case "lakesRivers":
							character.skills.shamanism.objSubSkills.lakesRivers.intExp += 2;
						break;
					}
					character.backgrounds.events.push(selectedEventsArray[i].eventName);
					character.backgroundCost += selectedEventsArray[i].eventCost;
				break;
				
				case "becameAnOrphan":
					character.skills.resistHunger.intExp += 3;
					character.skills.sleightOfHand.intExp += 3;
					switch (selectedEventsArray[i].eventOpt1)
					{
						case "resistCold":
							character.skills.resistCold.intExp += 3;
						break;
						case "resistHeat":
							character.skills.resistHeat.intExp += 3;
						break;
					}
					character.backgrounds.events.push(selectedEventsArray[i].eventName);
					character.backgroundCost += selectedEventsArray[i].eventCost;
				break;
				
				case "becameSeriouslySick":
					character.skills.naturalHealing.intExp += 4;
					character.skills.resistPain.intExp += 3;
					switch (selectedEventsArray[i].eventOpt1)
					{
						case "mysticism":
							character.skills.mysticism.intExp += 2;
						break;
						case "sorcery":
							character.skills.sorcery.intExp += 2;
						break;
					}
					character.backgrounds.events.push(selectedEventsArray[i].eventName);
					character.backgroundCost += selectedEventsArray[i].eventCost;
				break;
				
				case "beenAttackedByCriminals":
					character.skills.meleeCombat.intExp += 2;
					character.skills.naturalHealing.intExp += 3;
					character.skills.perceptionVigilance.intExp += 4;
					
					character.backgrounds.events.push(selectedEventsArray[i].eventName);
					character.backgroundCost += selectedEventsArray[i].eventCost;
				break;
				
				case "beenExiled":
					character.skills.insultIntimidation.intExp += 3;
					character.skills.survival.intExp += 3;
					character.skills.witchcraft.intExp += 3;
					
					character.backgrounds.events.push(selectedEventsArray[i].eventName);
					character.backgroundCost += selectedEventsArray[i].eventCost;
				break;
				
				case "beenLeftForDead":
					character.skills.naturalHealing.intExp += 4;
					character.skills.resistPain.intExp += 3;
					switch (selectedEventsArray[i].eventOpt1)
					{
						case "mysticism":
							character.skills.mysticism.intExp += 2;
						break;
						case "sorcery":
							character.skills.sorcery.intExp += 2;
						break;
					}
					character.backgrounds.events.push(selectedEventsArray[i].eventName);
					character.backgroundCost += selectedEventsArray[i].eventCost;
				break;
				
				case "beenRaisedByAnHermit":
					character.skills.survival.intExp += 4;
					switch (selectedEventsArray[i].eventOpt1)
					{
						case "botany":
							character.skills.science.objSubSkills.botany.intExp += 3;
						break;
						case "zoology":
							character.skills.science.objSubSkills.zoology.intExp += 3;
						break;
					}
					switch (selectedEventsArray[i].eventOpt2)
					{
						case "shamanism":
							character.skills.shamanism.intExp += 2;
						break;
						case "witchcraft":
							character.skills.witchcraft.intExp += 2;
						break;
					}
					character.backgrounds.events.push(selectedEventsArray[i].eventName);
					character.backgroundCost += selectedEventsArray[i].eventCost;
				break;
				
				case "beenSeverelyBurnt":
					character.skills.elementalism.objSubSkills.fire.intExp += 2;
					character.skills.naturalHealing.intExp += 4;
					character.skills.perceptionVigilance.intExp += 3;
					
					character.backgrounds.events.push(selectedEventsArray[i].eventName);
					character.backgroundCost += selectedEventsArray[i].eventCost;
				break;
				
				case "beenToAGoodSchool":
					character.skills.deductionLogic.intExp += 3;
					character.skills.knowledge.intExp += 3;
					character.skills.science.intExp += 3;
					
					character.backgrounds.events.push(selectedEventsArray[i].eventName);
					character.backgroundCost += selectedEventsArray[i].eventCost;
				break;
				
				case "beenToAnOrphanage":
					character.skills.meleeCombat.objSubSkills.brawling.intExp += 2;
					character.skills.insultIntimidation.intExp += 4;
					character.skills.resistHunger.intExp += 3;
					
					character.backgrounds.events.push(selectedEventsArray[i].eventName);
					character.backgroundCost += selectedEventsArray[i].eventCost;
				break;
				
				case "bornANoble":
					character.skills.knowledge.objSubSkills.heraldryNobility.intExp += 4;
					character.skills.lawsLegalSystems.intExp += 3;
					character.skills.meleeCombat.intExp += 2;
					
					character.backgrounds.events.push(selectedEventsArray[i].eventName);
					character.backgroundCost += selectedEventsArray[i].eventCost;
					character.backgrounds.careerPath[0].push("government");
					character.backgrounds.careerPath[0].push("military");
				break;
				
				case "bornASlave":
					character.skills.athleticism.objSubSkills.liftingPushing.intExp += 4;
					character.skills.resistHunger.intExp += 3;
					character.skills.resistPain.intExp += 3;
					
					character.backgrounds.events.push(selectedEventsArray[i].eventName);
					character.backgroundCost += selectedEventsArray[i].eventCost;
				break;
				
				case "enteredAnElementalismWizardrySchool":
					character.skills.knowledge.intExp += 2;
					character.skills.science.intExp += 3;
					switch (selectedEventsArray[i].eventOpt1)
					{
						case "elementalism":
							character.skills.elementalism.intExp += 4;
						break;
						case "wizardry":
							character.skills.wizardry.intExp += 4;
						break;
					}
					character.backgrounds.events.push(selectedEventsArray[i].eventName);
					character.backgroundCost += selectedEventsArray[i].eventCost;
					character.backgrounds.careerPath[0].push("scholar");
				break;
				
				case "gotAChild":
					character.skills.cooking.intExp += 3;
					character.skills.perceptionVigilance.intExp += 3;
					character.skills.resistFatigue.intExp += 3;
					
					character.backgrounds.events.push(selectedEventsArray[i].eventName);
					character.backgroundCost += selectedEventsArray[i].eventCost;
				break;
				
				case "hasARichRelative":
					character.skills.appraise.intExp += 4;
					character.skills.charmPersuasion.intExp += 3;
					character.skills.luck.intExp += 3;
					
					character.backgrounds.events.push(selectedEventsArray[i].eventName);
					character.backgroundCost += selectedEventsArray[i].eventCost;
				break;
				
				case "joinedAReligiousOrder":
					character.skills.confidenceEgo.intExp += 3;
					character.skills.mysticism.intExp += 2;
					character.skills.knowledge.objSubSkills.religions.intExp += 4;
					
					character.backgrounds.events.push(selectedEventsArray[i].eventName);
					character.backgroundCost += selectedEventsArray[i].eventCost;
					character.backgrounds.careerPath[0].push("religious");
				break;
				
				case "joinedAStreetGang":
					character.skills.meleeCombat.objSubSkills.brawling.intExp += 2;
					character.skills.insultIntimidation.intExp += 3;
					character.skills.sleightOfHand.intExp += 4;
					
					character.backgrounds.events.push(selectedEventsArray[i].eventName);
					character.backgroundCost += selectedEventsArray[i].eventCost;
					character.backgrounds.careerPath[0].push("criminals");
					character.values.honour -= 1;
					character.values.morality -= 1;
					
				break;
				
				case "killedSomeone":
					character.skills.detectMotive.intExp += 3;
					character.skills.insultIntimidation.intExp += 4;
					switch (selectedEventsArray[i].eventOpt1)
					{
						case "meleeCombat":
							character.skills.meleeCombat.intExp += 2;
						break;
						case "rangeCombat":
							character.skills.rangeCombat.intExp += 2;
						break;
					}
					character.backgrounds.events.push(selectedEventsArray[i].eventName);
					character.backgroundCost += selectedEventsArray[i].eventCost;
				break;
				
				case "lostAParentDueToExposureStarvation":
					character.skills.resistHunger.intExp += 4;
					switch (selectedEventsArray[i].eventOpt1)
					{
						case "elementalism":
							character.skills.elementalism.intExp += 2;
						break;
						case "mysticism":
							character.skills.mysticism.intExp += 2;
						break;
					}
					switch (selectedEventsArray[i].eventOpt2)
					{
						case "resistCold":
							character.skills.resistCold.intExp += 3;
						break;
						case "resistHeat":
							character.skills.resistHeat.intExp += 3;
						break;
					}
					character.backgrounds.events.push(selectedEventsArray[i].eventName);
					character.backgroundCost += selectedEventsArray[i].eventCost;
				break;
				
				case "motherDiedInChildbirth":
					character.skills.confidenceEgo.intExp += 4;
					character.skills.cooking.intExp += 3;
					character.skills.science.objSubSkills.medicine.intExp += 2;
					
					character.backgrounds.events.push(selectedEventsArray[i].eventName);
					character.backgroundCost += selectedEventsArray[i].eventCost;
				break;
				
				case "neglectfulChildhood":
					character.skills.resistHunger.intExp += 4;
					character.skills.sleightOfHand.intExp += 4;
					switch (selectedEventsArray[i].eventOpt1)
					{
						case "slings":
							character.skills.rangeCombat.objSubSkills.slings.intExp += 2;
						break;
						case "thrown":
							character.skills.rangeCombat.objSubSkills.thrown.intExp += 2;
						break;
					}
					character.backgrounds.events.push(selectedEventsArray[i].eventName);
					character.backgroundCost += selectedEventsArray[i].eventCost;
				break;
				
				case "sawAMonster":
					character.skills.confidenceEgo.intExp += 2;
					character.skills.perceptionVigilance.intExp += 4;
					character.skills.science.objSubSkills.zoology.intExp += 3;
					
					character.backgrounds.events.push(selectedEventsArray[i].eventName);
					character.backgroundCost += selectedEventsArray[i].eventCost;
				break;
				
				case "spentTimeInJail":
					character.skills.meleeCombat.objSubSkills.intExp += 2;
					character.skills.insultIntimidation.intExp += 4;
					switch (selectedEventsArray[i].eventOpt1)
					{
						case "resistHunger":
							character.skills.resistHunger.intExp += 3;
						break;
						case "resistPain":
							character.skills.resistPain.intExp += 3;
						break;
					}
					character.backgrounds.events.push(selectedEventsArray[i].eventName);
					character.backgroundCost += selectedEventsArray[i].eventCost;
					character.backgrounds.careerPath[0].push("criminals");
				break;
				
				case "violentChildhood":
					character.skills.meleeCombat.objSubSkills.brawling.intExp += 2;
					character.skills.insultIntimidation.intExp += 4;
					switch (selectedEventsArray[i].eventOpt1)
					{
						case "resistShock":
							character.skills.resistShock.intExp += 3;
						break;
						case "resistPain":
							character.skills.resistPain.intExp += 3;
						break;
					}
					character.backgrounds.events.push(selectedEventsArray[i].eventName);
					character.backgroundCost += selectedEventsArray[i].eventCost;
				break;
				
				case "witnessedAMiracle":
					character.skills.confidenceEgo.intExp += 3;
					character.skills.mysticism.intExp += 2;
					character.skills.knowledge.objSubSkills.religions.intExp += 4;
					
					character.backgrounds.events.push(selectedEventsArray[i].eventName);
					character.backgroundCost += selectedEventsArray[i].eventCost;
				break;
			}
		}
		
		for (var i = 0; i < selectedOccupationsArray.length; i++)
		{
			var tempLowestCost = 99;
			switch (selectedOccupationsArray[i].occupationId)
			{
				case "actor":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							case "arts":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "commerce":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "crafts":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "criminal":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "government":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "maritime":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "military":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "primary":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "religious":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "scholar":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "service":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "unemployed":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.artsPerformance.objSubSkills.acting.intExp += 4;
					character.skills.charmPersuasion.intExp += 3;
					character.skills.confidenceEgo.intExp += 2;
					
					character.age += 2;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["arts"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "altarBoy":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							case "arts":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "commerce":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "crafts":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "criminal":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "government":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "maritime":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "military":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "primary":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							/*case "religious":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;*/
							case "scholar":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "service":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "unemployed":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.detectMotive.intExp += 2;
					character.skills.knowledge.objSubSkills.religions.intExp += 2;
					character.skills.sleightOfHand.intExp += 3;
					
					character.age += 2;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["religious"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "apothecary":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							case "arts":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "commerce":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "crafts":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "criminal":
								if (11 < tempLowestCost)
								{
									tempLowestCost = 11;
								}
							break;
							case "government":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "maritime":
								if (11 < tempLowestCost)
								{
									tempLowestCost = 11;
								}
							break;
							case "military":
								if (11 < tempLowestCost)
								{
									tempLowestCost = 11;
								}
							break;
							case "primary":
								if (11 < tempLowestCost)
								{
									tempLowestCost = 11;
								}
							break;
							case "religious":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "scholar":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "service":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							/*case "unemployed":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;*/
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.science.objSubSkills.alchemyChemistry.intExp += 4;
					character.skills.science.objSubSkills.botany.intExp += 3;
					character.skills.science.objSubSkills.medicine.intExp += 3;
					
					character.age += 5;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["scholar", "service"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "apprentice":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							case "arts":
								if (4 < tempLowestCost)
								{
									tempLowestCost = 4;
								}
							break;
							case "commerce":
								if (2 < tempLowestCost)
								{
									tempLowestCost = 2;
								}
							break;
							/*case "crafts":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}*/
							break;
							case "criminal":
								if (4 < tempLowestCost)
								{
									tempLowestCost = 4;
								}
							break;
							case "government":
								if (4 < tempLowestCost)
								{
									tempLowestCost = 4;
								}
							break;
							case "maritime":
								if (4 < tempLowestCost)
								{
									tempLowestCost = 4;
								}
							break;
							case "military":
								if (2 < tempLowestCost)
								{
									tempLowestCost = 2;
								}
							break;
							case "primary":
								if (2 < tempLowestCost)
								{
									tempLowestCost = 2;
								}
							break;
							case "religious":
								if (4 < tempLowestCost)
								{
									tempLowestCost = 4;
								}
							break;
							case "scholar":
								if (4 < tempLowestCost)
								{
									tempLowestCost = 4;
								}
							break;
							case "service":
								if (2 < tempLowestCost)
								{
									tempLowestCost = 2;
								}
							break;
							case "unemployed":
								if (2 < tempLowestCost)
								{
									tempLowestCost = 2;
								}
							break;
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.detectMotive.intExp += 3;
					character.skills.athleticism.objSubSkills.liftingPushing.intExp += 2;
					character.skills.crafting.intExp += 2;
					
					character.age += 2;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["crafts"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "arbalestierArcher":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							case "arts":
								if (10 < tempLowestCost)
								{
									tempLowestCost =10;
								}
							break;
							case "commerce":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "crafts":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "criminal":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
							case "government":
								if (11 < tempLowestCost)
								{
									tempLowestCost = 11;
								}
							break;
							case "maritime":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "military":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "primary":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
							case "religious":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "scholar":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "service":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "unemployed":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.reflex.intExp += 3;
					if (document.getElementsByName("arbalestierArcherSkills1")[0].checked)
					{
						character.skills.rangeCombat.objSubSkills.bows.intExp += 4;	
					}
					else 
					{
						character.skills.rangeCombat.objSubSkills.crossbowsFirearms.intExp += 4;	
					}
					if (document.getElementsByName("arbalestierArcherSkills2")[0].checked)
					{
						character.skills.resistPain.intExp += 2;	
					}
					else 
					{
						character.skills.resistShock.intExp += 2;	
					}
						
					character.age += 3;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["military"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "armourer":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							/*case "arts":
								if (10 < tempLowestCost)
								{
									tempLowestCost =10;
								}
							break;
							case "commerce":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;*/
							case "crafts":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							/*case "criminal":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
							case "government":
								if (11 < tempLowestCost)
								{
									tempLowestCost = 11;
								}
							break;
							case "maritime":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;*/
							case "military":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							/*case "primary":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
							case "religious":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "scholar":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "service":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "unemployed":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;*/
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.meleeCombat.intExp += 2;
					character.skills.crafting.objSubSkills.metalworking.intExp += 4;
					character.skills.resistHeat.intExp += 3;
					
						
					character.age += 3;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["crafts","military"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "aspiringArtist":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							/*case "arts":
								if (4 < tempLowestCost)
								{
									tempLowestCost = 4;
								}
							break;*/
							case "commerce":
								if (2 < tempLowestCost)
								{
									tempLowestCost = 2;
								}
							break;
							case "crafts":
								if (2 < tempLowestCost)
								{
									tempLowestCost = 2;
								}
							break;
							case "criminal":
								if (2 < tempLowestCost)
								{
									tempLowestCost = 2;
								}
							break;
							case "government":
								if (3 < tempLowestCost)
								{
									tempLowestCost = 3;
								}
							break;
							case "maritime":
								if (2 < tempLowestCost)
								{
									tempLowestCost = 2;
								}
							break;
							case "military":
								if (2 < tempLowestCost)
								{
									tempLowestCost = 2;
								}
							break;
							case "primary":
								if (3 < tempLowestCost)
								{
									tempLowestCost = 3;
								}
							break;
							case "religious":
								if (4 < tempLowestCost)
								{
									tempLowestCost = 4;
								}
							break;
							case "scholar":
								if (4 < tempLowestCost)
								{
									tempLowestCost = 4;
								}
							break;
							case "service":
								if (2 < tempLowestCost)
								{
									tempLowestCost = 2;
								}
							break;
							case "unemployed":
								if (2 < tempLowestCost)
								{
									tempLowestCost = 2;
								}
							break;
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.artsPerformance.intExp += 2;
					character.skills.confidenceEgo.intExp += 3;
					character.skills.resistHunger.intExp += 2;
					
					character.age += 3;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["arts"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "assassin":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							case "arts":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "commerce":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "crafts":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "criminal":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "government":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "maritime":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "military":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
							case "primary":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "religious":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "scholar":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "service":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "unemployed":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.meleeCombat.objSubSkills.brawling.intExp += 3;
					character.skills.perceptionVigilance.intExp += 3;
					character.skills.stealth.intExp += 3;
					
					character.age += 5;
					character.values.morality -= 2;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["criminal"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "banker":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							/*case "arts":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;*/
							case "commerce":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							/*case "crafts":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "criminal":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "government":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "maritime":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "military":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
							case "primary":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "religious":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "scholar":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "service":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "unemployed":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;*/
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.appraise.intExp += 4;
					character.skills.detectMotive.intExp += 4;
					character.skills.knowledge.objSubSkills.heraldryNobility.intExp += 3;
					
					character.age += 5;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["commerce"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "beadle":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							case "arts":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "commerce":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "crafts":
								if (6 < tempLowestCost)
								{
									tempLowestCost = 6;
								}
							break;
							case "criminal":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "government":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "maritime":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "military":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "primary":
								if (6 < tempLowestCost)
								{
									tempLowestCost = 6;
								}
							break;
							case "religious":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "scholar":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "service":
								if (6 < tempLowestCost)
								{
									tempLowestCost = 6;
								}
							break;
							case "unemployed":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.knowledge.objSubSkills.religions.intExp += 4;
					character.skills.athleticism.objSubSkills.liftingPushing.intExp += 3;
					character.skills.crafting.objSubSkills.woodworking.intExp += 2;
					
					character.age += 4;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["religious"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "beggar":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							case "arts":
								if (6 < tempLowestCost)
								{
									tempLowestCost =6;
								}
							break;
							case "commerce":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "crafts":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "criminal":
								if (6 < tempLowestCost)
								{
									tempLowestCost = 6;
								}
							break;
							case "government":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "maritime":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
							case "military":
								if (6 < tempLowestCost)
								{
									tempLowestCost = 6;
								}
							break;
							case "primary":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
							case "religious":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
							case "scholar":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "service":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "unemployed":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.charmPersuasion.intExp += 3;
					character.skills.resistHunger.intExp += 4;
					if (document.getElementsByName("beggarSkills1")[0].checked)
					{
						character.skills.resistCold.intExp += 2;	
					}
					else 
					{
						character.skills.resistHeat.intExp += 2;	
					}
						
					character.age += 3;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["unemployed"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "blacksmith":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							case "arts":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "commerce":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "crafts":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "criminal":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "government":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "maritime":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "military":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "primary":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
							case "religious":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "scholar":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "service":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "unemployed":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.appraise.intExp += 2;
					character.skills.crafting.objSubSkills.metalworking.intExp += 4;
					character.skills.resistHeat.intExp += 3;
					
					character.age += 4;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["crafts"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "burglar":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							case "arts":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "commerce":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "crafts":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "criminal":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "government":
								if (11 < tempLowestCost)
								{
									tempLowestCost = 11;
								}
							break;
							case "maritime":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "military":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "primary":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "religious":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "scholar":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "service":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "unemployed":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.mechanics.intExp += 2;
					character.skills.perceptionVigilance.intExp += 3;
					character.skills.stealth.intExp += 4;
					
					character.age += 5;
					character.values.morality -= 1;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["criminal"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "campServantSquire":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							case "arts":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "commerce":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "crafts":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "criminal":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "government":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "maritime":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
							/*case "military":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;*/
							case "primary":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "religious":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "scholar":
								if (11 < tempLowestCost)
								{
									tempLowestCost = 11;
								}
							break;
							case "service":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "unemployed":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.cooking.intExp += 3;
					character.skills.knowledge.objSubSkills.heraldryNobility.intExp += 2;
					character.skills.meleeCombat.intExp += 2;
					
					character.age += 2;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["military"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "carpenter":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							case "arts":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "commerce":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "crafts":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "criminal":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "government":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "maritime":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "military":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "primary":
								if (6 < tempLowestCost)
								{
									tempLowestCost = 6;
								}
							break;
							case "religious":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "scholar":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "service":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "unemployed":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.appraise.intExp += 2;
					character.skills.science.objSubSkills.engineeringPhysics.intExp += 3;
					character.skills.crafting.objSubSkills.woodworking.intExp += 4;
					
					character.age += 4;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["crafts"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "cavalryman":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							/*case "arts":
								if (6 < tempLowestCost)
								{
									tempLowestCost =6;
								}
							break;
							case "commerce":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "crafts":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "criminal":
								if (6 < tempLowestCost)
								{
									tempLowestCost = 6;
								}
							break;
							case "government":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "maritime":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;*/
							case "military":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							/*case "primary":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
							case "religious":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
							case "scholar":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "service":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "unemployed":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;*/
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.meleeCombat.objSubSkills.polearms.intExp += 3;
					character.skills.riding.intExp += 4;
					if (document.getElementsByName("cavalrymanSkills1")[0].checked)
					{
						character.skills.meleeCombat.objSubSkills.oneHanded.intExp += 3;	
					}
					else 
					{
						character.skills.meleeCombat.objSubSkills.axesMaces.intExp += 3;	
					}
						
					character.age += 4;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["military"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "chieftainMayor":
					if (i > 1 && (character.race === "Lowland Half-Man" || character.race === "Orc" || character.race === "Goblin" || character.race === "Troll"))
					{
						for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
						{
							switch(character.backgrounds.careerPath[i][j])
							{
								case "arts":
									if (12 < tempLowestCost)
									{
										tempLowestCost = 12;
									}
								break;
								case "commerce":
									if (8 < tempLowestCost)
									{
										tempLowestCost = 8;
									}
								break;
								case "crafts":
									if (8 < tempLowestCost)
									{
										tempLowestCost = 8;
									}
								break;
								case "criminal":
									if (12 < tempLowestCost)
									{
										tempLowestCost = 12;
									}
								break;
								case "government":
									if (8 < tempLowestCost)
									{
										tempLowestCost = 8;
									}
								break;
								case "maritime":
									if (10 < tempLowestCost)
									{
										tempLowestCost = 10;
									}
								break;
								case "military":
									if (8 < tempLowestCost)
									{
										tempLowestCost = 8;
									}
								break;
								case "primary":
									if (8 < tempLowestCost)
									{
										tempLowestCost = 8;
									}
								break;
								case "religious":
									if (11 < tempLowestCost)
									{
										tempLowestCost = 11;
									}
								break;
								case "scholar":
									if (12 < tempLowestCost)
									{
										tempLowestCost = 12;
									}
								break;
								case "service":
									if (12 < tempLowestCost)
									{
										tempLowestCost = 12;
									}
								break;
								/*case "unemployed":
									if (5 < tempLowestCost)
									{
										tempLowestCost = 5;
									}
								break;*/
								}
							if (tempLowestCost == 99)
							{
								alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
									".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
								selectedOccupationsArray.splice(i, 1);
								break;
							}
						
							character.skills.confidenceEgo.intExp += 4;
							character.skills.meleeCombat.intExp += 2;
							if (document.getElementsByName("chieftainMayorSkills1")[0].checked)
							{
								character.skills.charmPersuasion.intExp += 4;	
							}
							else 
							{
								character.skills.insultIntimidation.intExp += 4;	
							}
								
							character.age += 5;
							character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
							character.backgrounds.careerPath[i+1] = ["government"];
							character.backgroundCost += tempLowestCost;
						}
					}
					else 
					{
						alert("You do not meet the requirement for the occupation " + selectedOccupationsArray[i].occupationName + ".");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				break;
				
				case "clerk":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							case "arts":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "commerce":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "crafts":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "criminal":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
							/*case "government":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;*/
							case "maritime":
								if (6 < tempLowestCost)
								{
									tempLowestCost = 6;
								}
							break;
							case "military":
								if (6 < tempLowestCost)
								{
									tempLowestCost = 6;
								}
							break;
							case "primary":
								if (6 < tempLowestCost)
								{
									tempLowestCost = 6;
								}
							break;
							case "religious":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "scholar":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "service":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "unemployed":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.charmPersuasion.intExp += 2;
					character.skills.detectMotive.intExp += 3;
					character.skills.insultIntimidation.intExp += 2;
					
					character.age += 2;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["government"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "conman":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							case "arts":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "commerce":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "crafts":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "criminal":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "government":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "maritime":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "military":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "primary":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "religious":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "scholar":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "service":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "unemployed":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.charmPersuasion.intExp += 4;
					character.skills.detectMotive.intExp += 3;
					character.skills.insultIntimidation.intExp += 2;
					
					character.age += 4;
					character.values.honour -= 1;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["criminal"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "cook":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							case "arts":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
							case "commerce":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
							case "crafts":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "criminal":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "government":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "maritime":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "military":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "primary":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "religious":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "scholar":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "service":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "unemployed":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.science.objSubSkills.botany.intExp += 2;
					character.skills.cooking.intExp += 4;
					character.skills.survival.objSubSkills.foragingHunting.intExp += 3;
					
					character.age += 3;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["service"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "dancer":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							case "arts":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "commerce":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "crafts":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "criminal":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "government":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "maritime":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "military":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "primary":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "religious":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "scholar":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "service":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "unemployed":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.acrobatics.intExp += 3;
					character.skills.artsPerformance.objSubSkills.dancing.intExp += 4;
					character.skills.confidenceEgo.intExp += 2;
					
					character.age += 3;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["arts"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "deckHand":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							case "arts":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "commerce":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
							case "crafts":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "criminal":
								if (6 < tempLowestCost)
								{
									tempLowestCost = 6;
								}
							break;
							case "government":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							/*case "maritime":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;*/
							case "military":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "primary":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "religious":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "scholar":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "service":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
							case "unemployed":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.athleticism.objSubSkills.liftingPushing.intExp += 2;
					character.skills.seamanship.intExp += 3;
					if (document.getElementsByName("deckHandSkills1")[0].checked)
					{
						character.skills.meleeCombat.objSubSkills.oneHanded.intExp += 2;	
					}
					else 
					{
						character.skills.meleeCombat.objSubSkills.axesMaces.intExp += 2;	
					}
						
					character.age += 5;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["maritime"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "diplomat":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							case "arts":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "commerce":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "crafts":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							/*case "criminal":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;*/
							case "government":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "maritime":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "military":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "primary":
								if (11 < tempLowestCost)
								{
									tempLowestCost = 11;
								}
							break;
							case "religious":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
							case "scholar":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "service":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "unemployed":
								if (11 < tempLowestCost)
								{
									tempLowestCost = 11;
								}
							break;
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.charmPersuasion.intExp += 3;
					character.skills.detectMotive.intExp += 3;
					character.skills.knowledge.intExp += 3;
					
					character.age += 8;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["government"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "drunk":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							case "arts":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "commerce":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
							case "crafts":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "criminal":
								if (6 < tempLowestCost)
								{
									tempLowestCost = 6;
								}
							break;
							case "government":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "maritime":
								if (6 < tempLowestCost)
								{
									tempLowestCost = 6;
								}
							break;
							case "military":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "primary":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "religious":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "scholar":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "service":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "unemployed":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.meleeCombat.objSubSkills.brawling.intExp += 2;
					character.skills.insultIntimidation.intExp += 3;
					character.skills.resistPoison.intExp += 4;
					
					character.age += 2;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["unemployed"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "elementalist":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							/*case "arts":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "commerce":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
							case "crafts":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "criminal":
								if (6 < tempLowestCost)
								{
									tempLowestCost = 6;
								}
							break;
							case "government":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "maritime":
								if (6 < tempLowestCost)
								{
									tempLowestCost = 6;
								}
							break;
							case "military":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "primary":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "religious":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;*/
							case "scholar":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							/*case "service":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "unemployed":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;*/
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.elementalism.intExp += 3;
					character.skills.resistCold.intExp += 3;
					character.skills.resistHeat.intExp += 3;
					
					character.age += 8;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["scholar"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "engineer":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							/*case "arts":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "commerce":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
							case "crafts":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "criminal":
								if (6 < tempLowestCost)
								{
									tempLowestCost = 6;
								}
							break;
							case "government":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "maritime":
								if (6 < tempLowestCost)
								{
									tempLowestCost = 6;
								}
							break;
							case "military":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "primary":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "religious":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;*/
							case "scholar":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							/*case "service":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "unemployed":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;*/
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.deductionLogic.intExp += 3;
					character.skills.science.objSubSkills.engineeringPhysics.intExp += 4;
					character.skills.mechanics.intExp += 2;
					
					character.age += 5;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["scholar"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "farmHand":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							case "arts":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
							case "commerce":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "crafts":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "criminal":
								if (6 < tempLowestCost)
								{
									tempLowestCost = 6;
								}
							break;
							case "government":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "maritime":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "military":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							/*case "primary":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;*/
							case "religious":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "scholar":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
							case "service":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "unemployed":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.science.objSubSkills.botany.intExp += 2;
					character.skills.athleticism.objSubSkills.liftingPushing.intExp += 3;
					character.skills.tamingTraining.intExp += 2;
					
					character.age += 2;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["primary"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "fence":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							case "arts":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "commerce":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "crafts":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "criminal":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "government":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "maritime":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "military":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "primary":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "religious":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "scholar":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "service":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "unemployed":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.appraise.intExp += 4;
					character.skills.charmPersuasion.intExp += 3;
					character.skills.detectMotive.intExp += 2;
					
					character.age += 5;
					character.values.morality -= 1;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["criminal", "commerce"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "firstMate":
					if (i > 1 && findInArray("maritime", character.backgrounds.careerPath[i-1]) != undefined && findInArray("maritime", character.backgrounds.careerPath[i-1]) != undefined)
					{
						for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
						{
							switch(character.backgrounds.careerPath[i][j])
							{
								/*case "arts":
									if (12 < tempLowestCost)
									{
										tempLowestCost = 12;
									}
								break;
								case "commerce":
									if (8 < tempLowestCost)
									{
										tempLowestCost = 8;
									}
								break;
								case "crafts":
									if (8 < tempLowestCost)
									{
										tempLowestCost = 8;
									}
								break;
								case "criminal":
									if (12 < tempLowestCost)
									{
										tempLowestCost = 12;
									}
								break;
								case "government":
									if (8 < tempLowestCost)
									{
										tempLowestCost = 8;
									}
								break;*/
								case "maritime":
									if (8 < tempLowestCost)
									{
										tempLowestCost = 8;
									}
								break;
								/*case "military":
									if (8 < tempLowestCost)
									{
										tempLowestCost = 8;
									}
								break;
								case "primary":
									if (8 < tempLowestCost)
									{
										tempLowestCost = 8;
									}
								break;
								case "religious":
									if (11 < tempLowestCost)
									{
										tempLowestCost = 11;
									}
								break;
								case "scholar":
									if (12 < tempLowestCost)
									{
										tempLowestCost = 12;
									}
								break;
								case "service":
									if (12 < tempLowestCost)
									{
										tempLowestCost = 12;
									}
								break;
								/*case "unemployed":
									if (5 < tempLowestCost)
									{
										tempLowestCost = 5;
									}
								break;*/
								}
							if (tempLowestCost == 99)
							{
								alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
									".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
								selectedOccupationsArray.splice(i, 1);
								break;
							}
						
							character.skills.meleeCombat.objSubSkills.oneHanded.intExp += 3;
							character.skills.insultIntimidation.intExp += 4;
							character.skills.survival.objSubSkills.navigation.intExp += 3;
								
							character.age += 6;
							character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
							character.backgrounds.careerPath[i+1] = ["maritime"];
							character.backgroundCost += tempLowestCost;
						}
					}
					else 
					{
						alert("You do not meet the requirement for the occupation " + selectedOccupationsArray[i].occupationName + ".");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				break;
				
				case "fisherman":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							case "arts":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "commerce":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "crafts":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
							case "criminal":
								if (6 < tempLowestCost)
								{
									tempLowestCost = 6;
								}
							break;
							case "government":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "maritime":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "military":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "primary":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "religious":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "scholar":
								if (11 < tempLowestCost)
								{
									tempLowestCost = 11;
								}
							break;
							case "service":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "unemployed":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.survival.objSubSkills.foragingHunting.intExp += 4;
					character.skills.athleticism.objSubSkills.swimming.intExp += 3;
					character.skills.seamanship.intExp += 2;
					
					character.age += 3;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["maritime", "primary"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "gambler":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							case "arts":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "commerce":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "crafts":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "criminal":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
							case "government":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "maritime":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
							case "military":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
							case "primary":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "religious":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "scholar":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "service":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "unemployed":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.detectMotive.intExp += 3;
					character.skills.luck.intExp += 4;
					character.skills.sleightOfHand.intExp += 2;
					
					character.age += 5;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["unemployed"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "guard":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							case "arts":
								if (11 < tempLowestCost)
								{
									tempLowestCost =11;
								}
							break;
							case "commerce":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "crafts":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "criminal":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "government":
								if (11 < tempLowestCost)
								{
									tempLowestCost = 11;
								}
							break;
							case "maritime":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "military":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "primary":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
							case "religious":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "scholar":
								if (11 < tempLowestCost)
								{
									tempLowestCost = 11;
								}
							break;
							case "service":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "unemployed":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.perceptionVigilance.intExp += 4;
					if (document.getElementsByName("guardSkills1")[0].checked)
					{
						character.skills.detectMotive.intExp += 2;	
					}
					else 
					{
						character.skills.insultIntimidation.intExp += 2;	
					}
					if (document.getElementsByName("guardSkills2")[0].checked)
					{
						character.skills.meleeCombat.objSubSkills.polearms.intExp += 3;	
					}
					else 
					{
						character.skills.rangeCombat.objSubSkills.crossbowsFirearms.intExp += 3;	
					}
						
					character.age += 4;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["military"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "guide":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							case "arts":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "commerce":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "crafts":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "criminal":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "government":
								if (11 < tempLowestCost)
								{
									tempLowestCost = 11;
								}
							break;
							case "maritime":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "military":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "primary":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
							case "religious":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "scholar":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "service":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "unemployed":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.knowledge.objSubSkills.geography.intExp += 3;
					character.skills.survival.objSubSkills.navigation.intExp += 4;
					character.skills.riding.intExp += 2;
					
					character.age += 5;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["service"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "hermit":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							case "arts":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "commerce":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "crafts":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "criminal":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
							case "government":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "maritime":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "military":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
							case "primary":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "religious":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
							case "scholar":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
							case "service":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "unemployed":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.athleticism.intExp += 2;
					character.skills.survival.intExp += 4;
					if (document.getElementsByName("hermitSkills1")[0].checked)
					{
						character.skills.resistCold.intExp += 3;	
					}
					else 
					{
						character.skills.resistHeat.intExp += 3;	
					}
						
					character.age += 8;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["unemployed", "scholar"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "highwayman":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							case "arts":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
							case "commerce":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "crafts":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "criminal":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "government":
								if (11 < tempLowestCost)
								{
									tempLowestCost = 11;
								}
							break;
							case "maritime":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "military":
								if (6 < tempLowestCost)
								{
									tempLowestCost = 6;
								}
							break;
							case "primary":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "religious":
								if (11 < tempLowestCost)
								{
									tempLowestCost = 11;
								}
							break;
							case "scholar":
								if (11 < tempLowestCost)
								{
									tempLowestCost = 11;
								}
							break;
							case "service":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "unemployed":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.insultIntimidation.intExp += 3;
					character.skills.stealth.intExp += 3;
					if (document.getElementsByName("highwaymanSkills1")[0].checked)
					{
						character.skills.meleeCombat.intExp += 3;	
					}
					else 
					{
						character.skills.rangeCombat.intExp += 3;	
					}
						
					character.age += 3;
					character.values.morality -= 2;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["criminal"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "hunter":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							case "arts":
								if (10 < tempLowestCost)
								{
									tempLowestCost =10;
								}
							break;
							case "commerce":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "crafts":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
							case "criminal":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "government":
								if (11 < tempLowestCost)
								{
									tempLowestCost = 11;
								}
							break;
							case "maritime":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "military":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "primary":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "religious":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "scholar":
								if (11 < tempLowestCost)
								{
									tempLowestCost = 11;
								}
							break;
							case "service":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "unemployed":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.survival.intExp += 4;
					if (document.getElementsByName("hunterSkills1")[0].checked)
					{
						character.skills.meleeCombat.objSubSkills.polearms.intExp += 3;	
					}
					else 
					{
						character.skills.rangeCombat.intExp += 3;	
					}
					if (document.getElementsByName("hunterSkills2")[0].checked)
					{
						character.skills.resistCold.intExp += 2;	
					}
					else 
					{
						character.skills.resistHeat.intExp += 2;	
					}
						
					character.age += 4;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["primary"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "illuminator":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							case "arts":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "commerce":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "crafts":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "criminal":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "government":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "maritime":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "military":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "primary":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "religious":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "scholar":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "service":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "unemployed":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.artsPerformance.objSubSkills.drawingPainting.intExp += 4;
					character.skills.knowledge.objSubSkills.linguistic.intExp += 2;
					character.skills.crafting.objSubSkills.scribing.intExp += 3;
					
					character.age += 4;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["arts"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "inquisitor":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							/*case "arts":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "commerce":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "crafts":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "criminal":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;*/
							case "government":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							/*case "maritime":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "military":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "primary":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;*/
							case "religious":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							/*/case "scholar":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "service":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "unemployed":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;*/
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.insultIntimidation.intExp += 3;
					character.skills.knowledge.objSubSkills.religions.intExp += 3;
					character.skills.torture.intExp += 3;
					
					character.age += 8;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["religious", "government"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "jailer":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							case "arts":
								if (11 < tempLowestCost)
								{
									tempLowestCost = 11;
								}
							break;
							case "commerce":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "crafts":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							/*case "criminal":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;*/
							case "government":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "maritime":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "military":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "primary":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "religious":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "scholar":
								if (11 < tempLowestCost)
								{
									tempLowestCost = 11;
								}
							break;
							case "service":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "unemployed":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.detectMotive.intExp += 2;
					character.skills.insultIntimidation.intExp += 3;
					character.skills.perceptionVigilance.intExp += 4;
					
					character.age += 4;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["government", "military"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "jeweller":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							/*case "arts":
								if (11 < tempLowestCost)
								{
									tempLowestCost = 11;
								}
							break;
							case "commerce":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;*/
							case "crafts":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							/*case "criminal":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "government":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "maritime":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "military":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "primary":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "religious":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "scholar":
								if (11 < tempLowestCost)
								{
									tempLowestCost = 11;
								}
							break;
							case "service":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "unemployed":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;*/
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.appraise.intExp += 2;
					character.skills.crafting.objSubSkills.metalworking.intExp += 4;
					character.skills.crafting.objSubSkills.stonecutting.intExp += 4;
					
					character.age += 3;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["crafts"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "knight":
					if ((character.backgrounds.careerPath.length > 1) && (findInArray("military", character.backgrounds.careerPath[i-1]) != undefined) && (findInArray("military", character.backgrounds.careerPath[i]) != undefined))
					{
						tempLowestCost = 8;
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.knowledge.objSubSkills.heraldryNobility.intExp += 3;
					character.skills.meleeCombat.intExp += 4;
					character.skills.riding.intExp += 3;
					
					character.age += 5;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["military"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "lawyer":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							case "arts":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "commerce":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "crafts":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "criminal":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "government":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "maritime":
								if (11 < tempLowestCost)
								{
									tempLowestCost = 11;
								}
							break;
							case "military":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "primary":
								if (11 < tempLowestCost)
								{
									tempLowestCost = 11;
								}
							break;
							case "religious":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "scholar":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
							case "service":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "unemployed":
								if (11 < tempLowestCost)
								{
									tempLowestCost = 11;
								}
							break;
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.charmPersuasion.intExp += 3;
					character.skills.deductionLogic.intExp += 2;
					character.skills.lawsLegalSystems.intExp += 4;
					
					character.age += 8;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["service"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "lumberjack":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							case "arts":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "commerce":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "crafts":
								if (6 < tempLowestCost)
								{
									tempLowestCost = 6;
								}
							break;
							case "criminal":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "government":
								if (11 < tempLowestCost)
								{
									tempLowestCost = 11;
								}
							break;
							case "maritime":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "military":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "primary":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "religious":
								if (11 < tempLowestCost)
								{
									tempLowestCost = 11;
								}
							break;
							case "scholar":
								if (11 < tempLowestCost)
								{
									tempLowestCost = 11;
								}
							break;
							case "service":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "unemployed":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.meleeCombat.objSubSkills.axesMaces.intExp += 2;
					character.skills.athleticism.objSubSkills.liftingPushing.intExp += 4;
					character.skills.crafting.objSubSkills.woodworking.intExp += 3;
					
					character.age += 2;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["primary"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "mason":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							case "arts":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "commerce":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "crafts":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "criminal":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "government":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "maritime":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "military":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "primary":
								if (6 < tempLowestCost)
								{
									tempLowestCost = 6;
								}
							break;
							case "religious":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "scholar":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "service":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "unemployed":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.appraise.intExp += 2;
					character.skills.athleticism.objSubSkills.liftingPushing.intExp += 3;
					character.skills.crafting.objSubSkills.stonecutting.intExp += 4;
					
					character.age += 2;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["crafts"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "miner":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							case "arts":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "commerce":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "crafts":
								if (6 < tempLowestCost)
								{
									tempLowestCost = 6;
								}
							break;
							case "criminal":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
							case "government":
								if (11 < tempLowestCost)
								{
									tempLowestCost = 11;
								}
							break;
							case "maritime":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "military":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
							case "primary":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "religious":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "scholar":
								if (11 < tempLowestCost)
								{
									tempLowestCost = 11;
								}
							break;
							case "service":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "unemployed":
								if (6 < tempLowestCost)
								{
									tempLowestCost = 6;
								}
							break;
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.meleeCombat.objSubSkills.axesMaces.intExp += 2;
					character.skills.athleticism.objSubSkills.liftingPushing.intExp += 4;
					character.skills.crafting.objSubSkills.stonecutting.intExp += 3;
					
					character.age += 2;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["primary"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "musician":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							case "arts":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "commerce":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "crafts":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "criminal":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "government":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "maritime":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "military":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "primary":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "religious":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "scholar":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "service":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "unemployed":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.charmPersuasion.intExp += 3;
					character.skills.confidenceEgo.intExp += 2;
					character.skills.artsPerformance.objSubSkills.musicSinging.intExp += 4;
					
					character.age += 3;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["arts"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "navigator":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							/*case "arts":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "commerce":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "crafts":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "criminal":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "government":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;*/
							case "maritime":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							/*case "military":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "primary":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "religious":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "scholar":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "service":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "unemployed":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;*/
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.knowledge.objSubSkills.geography.intExp += 3;
					character.skills.survival.objSubSkills.navigation.intExp += 4;
					character.skills.seamanship.intExp += 3;
					
					character.age += 4;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["maritime"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "noblePatriarch":
					if (((character.backgrounds.careerPath.length > 1) && 
						((findInArray("military", character.backgrounds.careerPath[i-1]) != undefined) || (findInArray("government", character.backgrounds.careerPath[i-1]) != undefined)) && 
						((findInArray("military", character.backgrounds.careerPath[i]) != undefined) || (findInArray("military", character.backgrounds.careerPath[i] != undefined)))) ||
						findInArray("Born a Noble", character.backgrounds.events) != undefined)
					{
						tempLowestCost = 8;
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.knowledge.objSubSkills.heraldryNobility.intExp += 4;
					character.skills.lawsLegalSystems.intExp += 2;
					character.skills.meleeCombat.intExp += 3;
					
					character.age += 5;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["military", "government"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "operaComposer":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							case "arts":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							/*case "commerce":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "crafts":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "criminal":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "government":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "maritime":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "military":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "primary":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "religious":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "scholar":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "service":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "unemployed":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;*/
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.artsPerformance.intExp += 4;
					character.skills.artsPerformance.objSubSkills.musicSinging.intExp += 3;
					character.skills.artsPerformance.objSubSkills.oratoryPoetry.intExp += 3;
					
					character.age += 5;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["arts"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "outcast":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							case "arts":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "commerce":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "crafts":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "criminal":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "government":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "maritime":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "military":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "primary":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "religious":
								if (11 < tempLowestCost)
								{
									tempLowestCost = 11;
								}
							break;
							case "scholar":
								if (11 < tempLowestCost)
								{
									tempLowestCost = 11;
								}
							break;
							case "service":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "unemployed":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.detectMotive.intExp += 3;
					character.skills.insultIntimidation.intExp += 2;
					character.skills.survival.intExp += 4;
					
					character.age += 1;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["unemployed"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "outlaw":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							case "arts":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "commerce":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "crafts":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							/*case "criminal":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;*/
							case "government":
								if (6 < tempLowestCost)
								{
									tempLowestCost = 6;
								}
							break;
							case "maritime":
								if (4 < tempLowestCost)
								{
									tempLowestCost = 4;
								}
							break;
							case "military":
								if (4 < tempLowestCost)
								{
									tempLowestCost = 4;
								}
							break;
							case "primary":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "religious":
								if (6 < tempLowestCost)
								{
									tempLowestCost = 6;
								}
							break;
							case "scholar":
								if (6 < tempLowestCost)
								{
									tempLowestCost = 6;
								}
							break;
							case "service":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "unemployed":
								if (3 < tempLowestCost)
								{
									tempLowestCost = 3;
								}
							break;
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.meleeCombat.objSubSkills.brawling.intExp += 3;
					character.skills.detectMotive.intExp += 2;
					character.skills.insultIntimidation.intExp += 2;
					
					character.age += 1;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["criminal"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "painter":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							case "arts":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "commerce":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "crafts":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "criminal":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "government":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "maritime":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "military":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "primary":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "religious":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "scholar":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "service":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "unemployed":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.artsPerformance.objSubSkills.drawingPainting.intExp += 4;
					character.skills.perceptionVigilance.intExp += 3;
					if (document.getElementsByName("painterSkills1")[0].checked)
					{
						character.skills.science.objSubSkills.botany.intExp += 2;	
					}
					else 
					{
						character.skills.science.objSubSkills.zoology.intExp += 2;	
					}
						
					character.age += 3;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["arts"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "peasant":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							case "arts":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "commerce":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "crafts":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "criminal":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "government":
								if (11 < tempLowestCost)
								{
									tempLowestCost = 11;
								}
							break;
							case "maritime":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "military":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "primary":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "religious":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "scholar":
								if (11 < tempLowestCost)
								{
									tempLowestCost = 11;
								}
							break;
							case "service":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "unemployed":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.crafting.intExp += 3;
					character.skills.tamingTraining.intExp += 3;
					if (document.getElementsByName("peasantSkills1")[0].checked)
					{
						character.skills.science.objSubSkills.botany.intExp += 3;	
					}
					else 
					{
						character.skills.science.objSubSkills.zoology.intExp += 3;	
					}
						
					character.age += 5;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["primary"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "physician":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							case "arts":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "commerce":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "crafts":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "criminal":
								if (11 < tempLowestCost)
								{
									tempLowestCost = 11;
								}
							break;
							case "government":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "maritime":
								if (11 < tempLowestCost)
								{
									tempLowestCost = 11;
								}
							break;
							case "military":
								if (11 < tempLowestCost)
								{
									tempLowestCost = 11;
								}
							break;
							case "primary":
								if (11 < tempLowestCost)
								{
									tempLowestCost = 11;
								}
							break;
							case "religious":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "scholar":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "service":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							/*case "unemployed":
								if (3 < tempLowestCost)
								{
									tempLowestCost = 3;
								}
							break;*/
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.science.objSubSkills.medicine.intExp += 4;
					character.skills.torture.intExp += 3;
					character.skills.science.objSubSkills.zoology.intExp += 3;
					
					character.age += 8;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["scholar", "service"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "pickpocket":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							case "arts":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "commerce":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "crafts":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "criminal":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "government":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "maritime":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "military":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "primary":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "religious":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "scholar":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "service":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "unemployed":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.perceptionVigilance.intExp += 3;
					character.skills.sleightOfHand.intExp += 4;
					character.skills.stealth.intExp += 2;
					
					character.age += 3;
					character.values.morality -= 1;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["criminal"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "pikeman":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							case "arts":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "commerce":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "crafts":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "criminal":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
							case "government":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "maritime":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "military":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "primary":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
							case "religious":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "scholar":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "service":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "unemployed":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.meleeCombat.objSubSkills.polearms.intExp += 4;
					character.skills.reflex.intExp += 3;
					if (document.getElementsByName("pikemanSkills1")[0].checked)
					{
						character.skills.resistPain.intExp += 2;	
					}
					else 
					{
						character.skills.resistShock.intExp += 2;	
					}
						
					character.age += 2;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["military"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "pirate":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							case "arts":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "commerce":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "crafts":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "criminal":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "government":
								if (11 < tempLowestCost)
								{
									tempLowestCost = 11;
								}
							break;
							case "maritime":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "military":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "primary":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "religious":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "scholar":
								if (11 < tempLowestCost)
								{
									tempLowestCost = 11;
								}
							break;
							case "service":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "unemployed":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.insultIntimidation.intExp += 3;
					character.skills.seamanship.intExp += 3;
					if (document.getElementsByName("pirateSkills1")[0].checked)
					{
						character.skills.meleeCombat.objSubSkills.oneHanded.intExp += 3;	
					}
					else 
					{
						character.skills.meleeCombat.objSubSkills.axesMaces.intExp += 3;	
					}
						
					character.age += 3;
					character.values.morality -= 2;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["criminal", "maritime"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "playwright":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							case "arts":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "commerce":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "crafts":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "criminal":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "government":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "maritime":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "military":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "primary":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "religious":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
							case "scholar":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
							case "service":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "unemployed":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.artsPerformance.objSubSkills.acting.intExp += 2;
					character.skills.artsPerformance.objSubSkills.oratoryPoetry.intExp += 4;
					character.skills.crafting.objSubSkills.scribing.intExp += 3;
					
					
					character.age += 3;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["arts"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "poet":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							case "arts":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "commerce":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "crafts":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "criminal":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
							case "government":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "maritime":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "military":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "primary":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "religious":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
							case "scholar":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "service":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "unemployed":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.confidenceEgo.intExp += 2;
					character.skills.artsPerformance.objSubSkills.oratoryPoetry.intExp += 4;
					character.skills.crafting.objSubSkills.scribing.intExp += 3;
					
					
					character.age += 3;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["arts"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "priest":
					if ((character.backgrounds.careerPath.length > 1) && (findInArray("religious", character.backgrounds.careerPath[i-1]) != undefined) && (findInArray("religious", character.backgrounds.careerPath[i]) != undefined))
					{
						tempLowestCost = 8;
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.charmPersuasion.intExp += 3;
					character.skills.mysticism.intExp += 2;
					character.skills.knowledge.objSubSkills.religions.intExp += 4;
					
					character.age += 8;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["arts"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "prostitute":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							case "arts":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "commerce":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "crafts":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "criminal":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "government":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "maritime":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "military":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "primary":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "religious":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "scholar":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "service":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "unemployed":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.charmPersuasion.intExp += 4;
					character.skills.detectMotive.intExp += 3;
					character.skills.sleightOfHand.intExp += 2;
					
					
					character.age += 1;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["criminal", "service"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "scholar":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							/*case "arts":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "commerce":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "crafts":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "criminal":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "government":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "maritime":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "military":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "primary":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "religious":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;*/
							case "scholar":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							/*case "service":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "unemployed":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;*/
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.deductionLogic.intExp += 2;
					character.skills.knowledge.intExp += 4;
					character.skills.science.intExp += 3;
					
					
					character.age += 5;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["scholar"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "scientist":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							/*case "arts":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "commerce":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "crafts":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "criminal":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "government":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "maritime":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "military":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "primary":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "religious":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;*/
							case "scholar":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							/*case "service":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "unemployed":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;*/
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.deductionLogic.intExp += 3;
					character.skills.knowledge.intExp += 2;
					character.skills.science.intExp += 4;
					
					
					character.age += 5;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["scholar"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "scout":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							case "arts":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "commerce":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "crafts":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "criminal":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
							case "government":
								if (11 < tempLowestCost)
								{
									tempLowestCost = 11;
								}
							break;
							case "maritime":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "military":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "primary":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "religious":
								if (11 < tempLowestCost)
								{
									tempLowestCost = 11;
								}
							break;
							case "scholar":
								if (11 < tempLowestCost)
								{
									tempLowestCost = 11;
								}
							break;
							case "service":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "unemployed":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.perceptionVigilance.intExp += 4;
					character.skills.riding.intExp += 2;
					character.skills.stealth.intExp += 3;
					
					
					character.age += 3;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["military"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "scribe":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							case "arts":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "commerce":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "crafts":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "criminal":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "government":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
							case "maritime":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "military":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "primary":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "religious":
								if (6 < tempLowestCost)
								{
									tempLowestCost = 6;
								}
							break;
							case "scholar":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
							case "service":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "unemployed":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.appraise.intExp += 2;
					character.skills.artsPerformance.objSubSkills.drawingPainting.intExp += 3;
					character.skills.crafting.objSubSkills.scribing.intExp += 4;
					
					
					character.age += 5;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["crafts"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "sculptor":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							case "arts":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "commerce":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "crafts":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "criminal":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "government":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "maritime":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "military":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "primary":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "religious":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "scholar":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "service":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "unemployed":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.crafting.objSubSkills.metalworking.intExp += 2;
					character.skills.crafting.objSubSkills.stonecutting.intExp += 4;
					character.skills.crafting.objSubSkills.woodworking.intExp += 3;
					
					
					character.age += 4;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["arts"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "shaman":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							case "arts":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "commerce":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "crafts":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "criminal":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "government":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "maritime":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "military":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "primary":
								if (6 < tempLowestCost)
								{
									tempLowestCost = 6;
								}
							break;
							case "religious":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "scholar":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "service":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "unemployed":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.resistHunger.intExp += 2;
					character.skills.resistPoison.intExp += 3;
					character.skills.shamanism.intExp += 4;
					
					
					character.age += 8;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["religious"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "shepherd":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							case "arts":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "commerce":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "crafts":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "criminal":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
							case "government":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "maritime":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
							case "military":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
							case "primary":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "religious":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
							case "scholar":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "service":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "unemployed":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.perceptionVigilance.intExp += 4;
					character.skills.rangeCombat.objSubSkills.slings.intExp += 2;
					character.skills.tamingTraining.intExp += 4;
					
					
					character.age += 3;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["primary"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "shipwright":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							case "arts":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "commerce":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "crafts":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "criminal":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "government":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "maritime":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
							case "military":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
							case "primary":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
							case "religious":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "scholar":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "service":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "unemployed":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.appraise.intExp += 2;
					character.skills.seamanship.intExp += 3;
					character.skills.crafting.objSubSkills.woodworking.intExp += 4;
					
					
					character.age += 4;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["crafting"];
					character.backgroundCost += tempLowestCost;
				break;
				
				case "siegeEngineer":
					for (var j = 0; j < character.backgrounds.careerPath[i].length; j++)
					{
						switch(character.backgrounds.careerPath[i][j])
						{
							/*case "arts":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "commerce":
								if (9 < tempLowestCost)
								{
									tempLowestCost = 9;
								}
							break;
							case "crafts":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							case "criminal":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "government":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "maritime":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;*/
							case "military":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							/*case "primary":
								if (7 < tempLowestCost)
								{
									tempLowestCost = 7;
								}
							break;
							case "religious":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;*/
							case "scholar":
								if (5 < tempLowestCost)
								{
									tempLowestCost = 5;
								}
							break;
							/*case "service":
								if (10 < tempLowestCost)
								{
									tempLowestCost = 10;
								}
							break;
							case "unemployed":
								if (8 < tempLowestCost)
								{
									tempLowestCost = 8;
								}
							break;*/
						}
					}
					if (tempLowestCost == 99)
					{
						alert("You are not on the correct career path for the occupation " + selectedOccupationsArray[i].occupationName + 
							".  Career paths can come from the previous occupation or, if this is your first occupation, from your place of origin or from life events.");
						selectedOccupationsArray.splice(i, 1);
						break;
					}
				
					character.skills.science.objSubSkills.engineeringPhysics.intExp += 4;
					character.skills.mechanics.intExp += 3;
					character.skills.crafting.objSubSkills.woodworking.intExp += 3;
					
					
					character.age += 4;
					character.backgrounds.occupations.push(selectedOccupationsArray[i].occupationName);
					character.backgrounds.careerPath[i+1] = ["military", "scholar"];
					character.backgroundCost += tempLowestCost;
				break;
			}
		}
		
		for (var i in character.skills)
		{
			if (character.skills.hasOwnProperty(i))
			{	
				if (character.skills[i].objSubSkills === undefined)
				{
					while(character.skills[i].intExp >= ((character.skills[i].intRank + 1)*4))
					{
						character.skills[i].intExp -= ((character.skills[i].intRank + 1)*4);
						character.skills[i].intRank++;
						switch(character.skills[i].strAttribute)
						{
							case "Agi":
								character.attributes.agility.exp += 2;
							break;
							case "Pow":
								character.attributes.power.exp += 2;
							break;
							case "Con":
								character.attributes.constitution.exp += 2;
							break;
							case "Eru":
								character.attributes.erudition.exp += 2;
							break;
							case "Per":
								character.attributes.persona.exp += 2;
							break;
							case "Sag":
								character.attributes.sagacity.exp += 2;
							break;
							case "Agi/Pow":
								attExpAgiPow += 2;
							break;
							case "Eru/Per/Sag":
								attExpEruPerSag += 2;
							break;
							case "Eru/Per":
								attExpEruPer += 2;
							break;
							case "Eru/Sag":
								attExpEruSag += 2;
							break;
							case "Per/Sag":
								attExpPerSag += 2;
							break;
						}
					}
				}
				else
				{
					for (var j in character.skills[i].objSubSkills)
					{
						if (character.skills[i].objSubSkills.hasOwnProperty(j))
						{	
							while(character.skills[i].objSubSkills[j].intExp >= ((character.skills[i].objSubSkills[j].intRank + 1)*4))
							{
								character.skills[i].objSubSkills[j].intExp -= ((character.skills[i].objSubSkills[j].intRank + 1)*4);
								character.skills[i].objSubSkills[j].intRank++;
								switch(character.skills[i].strAttribute)
								{
									case "Agi":
										character.attributes.agility.exp += 2;
									break;
									case "Pow":
										character.attributes.power.exp += 2;
									break;
									case "Con":
										character.attributes.constitution.exp += 2;
									break;
									case "Eru":
										character.attributes.erudition.exp += 2;
									break;
									case "Per":
										character.attributes.persona.exp += 2;
									break;
									case "Sag":
										character.attributes.sagacity.exp += 2;
									break;
									case "Agi/Pow":
										attExpAgiPow += 2;
									break;
									case "Eru/Per/Sag":
										attExpEruPerSag += 2;
									break;
									case "Eru/Per":
										attExpEruPer += 2;
									break;
									case "Eru/Sag":
										attExpEruSag += 2;
									break;
									case "Per/Sag":
										attExpPerSag += 2;
									break;
								}
							}
						}
					}
				}
			}
		}
		for (var i in character.attributes)
		{
			if (character.attributes.hasOwnProperty(i))
			{
				while(character.attributes[i].exp >= character.attributes[i].rank)
					{
						character.attributes[i].exp -= character.attributes[i].rank;
						character.attributes[i].rank++;
					}
			}
		}
		
		console.log(character);
		document.getElementById("display").innerHTML = character.characterString();
	}

</script>
			
<section style="position:fixed; top:10%; left:5%; width:40%; height:75%;transform: translate(0, 60px);overflow:auto;">

	<h2 style="position:relative;">Race  <button type="button" id = "buttRace" onclick = 'toggleSection("secRace", this)' style="position:absolute; top:50%;right:0%;transform: translate(-50%, -50%);">+</button></h2>
	
	<section id = "secRace" style="display:none;">
	
		<p>9 playable races, divided in 3 civilizations, are available to the player. The high-men, highland half-men and lowland half-men represent the human civilization. 
			The orcs, goblins and hobgoblins form the green-skin civilization. The elves, fauns and trolls belong to the faes civilization.</p>
		
		<select id = "selRace" name="selRace" style="width:30%" onchange="toggleSectionList(this)">
			<option value = ""></option>
			<optgroup label="Human">
				<option value="highMan">High-Man</option>
				<option value="highlander">Highland Half-Man</option>
				<option value="lowlander">Lowland Half-man</option>
			</optgroup>
			<optgroup label="Orchish">
				<option value="orc">Orc</option>
				<option value="goblin">Goblin</option>
				<option value="hobgoblin">Hobgoblin</option>
			</optgroup>
			<optgroup label="Fae">
				<option value="elf">Elf</option>
				<option value="faun">Faun</option>
				<option value="troll">Troll</option>
			</optgroup>
		</select>
		
		<br>
	
		<section id = "highMan" style="display:none;text-align:left;">
		
			<h3>High-Man</h3>
		
			<p>High-men are defined by their adaptability. It allowed them to spread out wide and far faster than any other human or orchish race. <br>
				Their settlement are quite diverse, going from small agglomeration of huts to huge bustling cities.  <br>
				It is not too unlikely to find high-men living amongst other races or member from the other races living in high-men cities.<br><br>
				<b>Size:</b> Medium<br>
				<b>Speed:</b> 9m per round, 90m per minute, 50km per day (10 hours)<br>
				<b>Age:</b> Minimum 16 years old<br>
				<b>Attributes:</b> Choose between the following array:
				<ul><li>7, 6, 6, 6, 5, 4<li>7, 7, 6, 5, 5, 4</ul>
				
				<script>
					var highManArray1 = [7,6,6,6,5,4];
					var highManArray2 = [7,7,6,5,5,4];
					
					function validateHighManAttributes(textAreaField)
					{
						var arrAttributes = [
						(document.getElementById("taAgility").value),
						(document.getElementById("taPower").value),
						(document.getElementById("taConstitution").value),
						(document.getElementById("taErudition").value),
						(document.getElementById("taPersona").value),
						(document.getElementById("taSagacity").value)];
						
						var entryValid1 = false;
						var entryValid2 = false;
						
						var tempArray1 = highManArray1.slice();
						var tempArray2 = highManArray2.slice();
						
						for (i = 0; i < 6; i++)
						{
							if (arrAttributes[i] != null && arrAttributes[i] != "")
							{
								entryValid1 = false;
								for (j = 0; j < 6; j++)
								{
									if (arrAttributes[i] == tempArray1[j])
									{
										entryValid1 = true;
										tempArray1[j] = null;
										break;
									}
								}
								if (!entryValid1)
								{
									break;
								}
							}
						}
						for (i = 0; i < 6; i++)
						{
							if (arrAttributes[i] != null && arrAttributes[i] != "")
							{
								entryValid2 = false;
								for (j = 0; j < 6; j++)
								{
									if (arrAttributes[i] == tempArray2[j])
									{
										entryValid2 = true;
										tempArray2[j] = null;
										break;
									}
								}
								if (!entryValid2)
								{
									break;
								}
							}
						}
						if (!entryValid1 && !entryValid2)
						{
							textAreaField.value = null;
						}
						
					}
				</script>
				
				<table style="width:80%; position:relative; left:5%;text-align:right;">
				<tr><td>Agility:<textarea id="taAgility" maxlength="1" rows="1" cols="1" onchange="validateHighManAttributes(this)"></textarea></td>
				<td>Power:<textarea id="taPower" maxlength="1" rows="1" cols="1" onchange="validateHighManAttributes(this)"></textarea></td>
				<td>Constitution:<textarea id="taConstitution" maxlength="1" rows="1" cols="1" onchange="validateHighManAttributes(this)"></textarea></td></tr>
				<tr><td>Erudition:<textarea id="taErudition" maxlength="1" rows="1" cols="1" onchange="validateHighManAttributes(this)"></textarea></td>
				<td>Persona:<textarea id="taPersona" maxlength="1" rows="1" cols="1" onchange="validateHighManAttributes(this)"></textarea></td>
				<td>Sagacity:<textarea id="taSagacity" maxlength="1" rows="1" cols="1" onchange="validateHighManAttributes(this)"></textarea></td></tr>
				</table>
				<br>
				<b>Skills:</b> Start with experience in the following skills:
				<ul><li>Brawling (2) <li>Detect Motive (3) <li>Linguistic (4) <li>Riding (3) <li>Perception & Vigilance (2)</ul>
				<b>Traits:</b>: Start with the following traits:
				<ul><li>Natural Talent <li>Fast Learner</ul></p>
			
			<section style="text-align:center;">	
			
				<h2 style="text-align:center;">Sub-Races</h2>
				
				<p>High-men are divided in 3 cultures.</p>
				
				<select id = "selSubraceHighMan" name="selSubraceHighMan" style="width:30%" onchange="toggleSectionList(this)">
					<option value= ""></option>
					<option value = "northerner">Northerner</option>
					<option value = "riverlander">Riverlander</option>
					<option value = "sandman">Sandman</option>
				</select>
			</section>
			
			<section id = "northerner" style = "display:none;">
			
				<h4>Northerner</h4>
			
				<p>They come from the north. They live of farming, fishing and raiding the population from the south. <br>
					Their society respect strength. They are a feudal society with an inherited nobility but any individuals can challenge their direct ruler to a duel to take their place.<br><br>
					<b>Background cost:</b> 1<br>
					<b>Attributes: </b>Receive 6 experience points in constitution.<br>
					<b>Skills: </b>Gain experience in the following skills:
					<ul><li>One Handed Swords (3)<li>Resist Cold (4)<li>Seamanship (3)<li>Confidence & Ego (2)</ul>
					<b>Traits: </b> Start with the following traits:
					<ul><li>Heat conservation</ul>
					The courage of the character cannot lean towards cowardice.
				</p>
				
				<br>
				
				<section style = "text-align:center;">
					<button type="button" onclick = 'updateCharacter()'>Update Character</button>
				</section>
			
			</section>
			
			<section id = "riverlander" style = "display:none;">
			
				<h4>Riverlander</h4>
				
				<p>Riverlander live in the temperate region between the frozen north and the arid desert. 
					They get their name from the large number of rivers coursing through their land. 
					They don’t use the name riverlanders themselves, this is a name given to them by the other high-men, 
					but refer to themselves by the name of the specific kingdom they come from. <br>
					They have the most feudal society, with a very rigid system of nobility. Many kings claim dominion over part of the riverland. 
					The borders of those kingdoms are quite fluid since wars are frequent. <br><br>
					<b>Background cost: </b>0<br>
					<b>Attributes: </b>Receive 6 experience points in sagacity.<br>
					<b>Skills: </b>Gain experience in the following skills:
					<ul><li>Crossbows & Firearms (2)<li>Heraldry & Nobility (4)<li>Survival (2)<li>Riding (4)</ul>
				</p>
					
				<br>
				
				<section style = "text-align:center;">
					<button type="button" onclick = 'updateCharacter()'>Update Character</button>
				</section>			
				
			</section>
			
			<section id = "sandman" style = "display:none;">
			
				<h4>Sandman</h4>
				
				<p>Sandmen live in the desert south of the riverland. They have a darker complexion to resist the scorching sun.<br>
					They live mostly in cities built on oasis. Those cities are the oldest of the human cities.<br>
					Sandmen society rely heavily on trade. They still live in a feudal systems but their nobility is not too involved in the everyday life and politics of their cities. 
					Rich merchants can become quite powerful and often time form councils which tend to hold the real political power. <br><br><br>
					<b>Background cost: </b>3<br>
					<b>Attributes: </b>Receive 6 experience points in persona.<br>
					<b>Skills: </b>Gain experience in the following skills:
					<ul><li>Appraise (2)<li>Charm & Persuasion (4)<li>Resist Heat (4)<li>Sorcery (2)</ul>
					<b>Traits: </b>Start with the following traits:
					<ul><li>Heat expansion</ul>
					The character can start with the following trait for an additional 4 background points:
					<ul><li><input type="checkbox" id="highManSandmanBoundToADarkPact" value="boundToADarkPact">Bound to a Dark Pact</ul><br><br>
					The temperance of the character can not lean towards insensitivity.
				</p>
				
				<br>
				
				<section style = "text-align:center;">
					<button type="button" onclick = 'updateCharacter()'>Update Character</button>
				</section>
			
			</section>
	
		</section>
		
		<section id = "highlander" style="display:none;text-align:left;">
		
			<h3>Highland Half-Man</h3>
			
			<p>Highland half-men, often shorten to highlanders, are short and stocky humans living in the mountains.<br>
				They carve grandiose citadels on the side of mountains. Those extraordinary construction extend deep inside mountains. <br>
				Highlanders are outstanding craftsmen. They take great pride in the quality and ornamentation of the things they produce.<br>
				Highlanders rely on trade to survive since they do not produce food themselves.<br>
				Highland half-men live in a very structured society. Professional guilds control the politics of the citadels. 
				Each guild is represented by a patriarch, usually the most experience members of the guild. 
				Those patriarchs form a councils managing the citadels.<br><br>
				<b>Size: </b>Medium<br>
				<b>Speed:</b> 7m per round, 70m per minute, 40km per day (10 hours)<br>
				<b>Age:</b> Minimum 23 years old<br>
				<b>Attributes:</b>
				</p><p style = "text-align:center">Agility: 4, Power: 7, Constitution: 7, Erudition: 6, Persona: 5, Sagacity: 6</p>
				<p style = "text-align:left"><b>Skills: </b>Start with experience in the following skills:
				<ul><li>Crafting (4)<li>Lifting & Pushing (3)<li>Resist Fatigue (2)<li>Resist Shock (2)<li>Resist Poison (3)</ul>
				<b>Traits:</b>: Start with the following traits:
				<ul><li>Low Light Vision<li>Beast of Burden</ul>
			</p>
			
			<section style="text-align:center;">	
			
				<h2 style="text-align:center;">Sub-Races</h2>
				
				<p>Highlander are divided in 3 castes.</p>
				
				<select id = "selSubraceHighlander" name="selSubraceHiglander" style="width:30%" onchange="toggleSectionList(this)">
					<option value= ""></option>
					<option value = "deepDweller">Deep Dweller</option>
					<option value = "flatDweller">Flat Dweller</option>
					<option value = "peakDweller">Peak Dweller</option>
				</select>
			</section>
			
			<section id = "deepDweller" style = "display:none;">
			
				<h4>Deep Dweller</h4>
				
				<p>Deep dwellers are the highlander living deep in the lower level of the citadels. They are the miners collecting the raw material for the artisans. <br>
					They barely come to the surface and their skin is often of a light grey tone.<br>
					They have their own sort of micro-society where the strict laws and traditions of the half-man don’t stand as firmly.<br><br>
					<b>Background cost: </b>3<br>
					<b>Attributes: </b>Receive 6 experience points in constitution.<br>
					<b>Skills: </b>Gain experience in the following skills:
					<ul><li>Athleticism (4)<li>Brawling (4)<li>Resist Fatigue (2)<li>Stealth (2)</ul>
					<b>Traits: </b> Deep dweller have the traits dark vision instead of low light vision.<br>
				</p>
				
				<br>
				
				<section style = "text-align:center;">
					<button type="button" onclick = 'updateCharacter()'>Update Character</button>
				</section>
			
			</section>
			
			<section id = "flatDweller" style = "display:none;">
			
				<h4>Flat Dweller</h4>
				
				<p>Flat dwellers live either at the base of mountains or relatively low on a peak.<br>
					They are the ones carving the entrance to the citadels and the ones trading with the outside world.  
					They are the most accessible of highlanders and the ones the most likely to be seen outside of a citadel. <br><br>
					<b>Background cost: </b>0<br>
					<b>Attributes: </b>Receive 6 experience points in sagacity.<br>
					<b>Skills: </b>Gain experience in the following skills:
					<ul><li>Appraise (4)<li>Geography (2)<li>Polearms (2)<li>Stonecutting (4)</ul>
					The temperance of the character can not lean towards debauchery.
				</p>
				
				<br>
				
				<section style = "text-align:center;">
					<button type="button" onclick = 'updateCharacter()'>Update Character</button>
				</section>
			
			</section>
			
			<section id = "peakDweller" style = "display:none;">
			
				<h4>Peak Dweller</h4>
				
				<p>Peak dwellers live high in the mountain, in place hard to reach for non-highlander. <br>
					They are the scholars and the ones designing machines and complex contraptions. <br><br>
					<b>Background cost: </b>1<br>
					<b>Attributes: </b>Receive 6 experience points in erudition.<br>
					<b>Skills: </b>Gain experience in the following skills:
					<ul><li>Two Handed Swords (2)<li>Engineering & Physics (4)<li>Knowledge (3)<li>Resist Cold (3)</ul>
				</p>
				
				<br>
				
				<section style = "text-align:center;">
					<button type="button" onclick = 'updateCharacter()'>Update Character</button>
				</section>
			
			</section>
			
		</section>
		
		<section id = "lowlander" style="display:none;text-align:left;">
		
			<h3>Lowland Half-Man</h3>
		
			<p>Lowland half-men, often shorten to lowlander, are short and nimble humans living in the hills at the base of mountains or in the edge of forest.<br>
				They used to be the lowest cast of the half-men society, forced to live outside the safety of the citadel and provide food to its inhabitants. 
				A long time ago, they revolted and created their own society.<br>
				They now live in small villages without much formal organization. Each village has a mayor but it is unclear if this role hold any real power or responsibility. <br>
				They are a very peaceful and leisurely race. They live simple live and enjoy simple pleasures.<br><br>
				<b>Size:</b> Small<br>
				<b>Speed:</b> 9m per round, 90m per minute, 50km per day (10 hours)<br>
				<b>Age: </b> Minimum 18 years old.<br>
				<b>Attributes:</b>
				</p><p style = "text-align:center">Agility: 7, Power: 4, Constitution: 5, Erudition: 6, Persona: 6, Sagacity: 7</p>
				<p style="display:none;text-align:left;">
				<b>Skills:</b> Start with experience in the following skills:
				<ul><li>Cooking (4) <li>Luck (4)<li>Reflex (3)<li>Stealth (2)<li>Sleight of Hand (2)</ul>
				<b>Traits:</b>: Start with the following traits:
				<ul><li>Low light vision<li>Lucky</ul></p>
			
			<section style="text-align:center;">	
			
				<h2 style="text-align:center;">Sub-Races</h2>
				
				<p>Lowlander are divided in 2 types of community.</p>
				
				<select id = "selSubraceLowlander" name="selSubraceLowlander" style="width:30%" onchange="toggleSectionList(this)">
					<option value= ""></option>
					<option value = "hillFolk">Hill Folk</option>
					<option value = "woodsFolk">Woods Folk</option>
				</select>
			</section>
			
			<section id = "hillFolk" style = "display:none;">
			
				<h4>Hill Folk</h4>
			
				<p>Hill folks have their farm in the foothills at the bottom of mountains. <br>
					They live in very well maintained turf houses. They raises mostly goats and sheep and grow wheat and corn.<br>
					They like to spend their evening gathered together, signing or telling stories.<br><br>
					<b>Background cost:</b> 0<br>
					<b>Attributes: </b>Receive 6 experience points in persona.<br>
					<b>Skills: </b>Gain experience in the following skills:
					<ul><li>Arts & Performance (4)<li>Charm & Persuasion (2)<li>Slings (3)<li>Taming & Training (4)</ul>
					<b>Traits:</b> The character can start with the following trait for an additional 3 background points:
					<ul><li><input type="checkbox" id="lowlanderHillFolkTraitMerrymaker" value="merrymaker">Merrymaker</ul>
					The friendliness of the character cannot lean towards surliness.
				</p>
				
				<br>
				
				<section style = "text-align:center;">
					<button type="button" onclick = 'updateCharacter()'>Update Character</button>
				</section>
			
			</section>
			
			<section id = "woodsFolk" style = "display:none;">
			
				<h4>Woods Folk</h4>
				
				<p>Wood folks live at the edge of forest in little log cabins. 
					They live mostly of hunting, fishing and foraging. They trade furs with the other races to compensate for their lack of farming.<br><br>
					<b>Background cost: </b>2<br>
					<b>Attributes: </b>Receive 6 experience points in sagacity.<br>
					<b>Skills: </b>Gain experience in the following skills:
					<ul><li>Bows (2)<li>Perception & Vigilance (3)<li>Stealth (3)<li>Survival (4)</ul>
				</p>
					
				<br>
				
				<section style = "text-align:center;">
					<button type="button" onclick = 'updateCharacter()'>Update Character</button>
				</section>			
				
			</section>
			
	
		</section>
		
		<section id = "orc" style="display:none;text-align:left;">
		
			<h3>Orc</h3>
		
			<p>Orcs are brawny humanoid with a skin colour going from a yellowish-green to dark green, almost black. 
				They generally have tusk protruding from their mouth. <br>
				They live in small village or agglomeration.  
				They now live in small villages without much formal organization. Each village has a mayor but it is unclear if this role hold any real power or responsibility. <br>
				Every family own a farm where they usually cultivate cereals and vegetables or raises boars.<br><br>
				<b>Size:</b> Medium<br>
				<b>Speed:</b> 9m per round, 90m per minute, 50km per day (10 hours)<br>
				<b>Age: </b> Minimum 15 years old.<br>
				<b>Attributes:</b>
				</p><p style = "text-align:center">Agility: 6, Power: 7, Constitution: 6, Erudition: 4, Persona: 7, Sagacity: 5</p>
				<p style="display:none;text-align:left;">
				<b>Skills:</b> Start with experience in the following skills:
				<ul><li>Axes & Maces (3)<li>Athleticism (4)<li>Confidence & Ego (3)<li>Insult & Intimidation (3)<li>Resist Pain (2)</ul>
				<b>Traits:</b>: Start with the following traits:
				<ul><li>Fearsome<li>Strong grip</ul></p>
			
			<section style="text-align:center;">	
			
				<h2 style="text-align:center;">Sub-Races</h2>
				
				<p>Orchish society is divided in 3 subraces.</p>
				
				<select id = "selSubraceOrc" name="selSubraceOrc" style="width:30%" onchange="toggleSectionList(this)">
					<option value= ""></option>
					<option value = "blackSkinned">Black Skinned</option>
					<option value = "pigRider">Pig Rider</option>
					<option value = "tideCrasher">Tide Crasher</option>
				</select>
			</section>
			
			<section id = "blackSkinned" style = "display:none;">
			
				<h4>Black Skinned</h4>
			
				<p>Black-Skinend orcs live in the desert and jungle in the south. 
					They get their name from their dark green, almost black, complexion. <br>
					They like to cover their body with tattoos, despite the facts that those are barely visible against their dark skin.<br>
					They tend to rely more on ambush tactics than others orcs and do not consider this type of approach has dishonourable.<br><br>
					<b>Background cost:</b> 3<br>
					<b>Attributes: </b>Receive 6 experience points in constitution.<br>
					<b>Skills: </b>Gain experience in the following skills:
					<ul><li>Brawling (3)<li>Stealth (4)<li>Perception & Vigilance (1)<li>Resist Pain (2)</ul>
				</p>
				
				<br>
				
				<section style = "text-align:center;">
					<button type="button" onclick = 'updateCharacter()'>Update Character</button>
				</section>
			
			</section>
			
			<section id = "pigRider" style = "display:none;">
			
				<h4>Pig Rider</h4>
				
				<p>Pig riders live in the temperate region of the continent. They are name after the giant boars they raise and mount to battle. <br>
					They value honour highly and will often rather die than be dishonoured.  
					This sentiment often put them at odd with the black-skinned orcs. <br>
					They drink abundantly a strong ale that would knock down any non-orcs but do not seem affected by it.<br><br>
					<b>Background cost: </b>0<br>
					<b>Attributes: </b>Receive 6 experience points in persona.<br>
					<b>Skills: </b>Gain experience in the following skills:
					<ul><li>Polearms (3)<li>Resist Poison (3)<li>Riding (4)<li>Taming & training (2)</ul>
					The honour of the character is moved 1 rank toward honourable.
				</p>
					
				<br>
				
				<section style = "text-align:center;">
					<button type="button" onclick = 'updateCharacter()'>Update Character</button>
				</section>			
				
			</section>
			
			<section id = "tideCrasher" style = "display:none;">
			
				<h4>Tide Crasher</h4>
				
				<p>Tide crasher orcs live on coasts. 
					They are know for their ship building, allowing them to land by surprise anywhere close to the sea or a river. 
					It is said that the northerner learned their ship building from them.<br>
					They value honour highly and will often rather die than be dishonoured.  
					They farm and raise boar of regular size, not the monster their cousins developed. <br>
					They like to wear jewellery like earrings and tuskbands and are sometime ridiculed by the other orcs for that habits.<br><br>
					<b>Background cost: </b>1<br>
					<b>Attributes: </b>Receive 6 experience points in constitution.<br>
					<b>Skills: </b>Gain experience in the following skills:
					<ul><li>Crossbows & Firearms (3)<li>Resist Cold (3)<li>Seamanship (4)<li>Survival (2)</ul>
					The honour of the character is moved 1 rank toward honourable.
				</p>
					
				<br>
				
				<section style = "text-align:center;">
					<button type="button" onclick = 'updateCharacter()'>Update Character</button>
				</section>			
				
			</section>
			
	
		</section>
		
		<section id = "goblin" style="display:none;text-align:left;">
		
			<h3>Goblin</h3>
		
			<p>Goblins live amongst the orcs; on every orchish farm you can expect to see at least a family of goblins living there.<br>
				They are very good craftsman; their creation might not the prettiest but they are quite functional. <br>
				Goblins recently discovered a black powder that burns very quickly, releasing a lot of energy. 
				They are now experimenting with rudimentary firearms. 
				Those weapons might be slow to reload but they can cause quite a bit of damage.<br>
				Goblins also enjoy trading and bargaining. Despite the facts that some of them make a very good living from commerce, they don’t seems to live richly.<br><br>
				<b>Size:</b> Small<br>
				<b>Speed:</b> 9m per round, 90m per minute, 50km per day (10 hours)<br>
				<b>Age: </b> Minimum 21 years old.<br>
				<b>Attributes:</b>
				</p><p style = "text-align:center">Agility: 7, Power: 4, Constitution: 6, Erudition: 7, Persona: 6, Sagacity: 5</p>
				<p style="display:none;text-align:left;">
				<b>Skills:</b> Start with experience in the following skills:
				<ul><li>Apprasie (4)<li>Crossbows & Firearms (2)<li>Knowledge (3)<li>Science (3)<li>Stealth (3)</ul>
				<b>Traits:</b>: Start with the following traits:
				<ul><li>Dark vision<li>Greed</ul></p>
			
			<section style="text-align:center;">	
			
				<h2 style="text-align:center;">Sub-Races</h2>
				
				<p>Goblins are divided in 3 subraces.</p>
				
				<select id = "selSubraceGoblin" name="selSubraceGoblin" style="width:30%" onchange="toggleSectionList(this)">
					<option value= ""></option>
					<option value = "night">Night</option>
					<option value = "ravenous">Ravenous</option>
					<option value = "redcap">Redcap</option>
				</select>
			</section>
			
			<section id = "night" style = "display:none;">
			
				<h4>Night</h4>
			
				<p>Night goblins live with the black-skinned orcs. They act as scout for the raids and ambushes. <br>
					They do not tend to rely on range weapons and prefer sneaking on their target and stabbing them before being seen.<br>
					They tend to dress in black silk and will sometime cover their face with soot to darken it.<br><br>
					<b>Background cost:</b> 3<br>
					<b>Attributes: </b>Receive 6 experience points in agility.<br>
					<b>Skills: </b>Gain experience in the following skills:
					<ul><li>Brawling (2)<li>Sleight of hand (4)<li>Stealth (4)<li>Survival (2)</ul>
				</p>
				
				<br>
				
				<section style = "text-align:center;">
					<button type="button" onclick = 'updateCharacter()'>Update Character</button>
				</section>
			
			</section>
			
			<section id = "ravenous" style = "display:none;">
			
				<h4>Ravenous</h4>
				
				<p>The ravenous goblins live with inside the continent, with the pig rider orcs.<br>
					They travel a lot for trade, selling produce from the orcs and their contraptions.<br>
					They are redoubtable negotiator and will always ensure that every transaction benefits them.<br><br>
					<b>Background cost: </b>0<br>
					<b>Attributes: </b>Receive 6 experience points in constitution.<br>
					<b>Skills: </b>Gain experience in the following skills:
					<ul><li>Charm & Persuasion (2)<li>Polearms (3)<li>Resist Poison (3)<li>Riding (4)</ul>
					Their generosity can not lean towards lavishness.
				</p>
					
				<br>
				
				<section style = "text-align:center;">
					<button type="button" onclick = 'updateCharacter()'>Update Character</button>
				</section>			
				
			</section>
			
			<section id = "redcap" style = "display:none;">
			
				<h4>Redcap</h4>
				
				<p>Red cap goblins live on the coast with the tide crasher orcs. <br>
					They are the masters of war machines design.<br>
					It is not unheard of to have redcap goblins leading a pack of orcs on a raid.<br>
					They get their name from a red beret they often wears. 
					This hat is a sign of someone who went raiding, the red representing the blood they drew from their enemy.<br><br>
					<b>Background cost: </b>0<br>
					<b>Attributes: </b>Receive 6 experience points in sagacity.<br>
					<b>Skills: </b>Gain experience in the following skills:
					<ul><li>Axes & Maces (2)<li>Confidence & Ego (3)<li>Mechanics (3)<li>Seamanship (4)</ul>
				</p>
					
				<br>
				
				<section style = "text-align:center;">
					<button type="button" onclick = 'updateCharacter()'>Update Character</button>
				</section>			
				
			</section>
			
	
		</section>
		
		<section id = "hobgoblin" style="display:none;text-align:left;">
		
			<h3>Hobgoblin</h3>
		
			<p>Hobgoblins are the offspring of a frown upon relationship between a goblin and an orc.<br>
				They are bigger than goblins but typically not as bulky as orcs. <br>
				Orchish society frown upon the creation those half-breed, mainly due to the fact that they are infertile. <br>
				The life of an hobgoblin is not easy; growing up with people talking behind you back, knowing you are the fruit of frown upon relationship.<br><br>
				<b>Size:</b> Medium<br>
				<b>Speed:</b> 9m per round, 90m per minute, 50km per day (10 hours)<br>
				<b>Age: </b> Minimum 18 years old.<br>
				<b>Attributes:</b>Hobgoblins attributes depend on their subrace. <br>
				<b>Skills:</b> Start with experience in the following skills:
				<ul><li>Axes & Maces (2)<li>Athleticism (3)<li>Detect Motive (4)<li>Insult & Intimidation (4)<li>Reflex (2)</ul>
				<b>Traits:</b>: Start with the following traits:
				<ul><li>Fearless<li>Infertile<li>Low light vision</ul></p>
			
			<section style="text-align:center;">	
			
				<h2 style="text-align:center;">Sub-Races</h2>
				
				<p>Hobgoblins are divided based on their parentage.</p>
				
				<select id = "selSubraceHobgoblin" name="selSubraceHobgoblin" style="width:30%" onchange="toggleSectionList(this)">
					<option value= ""></option>
					<option value = "orcFathered">Fathered by an Orc</option>
					<option value = "goblinFathered">Fathered by a Goblin</option>
				</select>
			</section>
			
			<section id = "orcFathered" style = "display:none;">
			
				<h4>Fathered by an Orc</h4>
			
				<p>An orc for father and a goblin for mother.<br><br>
					<b>Background cost:</b> 3<br>
					<b>Attributes:</b>
					</p><p style = "text-align:center">Agility: 7, Power: 6, Constitution: 6, Erudition: 4, Persona: 7, Sagacity: 5</p>
					<p style="display:none;text-align:left;">
					<b>Skills: </b>Gain experience in the following skills:
					<ul><li>Axes & Maces (2)<li>Confidence & Ego (3)<li>Insult & Intimidation (3)<li><input type = "radio" name = "orcFatheredSkills" value = "seamanship">Seamanship (4)</input> or <br>
					<input type = "radio" name = "orcFatheredSkills" value = "tamingTraining">Taming & Training (4)</input></ul>
				</p>
				
				<br>
				
				<section style = "text-align:center;">
					<button type="button" onclick = 'updateCharacter()'>Update Character</button>
				</section>
			
			</section>
			
			<section id = "goblinFathered" style = "display:none;">
			
				<h4>Fathered by a Goblin</h4>
				
				<p>A goblin for father and an orc for mother.<br><br>
					<b>Background cost: </b>0<br>
					<b>Attributes:</b>
					</p><p style = "text-align:center">Agility: 7, Power: 4, Constitution: 6, Erudition: 6, Persona: 7, Sagacity: 5</p>
					<p style="display:none;text-align:left;">
					<b>Skills: </b>Gain experience in the following skills:
					<ul><li>Crossbows & Firearms (2)<li>Knowledge (3)<li>Science (3)<li><input type = "radio" name = "goblinFatheredSkills" value = "appraise">Appraise (4)</input> or <br>
					<input type = "radio" name = "goblinFatheredSkills" value = "mechanics">Mechanics (4)</input></ul>
				</p>
					
				<br>
				
				<section style = "text-align:center;">
					<button type="button" onclick = 'updateCharacter()'>Update Character</button>
				</section>			
				
			</section>
	
		</section>
		
		<section id = "elf" style="display:none;text-align:left;">
		
			<h3>Elf</h3>
			
			<p>The elvish race is the oldest sentient race in the world. They are the ones who taught humans and orcs the basis of botanic and farming. <br>
				Elves have very smooth features, their skin colour goes from very pale, almost blueish-white, to olive colour.<br>
				Elves live in multi-level villages, located in the forest, in harmony with the plant and trees. 
				Houses are more grown than built; trees are tutored and guided to offer adequate shelter to the elves.<br>
				Elves are the leader of the lose coalition of the faes. 
				A lot of tension with the other races have risen in the last centuries due to the fact that those younger races expand rapidly and encroached on the wild. <br>
				The elves are now determined to not let the younger races encroach any more on their land.<br><br>
				<b>Size: </b>Medium<br>
				<b>Speed:</b> 9m per round, 90m per minute, 50km per day (10 hours)<br>
				<b>Age:</b> Minimum 35 years old<br>
				<b>Attributes:</b>
				</p><p style = "text-align:center">Agility: 7, Power: 6, Constitution: 4, Erudition: 7, Persona: 5, Sagacity: 6</p>
				<p style = "text-align:left"><b>Skills: </b>Start with experience in the following skills:
				<ul><li>Bows (2)<li>Reflex (3)<li>Resist Hunger (4)<li>Stealth (3)<li>Perception & Vigilance (3)</ul>
				<b>Traits:</b>: Start with the following traits:
				<ul><li>Ascetic<li>Nimble feet<li>Spirit tree</ul>
			</p>
			
			<section style="text-align:center;">	
			
				<h2 style="text-align:center;">Sub-Races</h2>
				
				<p>Elves are divided in 3 courts.</p>
				
				<select id = "selSubraceElf" name="selSubraceElf" style="width:30%" onchange="toggleSectionList(this)">
					<option value= ""></option>
					<option value = "seelie">Summer Court (Seelie)</option>
					<option value = "unseelie">Winter Court (Unseelie)</option>
					<option value = "twilight">Twilight Court (Elves of Dusk and Dawn)</option>
				</select>
			</section>
			
			<section id = "seelie" style = "display:none;">
			
				<h4>Summer Court (Seelie)</h4>
				
				<p>The Seelie elves of the summer court are the ones leading the faes in the warm summer years. 
					They are more optimist and cheeful than the other elves. <br><br>
					<b>Background cost: </b>0<br>
					<b>Attributes: </b>Receive 6 experience points in persona.<br>
					<b>Skills: </b>Gain experience in the following skills:
					<ul><li>One handed swords (2)<li>Arts & Performance (4)<li>Charm & Persuasion (4)<li>Resist Heat (2)</ul>
				</p>
				
				<br>
				
				<section style = "text-align:center;">
					<button type="button" onclick = 'updateCharacter()'>Update Character</button>
				</section>
			
			</section>
			
			<section id = "unseelie" style = "display:none;">
			
				<h4>Winter Court (Unseelie)</h4>
				
				<p>The unseelie elves of the winter court are the ones leading the faes in the cold winter years.  
					They tend to be melancholic and untrusting.<br><br>
					<b>Background cost: </b>1<br>
					<b>Attributes: </b>Receive 6 experience points in sagacity.<br>
					<b>Skills: </b>Gain experience in the following skills:
					<ul><li>Two handed swords (2)<li>Detect Motive (3)<li>Perception & Vigilance (4)<li>Resist Cold (3)</ul>
				</p>
				
				<br>
				
				<section style = "text-align:center;">
					<button type="button" onclick = 'updateCharacter()'>Update Character</button>
				</section>
			
			</section>
			
			<section id = "twilight" style = "display:none;">
			
				<h4>Twilight Court (Elves of Dusk and Dawns)</h4>
				
				<p>The elves of dusk and dawn are the ones which refuse to take part in the politics of the faes.  
					They are called the twilight court but are not a real hierarchical court like the summer court or the winter court.<br><br>
					<b>Background cost: </b>3<br>
					<b>Attributes: </b>Receive 6 experience points in erudition.<br>
					<b>Skills: </b>Gain experience in the following skills:
					<ul><li>Elementalism (2)<li>Knowledge (4)<li>Stealth (3)<li>Resist Fatigue (3)</ul>
				</p>
				
				<br>
				
				<section style = "text-align:center;">
					<button type="button" onclick = 'updateCharacter()'>Update Character</button>
				</section>
			
			</section>
			
		</section>
	
		<section id = "faun" style="display:none;text-align:left;">
		
			<h3>Faun</h3>
			
			<p>The fauns live in small semi-nomadic community in the woods. They live in small cabins on wheel or in yourts. <br>
				Fauns have goat-like legs and horns and a human upper body.  
				Their skin, eyes and fur colour varies in the combine range of humans and goats.  
				Their ears are slightly pointed and longer than human ears.<br>
				Unlike the other faes, fauns are not worried by the expansion of the other races.  
				They consider those other races as part of the natural world and see their expansion as a simple change in nature.<br>
				Fauns like to play tricks and to challenge people. They are decent craftsman but do not care about money.  
				If they accept to trade their product they’ll usually ask for a favour or the completion of a quest.  
				Those favour and quest will often be strange or pointless.  
				They can be asked just for the amusement of the faun or to teach a lesson to the quester.<br><br>
				<b>Speed:</b> 11m per round, 110m per minute, 60km per day (10 hours)<br>
				<b>Size: </b> The size of the fauns depends on their subrace.<br>
				<b>Age:</b> Minimum 16 years old<br>
				<b>Attributes:</b> Fauns attributes depend on their subrace. <br>
				<p style = "text-align:left"><b>Skills: </b>Start with experience in the following skills:
				<ul><li>Crafting (4)<li>Luck (4)<li>Polearms (2)<li>Survival (2)<li>Taming & Training (3)</ul>
				<b>Traits:</b>: Start with the following traits:
				<ul><li>Animal whisperer<li>Hoofed feet<li>Horned head</ul>
			</p>
			
			<section style="text-align:center;">	
			
				<h2 style="text-align:center;">Sub-Races</h2>
				
				<p>Fauns are divided in 2 breed.</p>
				
				<select id = "selSubraceFaun" name="selSubraceFaun" style="width:30%" onchange="toggleSectionList(this)">
					<option value= ""></option>
					<option value = "autumnBorn">Autumn Born</option>
					<option value = "springBorn">Spring Born</option>
				</select>
			</section>
			
			<section id = "autumnBorn" style = "display:none;">
			
				<h4>Autumn Born</h4>
				
				<p>Fauns born in autumn are big, strong, though and wise.<br><br>
					<b>Background cost: </b>0<br>
					<b>Size: </b>Medium<br>
					<b>Attributes: </b>
					</p><p style = "text-align:center">Agility: 5, Power: 7, Constitution: 7, Erudition: 4, Persona: 6, Sagacity: 7</p>
					<p style = "text-align:left"><b>Skills: </b>Gain experience in the following skills:
					<ul><li>Athleticism (4)<li>Detect Motive (3)<li>Polearms (2)<li>Resist Cold (3)</ul>
				</p>
				
				<br>
				
				<section style = "text-align:center;">
					<button type="button" onclick = 'updateCharacter()'>Update Character</button>
				</section>
			
			</section>
			
			<section id = "springBorn" style = "display:none;">
			
				<h4>Spring Born</h4>
				
				<p>Fauns born int the spring are small, nimble and light hearted.<br><br>
					<b>Background cost: </b>0<br>
					<b>Size: </b>Small<br>
					<b>Attributes: </b>
					</p><p style = "text-align:center">Agility: 7, Power: 4, Constitution: 5, Erudition: 6, Persona: 7, Sagacity: 7</p>
					<p style = "text-align:left"><b>Skills: </b>Gain experience in the following skills:
					<ul><li>Acrobatics (3)<li>Arts & Performance (4)<li>Slings (2)<li>Stealth (3)</ul>
					<b>Traits:</b> The character can start with the following trait for an additional 3 background points:
					<ul><li><input type="checkbox" id="faunSpringBornTraitMerrymaker" value="merrymaker">Merrymaker</ul>
				</p>
				
				<br>
				
				<section style = "text-align:center;">
					<button type="button" onclick = 'updateCharacter()'>Update Character</button>
				</section>
			
			</section>
			
		</section>
		
		<section id = "troll" style="display:none;text-align:left;">
		
			<h3>Troll</h3>
			
			<p>Living in caves and mountains, the trolls are big, strong and very tough.  
				Their rocky skin makes them hard to kill.  
				Their eyes have the appearance of precious stone like ruby, emerald, amethyst and sapphire.<br>
				Trolls society is very militaristic and hierarchical.  
				The stronger fighters can climb up in ranks while the weaks will forever stay at the bottom of the social ladder.<br>
				Trolls believe that the feas should be more on the offensive against the other races instead of protecting the status quo as directed by the elves.  
				If they could convince the other faes they would gladly spearhead the removal of the humans and green-skins from the world, or at least, forced them into much smaller territory.<br><br>
				<b>Size: </b>Large<br>
				<b>Speed:</b> 9m per round, 90m per minute, 50km per day (10 hours)<br>
				<b>Age:</b> Minimum 15 years old<br>
				<b>Attributes:</b>
				</p><p style = "text-align:center">Agility: 6, Power: 7, Constitution: 8, Erudition: 4, Persona: 5, Sagacity: 4</p>
				<p style = "text-align:left"><b>Skills: </b>Start with experience in the following skills:
				<ul><li>Athleticism (3)<li>Axes & Maces (3)<li>Insult & Intimidation (3)<li>Natural Healing (4)<li>Resist Pain (3)</ul>
				<b>Traits:</b>: Start with the following traits:
				<ul><li>Dark vision<li>Fearsome<li>Regeneration<li>Turning to stone</ul>
			</p>
			
			<section style="text-align:center;">	
			
				<h2 style="text-align:center;">Sub-Races</h2>
				
				<p>Trolls are divided in 4 clans.</p>
				
				<select id = "selSubraceTroll" name="selSubraceTroll" style="width:30%" onchange="toggleSectionList(this)">
					<option value= ""></option>
					<option value = "basalt">Basalt Clan</option>
					<option value = "dirt">Dirt Clan</option>
					<option value = "granite">Granite Clan</option>
					<option value = "sand">Sand Clan</option>
				</select>
			</section>
			
			<section id = "basalt" style = "display:none;">
			
				<h4>Basalt Clan</h4>
				
				<p>Trolls from the basalt clan live deep in volcanic caves.  
					They have a black complexion, smoother than the other trolls.  
					They serve as scout for the trolls military expedition. <br><br>
					<b>Background cost: </b>3<br>
					<b>Attributes: </b>Receive 6 experience points in sagacity.<br>
					<b>Skills: </b>Gain experience in the following skills:
					<ul><li>Brawling (3)<li>Detect Motive (3)<li>Survival (3)<li>Stealth (3)</ul>
				</p>
				
				<br>
				
				<section style = "text-align:center;">
					<button type="button" onclick = 'updateCharacter()'>Update Character</button>
				</section>
			
			</section>
			
			<section id = "dirt" style = "display:none;">
			
				<h4>Dirt Clan</h4>
				
				<p>Trolls from the dirt clan lives at the root of mountain.  
					They are the least respected amongst the trolls and are usually in charge of the logistic of the military operation.<br>
					They are a little more nimble than the other trolls.<br><br>
					<b>Background cost: </b>1<br>
					<b>Attributes: </b>Receive 6 experience points in agility.<br>
					<b>Skills: </b>Gain experience in the following skills:
					<ul><li>Acrobatics (3)<li>Cooking (3)<li>Crafting (4)<li>Reflex (3)<li>Thrown (2)</ul>
				</p>
				
				<br>
				
				<section style = "text-align:center;">
					<button type="button" onclick = 'updateCharacter()'>Update Character</button>
				</section>
			
			</section>
			
			<section id = "granite" style = "display:none;">
			
				<h4>Granite Clan</h4>
				
				<p>The granite clan is the most populous of the troll clan.  
					They are usually grey in colour with a grainy texture.  
					They are the toughest of the trolls.<br><br>
					<b>Background cost: </b>0<br>
					<b>Attributes: </b>Receive 6 experience points in constitution.<br>
					<b>Skills: </b>Gain experience in the following skills:
					<ul><li>Axes & Maces (2)<li>Resist Cold (3)<li>Resist Pain (3)<li>Resist Shock (4)</ul>
				</p>
				
				<br>
				
				<section style = "text-align:center;">
					<button type="button" onclick = 'updateCharacter()'>Update Character</button>
				</section>
			
			</section>
			
			<section id = "sand" style = "display:none;">
			
				<h4>Sand Clan</h4>
				
				<p>The Sand clan trolls live in the desert.  
					They are mostly separated from the other trolls.  
					They don’t have to deal as much with the other races and have the impression that they do a better job at defending their territory.<br><br>
					<b>Background cost: </b>3<br>
					<b>Attributes: </b>Receive 6 experience points in persona.<br>
					<b>Skills: </b>Gain experience in the following skills:
					<ul><li>Confidence & Ego (2)<li>Insult & Intimidation (3)<li>Perception & Vigilance (4)<li>Polearms (2)</ul>
				</p>
				
				<br>
				
				<section style = "text-align:center;">
					<button type="button" onclick = 'updateCharacter()'>Update Character</button>
				</section>
			
			</section>
			
		</section>
		
	</section>
			
	<hr>
	
	<h2 style="position:relative;">Place of Origin  <button type="button" id = "buttOrigin" onclick = 'toggleSection("secOrigin", this)' style="position:absolute; top:50%;right:0%;transform: translate(-50%, -50%);">+</button></h2>
	
	<section id = "secOrigin" style="display:none;">
	
		<p>The environment where the character has been raised will have an impact on the development of this one.</p>
		
		<select id = "selOrigin" name="selOrigin" style="width:30%" onchange="toggleSectionList(this)">
			<option value = ""></option>
			<option value="highMenCity">High-Men City</option>
			<option value="highMenTown">High-Men Town</option>
			<option value="highMenVillage">High-Men Village</option>
			<option value="highlanderCitadel">Highlander Citadel</option>
			<option value="lowlanderVillage">Lowlander Village</option>
			<option value="orchishHamlet">Orchish Hamlet</option>
			<option value="elvenVillage">Elven Village</option>
			<option value="faunCommunity">Faun Community</option>
			<option value="trollCamp">Troll Camp</option>
			<option value="inTheWild">In the Wild</option>
	</select>
		
		<br>
	
		<section id = "highMenCity" style="display:none;text-align:left;">
		
			<h3>High-Men City</h3>
			
			<p>The big cities of the high-men are always busy with trades.  
				Individuals from every races are represented in those cities.  
				They are run by a lord and some minor noble usually inhabit them.<br><br>
				<b>Background Cost:</b> The cost varies based on your race.
				<ul><li>High-Man: 0<li>Highland Half-Man: 2<li>Lowland Half-Man: 1<li>Orc: 3<li>Goblin: 1<li>Hobgoblin: 1<li>Elf: 4<li>Faun: 3<li>Troll: 6</ul>
				<b>Skills:</b> Gain experience in the following skills:
				<ul><li>Appraise (4)<li>Arts & Performance (2)<li>Charm & Persuasion (2)<li>Heraldry & Nobility (3)<li>Insult & Intimidation (4)<li>Linguistic (3)</ul>
				<b>Traits:</b> The character can start with the following trait:
				<ul><li><input type="checkbox" id="highMenCityTraitUrban" value="urban">Urban</ul>
				<b>Career Path:</b> The character can start with the following career path:
				<ul><li>Commerce<li>Maritime<li>Unemployed<li>Service</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			<section style = "text-align:center;">
				<button type="button" onclick = 'updateCharacter()'>Update Character</button>
			</section>
		
		</section>
		
		<section id = "highMenTown" style="display:none;text-align:left;">
		
			<h3>High-Men Town</h3>
			
			<p>High-Men town are usually place where a lot of goods are produce to be sent to the cities to be sold.  
				Town are much less diverse than cities. They are governed by a lord.  
				Sometime multiple villages will be part of the fief of the lord.<br><br>
				<b>Background Cost:</b> The cost varies based on your race.
				<ul><li>High-Man: 0<li>Highland Half-Man: 3<li>Lowland Half-Man: 2<li>Orc: 4<li>Goblin: 3<li>Hobgoblin: 4<li>Elf: 4<li>Faun: 3<li>Troll: N/A</ul>
				<b>Skills:</b> Gain experience in the following skills:
				<ul><li>Brawling (2)<li>Crafting (4)<li>Charm & Persuasion (2)<li>Mechanics (3)<li>Riding (3)</ul>
				<b>Career Path:</b> The character can start with the following career path:
				<ul><li>Crafts<li>Commerce<li>Maritime<li>Service<li>Primary</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			<section style = "text-align:center;">
				<button type="button" onclick = 'updateCharacter()'>Update Character</button>
			</section>
		
		</section>
		
		<section id = "highMenVillage" style="display:none;text-align:left;">
		
			<h3>High-Men Village</h3>
			
			<p>People working in the fields, producing most of the food for the towns and cities, live in village.  
				 It is unusual to encounter non-high-men in high-men village. A lord control one or more villages.<br><br>
				<b>Background Cost:</b> The cost varies based on your race.
				<ul><li>High-Man: 0<li>Highland Half-Man: 5<li>Lowland Half-Man: 4<li>Orc: N/A<li>Goblin: 5<li>Hobgoblin: N/A<li>Elf: 6<li>Faun: 4<li>Troll: N/A</ul>
				<b>Skills:</b> Gain experience in the following skills:
				<ul><li>Athleticism (3)<li>Brawling (2)<li>Crafting (3)<li>Mechanics (3)<li>Riding (3)<li>Taming & Training (4)</ul>
				<b>Career Path:</b> The character can start with the following career path:
				<ul><li>Primary</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			<section style = "text-align:center;">
				<button type="button" onclick = 'updateCharacter()'>Update Character</button>
			</section>
		
		</section>
		
		<section id = "highlanderCitadel" style="display:none;text-align:left;">
		
			<h3>Highlander Citadel</h3>
			
			<p>Carved on the side of mountains, extending deep underground, highlander citadels are marvel of architecture.<br>
				The highlander cultures is a strict one. People living in the citadels have to learn to defend the citadel.<br>
				Crime in citadels is almost non-existent, except in the lower level populated by the deep dweller.<br><br>
				<b>Background Cost:</b> The cost varies based on your race.
				<ul><li>High-Man: 4<li>Highland Half-Man: 0<li>Lowland Half-Man: 2<li>Orc: N/A<li>Goblin: 4<li>Hobgoblin: N/A<li>Elf: 6<li>Faun: 5<li>Troll: N/A</ul>
				<b>Skills:</b> Gain experience in the following skills:
				<ul><li>Appraise (4)<li>Crafting (4)<li>Deduction & Logic (3)<li>Detect Motive (3)<li>Melee Combat (2)<li>Perception & Vigilance (2)</ul>
				<b>Traits:</b> The character can start with the following traits:
				<ul><li><input type="checkbox" id="highlanderCitadelTraitBornUnderground" value="bornUnderground">Born Underground</ul>
				<b>Career Path:</b> The character can start with the following career path:
				<ul><li>Crafts<li>Commerce<li>Military<li>Scholar</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			<section style = "text-align:center;">
				<button type="button" onclick = 'updateCharacter()'>Update Character</button>
			</section>
		
		</section>
		
		<section id = "lowlanderVillage" style="display:none;text-align:left;">
		
			<h3>Lowlander Village</h3>
			
			<p>Lowlander villages are either set in the foothills of mountains or at the edge of forest. <br>
				The culture in the lowlander villages is very laid back.  
				The crops chosen for the field are easy to grow and require little work outside of the seeding and the harvesting seasons and animals are raise in a free range manner,
				 feed themselves on their own and are rounded up when needed.  
				 A lot of wild food is gathered and hunting is done year round.
				Lowlander village don’t have much in term of hierarchy; each village as an elected mayor and sheriff but neither of those roles seems to hold any real power or responsibilities.  
				In some occasions, either the mayor or the sheriff will be asked to judge a dispute but a random third party is almost as likely to be asked.<br><br>
				<b>Background Cost:</b> The cost varies based on your race.
				<ul><li>High-Man: 3<li>Highland Half-Man: 3<li>Lowland Half-Man: 0<li>Orc: 5<li>Goblin: 4<li>Hobgoblin: 5<li>Elf: 4<li>Faun: 3<li>Troll: N/A</ul>
				<b>Skills:</b> Gain experience in the following skills:
				<ul><li>Arts & performance (3)<li>Foraging & Hunting (4)<li>Perception & Vigilance (2)<li>Range Combat (2)<li>Stealth (4)<li>Survival (3)</ul>
				<b>Career Path:</b> The character can start with the following career path:
				<ul><li>Arts<li>Crafts<li>Commerce<li>Primary<li>Service</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			<section style = "text-align:center;">
				<button type="button" onclick = 'updateCharacter()'>Update Character</button>
			</section>
		
		</section>
		
		<section id = "orchishHamlet" style="display:none;text-align:left;">
		
			<h3>Orchish Hamlet</h3>
			
			<p>Orcs live in small spread out hamlet. Each orc will typically have a compound with some farmland and a few buildings.  <br>
				Those buildings will include a house for their family, one or more small house where goblins reside, a workshop, 
				a building for livestock and a building for grain storing. An hamlet will usually count between 3 and 10 of those compounds.  <br>
				Orchish society does not have geographically linked leadership.  Every orcs is represented by a chieftain.  
				They are free to chose this chieftain or to themselves become a chieftain if 3 non related individuals are willing to be represented by them.  
				People living in the same hamlet are often represented by the same chieftain living in said hamlet just out of convenience. <br>
				It is unusual to have non-green-skins family living in orchish hamlet but sometimes a wealthy orc will have a family of friend or ally living on their compound.<br><br>
				<b>Background Cost:</b> The cost varies based on your race.
				<ul><li>High-Man: 3<li>Highland Half-Man: N/A<li>Lowland Half-Man: 5<li>Orc: 0<li>Goblin: 0<li>Hobgoblin: 0<li>Elf: N/A<li>Faun: 4<li>Troll: 6</ul>
				<b>Skills:</b> Gain experience in the following skills:
				<ul><li>Athleticism (4)<li>Confidence & Ego (3)<li>Insult & Intimidation (3)<li>Melee Combat (2)<li>Taming & Training (3)<li>
				<input type = "radio" name = "orchishHamletSkills" value = "seamanship">Seamanship (3)</input> or <br>
					<input type = "radio" name = "orchishHamletSkills" value = "riding">Riding (3)</input></ul>
				<b>Career Path:</b> The character can start with the following career path:
				<ul><li>Crafts<li>Military<li>Primary</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			<section style = "text-align:center;">
				<button type="button" onclick = 'updateCharacter()'>Update Character</button>
			</section>
		
		</section>
		
		<section id = "elvenVillage" style="display:none;text-align:left;">
		
			<h3>Elven Village</h3>
			
			<p>The elves live in multi-level village inn the forest. The settlements are made by tutoring and shaping trees to create intricate houses.  
				They live very simply. The fact that they need very little sustenance means that they do not need any farmland; the forest grants them everything they need.  
				Noble families from the summer court or the winter court (depending on if the world is in warm or cold years) govern over the elven villages.<br><br>
				<b>Background Cost:</b> The cost varies based on your race.
				<ul><li>High-Man: 5<li>Highland Half-Man: N/A<li>Lowland Half-Man: 3<li>Orc: N/A<li>Goblin: N/A<li>Hobgoblin: N/A<li>Elf: 0<li>Faun: 2<li>Troll: 5</ul>
				<b>Skills:</b> Gain experience in the following skills:
				<ul><li>Acrobatics (3)<li>Arts & Performance (3)<li>Charm & Persuasion (3)<li>Elementalism (2)<li>Knowledge (3)<li>Survival (4)</ul>
				<b>Traits: </b>The character can start with the following trait for an additional 4 background points:
				<ul><li><input type="checkbox" id="elvenVillageTraitCommandOfTheElements" value="commandOfTheElements">Command of the Elements</ul>
				<b>Career Path:</b> The character can start with the following career path:
				<ul><li>Arts<li>Government<li>Primary<li>Scholar</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			<section style = "text-align:center;">
				<button type="button" onclick = 'updateCharacter()'>Update Character</button>
			</section>
		
		</section>
		
		<section id = "faunCommunity" style="display:none;text-align:left;">
		
			<h3>Faun Community</h3>
			
			<p>Fauns live in semi-nomadic communities. They settle in clearing in forest and stay there for sometime a few months, sometimes many years.  <br>
				They live off hunting, fishing and foraging. When the game, the fishes or the fruits become rare, they move.  
				An elder takes the role of leader of the community and dispense of its wisdom to the younger members. <br>
				This role is neither official, nor elected, nor hereditary; the fauns just seem to spontaneously follow the wisest and most experienced amongst them.<br><br>
				<b>Background Cost:</b> The cost varies based on your race.
				<ul><li>High-Man: 5<li>Highland Half-Man: N/A<li>Lowland Half-Man: 3<li>Orc: 5<li>Goblin: 4<li>Hobgoblin: 6<li>Elf: 3<li>Faun: 0<li>Troll: 5</ul>
				<b>Skills:</b> Gain experience in the following skills:
				<ul><li>Arts & Performance (3)<li>Crafting (4)<li>Perception & Vigilance (2)<li>Taming & Training (3)<li>Shamanism (2)<li>Survival (4)</ul>
				<b>Traits: </b>The character can start with the following trait:
				<ul><li><input type="checkbox" id="faunCommunityTraitChildOfTheWild" value="childOfTheWild">Child of the Wild</ul>
				The character can start with the following trait for an additional 4 background points:
				<ul><li><input type="checkbox" id="faunCommunityTraitInTouchWithSpirits" value="inTouchWithSpirits">In Touch With Spirits</ul>
				<b>Career Path:</b> The character can start with the following career path:
				<ul><li>Arts<li>Crafts<li>Commerce<li>Primary<li>Scholar</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			<section style = "text-align:center;">
				<button type="button" onclick = 'updateCharacter()'>Update Character</button>
			</section>
		
		</section>
		
		<section id = "trollCamp" style="display:none;text-align:left;">
		
			<h3>Troll Camp</h3>
			
			<p>Trolls live in natural caves they modified to suite their needs or in small shelter dug on the side of mountain.  
				A troll camp is not much to look at but it serves it’s very utilitarian purpose.<br>
				It is very rare for members of the other races to voluntarily live in a troll camp but trolls do sometimes capture slaves.  
				This practice is frowned upon by the other faes and is more common amongst the sand clan and basalt clan which do not live at proximity to the other faes.<br><br>
				<b>Background Cost:</b> The cost varies based on your race.
				<ul><li>High-Man: 6<li>Highland Half-Man: 6<li>Lowland Half-Man: 6<li>Orc: N/A<li>Goblin: 4<li>Hobgoblin: 6<li>Elf: 5<li>Faun: 4<li>Troll: 0</ul>
				<b>Skills:</b> Gain experience in the following skills:
				<ul><li>Insult & Intimidation (4)<li>Melee Combat (2)<li>Perception & Vigilance (2)<li>Resist Fatigue (3)<li>Resist Pain (4)<li>Torture (3)</ul>
				<b>Traits: </b>The character can start with the following trait:
				<ul><li><input type="checkbox" id="trollCampTraitBornUnderground" value="bornUnderground">Born Underground</ul>
				<b>Career Path:</b> The character can start with the following career path:
				<ul><li>Crafts<li>Military</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			<section style = "text-align:center;">
				<button type="button" onclick = 'updateCharacter()'>Update Character</button>
			</section>
		
		</section>
		
		<section id = "inTheWild" style="display:none;text-align:left;">
		
			<h3>In the Wild</h3>
			
			<p>You have been raised outside of any civilizations, by hermits custodians. You had to learn to be self-sufficient and take care of yourself. 
				You might feel uncomfortable when surrounded by people.<br><br>
				<b>Background Cost:</b> The cost varies based on your race.
				<ul><li>High-Man: 5<li>Highland Half-Man: 6<li>Lowland Half-Man: 3<li>Orc: 4<li>Goblin: 6<li>Hobgoblin: 3<li>Elf: 2<li>Faun: 2<li>Troll: 3</ul>
				<b>Skills:</b> Gain experience in the following skills:
				<ul><li>Perception & Vigilance (3)<li>Resist Hunger (3)<li>Survival (4)<li>Taming & Training (3)<li>Witchcraft (2)<li>
				<input type = "radio" name = "inTheWildSkills" value = "resistCold">Resist Cold (3)</input> or <br>
					<input type = "radio" name = "inTheWildSkills" value = "resistHeat">Resist Heat (3)</input></ul>
				<b>Traits: </b>The character can start with the following trait:
				<ul><li><input type="checkbox" id="inTheWildTraitChildOfTheWild" value="childOfTheWild">Child of the Wild</ul>
				The character can start with the following trait for an additional 4 background points:
				<ul><li><input type="checkbox" id="inTheWildTraitKeeperOfTheOldWays" value="keeperOfTheOldWays">Keeper of the Old Ways</ul>
				<b>Career Path:</b> The character can start with the following career path:
				<ul><li>Criminal<li>Scholar<li>Unemployed</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			<section style = "text-align:center;">
				<button type="button" onclick = 'updateCharacter()'>Update Character</button>
			</section>
		
		</section>
	
	</section>
	
	<hr>
	
	<h2 style="position:relative;">Life Events  <button type="button" id = "buttEvents" onclick = 'toggleSection("secLifeEvents", this)' style="position:absolute; top:50%;right:0%;transform: translate(-50%, -50%);">+</button></h2>
	
	<section id = "secLifeEvents" style="display:none;">
	
		<p>A panoply of life events can affect who a character will become as an adult. 
			Life events are optional; a character could have had a uneventful life. 
			The player can choose to forego life events and keep the background points for occupation or traits.
		</p>
		
		<table style = "text-align:left; width:90%; position:relative; left:5%">
			<tr><td><ul>
						<li><a id = "parentHasBeenExecutedRightfully" onclick = "displayEvent(this.id)">A Parent Has Been Executed, Rightfully</a>
						<li><a id = "parentHasBeenMurdered" onclick = "displayEvent(this.id)">A Parent Has Been Murdered</a>
						<li><a id = "parentDiedFromWar" onclick = "displayEvent(this.id)">A Parent Died From War</a>
						<li><a id = "almostDrown" onclick = "displayEvent(this.id)">Almost Drown</a>
						<li><a id = "becameSeriouslySick" onclick = "displayEvent(this.id)">Became Seriously Sick</a>
						<li><a id = "beenAttackedByCriminals" onclick = "displayEvent(this.id)">Been Attacked by Criminals</a>
						<li><a id = "beenLeftForDead" onclick = "displayEvent(this.id)">Been Left For Dead</a>
						<li><a id = "beenSeverelyBurnt" onclick = "displayEvent(this.id)">Been Severely Burnt</a>
						<li><a id = "beenToAnOrphanage" onclick = "displayEvent(this.id)">Been to an Orphanage</a>
						<li><a id = "bornASlave" onclick = "displayEvent(this.id)">Born a Slave</a>
						<li><a id = "gotAChild" onclick = "displayEvent(this.id)">Got a Child</a>
						<li><a id = "joinedAReligiousOrder" onclick = "displayEvent(this.id)">Joined a Religious Order</a>
						<li><a id = "killedSomeone" onclick = "displayEvent(this.id)">Killed Someone</a>
						<li><a id = "motherDiedInChildbirth" onclick = "displayEvent(this.id)">Mother Died in Childbirth</a>
						<li><a id = "sawAMonster" onclick = "displayEvent(this.id)">Saw a Monster</a>
						<li><a id = "violentChildhood" onclick = "displayEvent(this.id)">Violent Childhood</a>
					</ul>
				<td>
					<ul>
						<li><a id = "parentHasBeenExecutedWrongfully" onclick = "displayEvent(this.id)">A Parent Has Been Executed, Wrongfully</a>
						<li><a id = "parentDiedAtWar" onclick = "displayEvent(this.id)">A Parent Died at War</a>
						<li><a id = "parentDiedFromDisease" onclick = "displayEvent(this.id)">A Parent Died of a Disease</a>
						<li><a id = "becameAnOrphan" onclick = "displayEvent(this.id)">Became an Orphan</a>
						<li><a id = "beenAccusedOfACrime" onclick = "displayEvent(this.id)">Became Accused of a Crime</a>
						<li><a id = "beenExiled" onclick = "displayEvent(this.id)">Been Exiled</a>
						<li><a id = "beenRaisedByAnHermit" onclick = "displayEvent(this.id)">Been Raised by an Hermit</a>
						<li><a id = "beenToAGoodSchool" onclick = "displayEvent(this.id)">Been to a Good School</a>
						<li><a id = "bornANoble" onclick = "displayEvent(this.id)">Born A Noble</a>
						<li><a id = "enteredAnElementalismWizardrySchool" onclick = "displayEvent(this.id)">Entered an Elementalism or Wizardry Academy</a>
						<li><a id = "hasARichRelative" onclick = "displayEvent(this.id)">Has a Rich Relative</a>
						<li><a id = "joinedAStreetGang" onclick = "displayEvent(this.id)">Joined a Street Gang</a>
						<li><a id = "lostAParentDueToExposureStarvation" onclick = "displayEvent(this.id)">Lost a Parent Due to Exposure or Starvation</a>
						<li><a id = "neglectfulChildhood" onclick = "displayEvent(this.id)">Neglectful Childhood</a>
						<li><a id = "spentTimeInJail" onclick = "displayEvent(this.id)">Spent Time in Jail</a>
						<li><a id = "witnessedAMiracle" onclick = "displayEvent(this.id)">Witnessed a Miracle</a>
					</ul>
		</table>
		
		<section id = "sec_parentHasBeenExecutedRightfully" style = "text-align:left; display:none;">
		
			<h3>A Parent Has Been Executed, Rightfully</h3>
			
			<p>One of the character's parent committed a crime, got caught and paid the ultimate price. The character might have been bullied for being the child of a criminal.<br><br>
				<b>Background Cost: </b>4<br><br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Insult & Intimidation (3)<li>Perception & Vigilance (3)<li>
				<input type = "radio" name = "parentHasBeenExectuedRightfullySkills" value = "brawling">Brawling (2)</input> or <br>
					<input type = "radio" name = "parentHasBeenExectuedRightfullySkills" value = "sorcery">Sorcery (2)</input></ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'if (getFormValue("parentHasBeenExectuedRightfullySkills") != undefined)
					{addEventToSelected(new objSelectedEvent("parentHasBeenExecutedRightfully", "A Parent Has Been Executed, Rightfully", 4, (getFormValue("parentHasBeenExectuedRightfullySkills"))[0]))}
					else{alert("Please select a skill.")}'>
					Select this Life Event
				</button>
			</section>
		
		</section>
		
		<section id = "sec_parentHasBeenExecutedWrongfully" style = "text-align:left; display:none;">
		
			<h3>A Parent Has Been Executed, Wrongfully</h3>
			
			<p>One of the character's parent has been executed for a crime committed by someone else. The character knows their parent was innocent.  
				The general public might have got wise to their mistake or still be convinced they were right.  
				The real culprit might be still on the loose or might have been caught or killed for some other crime.<br><br>
				<b>Background Cost: </b>5<br><br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Deduction & Logic (3)<li>Detect Motive (3)<li>Laws & Legal Systems (3)</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addEventToSelected(new objSelectedEvent("parentHasBeenExecutedWrongfully", "A Parent Has Been Executed, Wrongfully", 5))'>
					Select this Life Event
				</button>
			</section>
		
		</section>
		
		<section id = "sec_parentHasBeenMurdered" style = "text-align:left; display:none;">
		
			<h3>A Parent Has Been Murdered</h3>
			
			<p>A parent has been the victim of a murderer. The culprit might still be on the loose or might have been caught. The character may know, or not, who did the deed.<br><br>
				<b>Background Cost: </b>5<br><br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Deduction & Logic (3)<li>Detect Motive (3)<li>Perception & Vigilance (3)</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addEventToSelected(new objSelectedEvent("parentHasBeenMurdered", "A Parent Has Been Murdered", 5))'>
					Select this Life Event
				</button>
			</section>
		
		</section>
		
		<section id = "sec_parentDiedAtWar" style = "text-align:left; display:none;">
		
			<h3>A Parent Died at War</h3>
			
			<p>A parent of the character was a soldier in war and died on campaign.  
				Before dying, the parent might have instructed the character about the way of the war or the character might have decided to train themself to avoid the same fate as their parent.<br><br>
				<b>Background Cost: </b>4<br><br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Heraldry & Nobility (3)<li>Insult & Intimidation (3)<li>
				<input type = "radio" name = "parentDiedAtWarSkills" value = "meleeCombat">Melee Combat (3)</input> or <br>
					<input type = "radio" name = "parentDiedAtWarSkills" value = "rangeCombat">Range Combat (3)</input></ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'if (getFormValue("parentDiedAtWarSkills") != undefined)
					{addEventToSelected(new objSelectedEvent("parentDiedAtWar", "A Parent Died at War", 4, (getFormValue("parentDiedAtWarSkills"))[0]))}
					else{alert("Please select a skill.")}'>
					Select this Life Event
				</button>
			</section>
		
		</section>
		
		<section id = "sec_parentDiedFromWar" style = "text-align:left; display:none;">
		
			<h3>A Parent Died From War</h3>
			
			<p>A parent of the character has been an innocent victim of war. The character learned to avoid soldiers and hide when they are around.<br><br>
				<b>Background Cost: </b>4<br><br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Perception & Vigilance (4)<li>Stealth (3)<li>Survival (3)</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addEventToSelected(new objSelectedEvent("parentDiedFromWar", "A Parent Died From War", 4))'>
					Select this Life Event
				</button>
			</section>
		
		</section>
		
		<section id = "sec_parentDiedFromDisease" style = "text-align:left; display:none;">
		
			<h3>A Parent Died of a Disease</h3>
			
			<p>One of the character's parent contracted a disease and passed away from it. The character might have contracted the same disease and healed from it.<br><br>
				<b>Background Cost: </b>2<br><br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Medicine (3)<li>Mysticism (2)<li>Natural Healing (4)</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addEventToSelected(new objSelectedEvent("parentDiedFromDisease", "A Parent Died of a Disease", 2))'>
					Select this Life Event
				</button>
			</section>
		
		</section>
		
		<section id = "sec_almostDrown" style = "text-align:left; display:none;">
		
			<h3>Almost Drown</h3>
			
			<p>While out on the water, the character almost died from drowning. They either manage to save themself or they have been saved by someone else.<br><br>
				<b>Background Cost: </b>3<br><br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Seamanship (3)<li>Swimming (4)<li>
				<input type = "radio" name = "almostDrownSkills" value = "water">Water (2)</input> or <br>
					<input type = "radio" name = "almostDrownSkills" value = "lakesRivers">Lakes & Rivers (2)</input></ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'if (getFormValue("almostDrownSkills") != undefined)
					{addEventToSelected(new objSelectedEvent("almostDrown", "Almost Drown", 3, (getFormValue("almostDrownSkills"))[0]))}
					else{alert("Please select a skill.")}'>
					Select this Life Event
				</button>
			</section>
		
		</section>
		
		<section id = "sec_becameAnOrphan" style = "text-align:left; display:none;">
		
			<h3>Became an Orphan</h3>
			
			<p>The two parents of the character died while this one was young. The character might have ended up in an orphanage, at a relatives or out in the streets.<br><br>
				<b>Background Cost: </b>2<br><br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Resist Hunger (3)<li>Sleight of Hand (3)<li>
				<input type = "radio" name = "becameAnOrphanSkills" value = "resistCold">Resist Cold (3)</input> or <br>
					<input type = "radio" name = "becameAnOrphanSkills" value = "resistHeat">Resist Heat (3)</input></ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'if (getFormValue("becameAnOrphanSkills") != undefined)
					{addEventToSelected(new objSelectedEvent("becameAnOrphan", "Became an Orphan", 2, (getFormValue("becameAnOrphanSkills"))[0]))}
					else{alert("Please select a skill.")}'>
					Select this Life Event
				</button>
			</section>
		
		</section>
		
		<section id = "sec_becameSeriouslySick" style = "text-align:left; display:none;">
		
			<h3>Became Seriously Sick</h3>
			
			<p>The character contracted a serious disease that kept them bed ridden for a long while. They are now healed from this disease.<br><br>
				<b>Background Cost: </b>3<br><br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Natural Healing (4)<li>Resist Pain (3)<li>
				<input type = "radio" name = "becameSeriouslySickSkills" value = "mysticism">Mysticism (2)</input> or <br>
					<input type = "radio" name = "becameSeriouslySickSkills" value = "sorcery">Sorcery (2)</input></ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'if (getFormValue("becameSeriouslySickSkills") != undefined)
					{addEventToSelected(new objSelectedEvent("becameSeriouslySick", "Became Seriously Sick", 2, (getFormValue("becameSeriouslySickSkills"))[0]))}
					else{alert("Please select a skill.")}'>
					Select this Life Event
				</button>
			</section>
		
		</section>
		
		<section id = "sec_beenAttackedByCriminals" style = "text-align:left; display:none;">
		
			<h3>Been Attacked by Criminals</h3>
			
			<p>The character has been the victim of some brigands. The criminals might have been caught or can still be on the run.<br><br>
				<b>Background Cost: </b>4<br><br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Melee Combat (2)<li>Natural Healing (3)<li>Perception & Vigilance (4)</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addEventToSelected(new objSelectedEvent("beenAttackedByCriminals", "Been Attacked by Criminals", 4))'>
					Select this Life Event
				</button>
			</section>
		
		</section>
		
		<section id = "sec_beenExiled" style = "text-align:left; display:none;">
		
			<h3>Been Exiled</h3>
			
			<p>Either for a crime they committed or just for being disliked by their neighbours, the character has been exiled from their home.<br><br>
				<b>Background Cost: </b>5<br><br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Insult & Intimidation (3)<li>Survival (3)<li>Witchcraft (3)</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addEventToSelected(new objSelectedEvent("beenExiled", "Been Exiled", 5))'>
					Select this Life Event
				</button>
			</section>
		
		</section>
		
		<section id = "sec_beenLeftForDead" style = "text-align:left; display:none;">
		
			<h3>Been Left for Dead</h3>
			
			<p>Either after being attacked, after an accident or after a serious infliction, the character has been believed to be death and left to rot somewhere.<br><br>
				<b>Background Cost: </b>5<br><br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Natural Healing (4)<li>Resist Pain (3)<li>
				<input type = "radio" name = "beenLeftForDeadSkills" value = "mysticism">Mysticism (2)</input> or <br>
					<input type = "radio" name = "beenLeftForDeadSkills" value = "sorcery">Sorcery (2)</input></ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'if (getFormValue("beenLeftForDeadSkills") != undefined)
					{addEventToSelected(new objSelectedEvent("beenLeftForDead", "Been Left for Dead", 5, (getFormValue("beenLeftForDeadSkills"))[0]))}
					else{alert("Please select a skill.")}'>
					Select this Life Event
				</button>
			</section>
		
		</section>
		
		<section id = "sec_beenRaisedByAnHermit" style = "text-align:left; display:none;">
		
			<h3>Been Raised by an Hermit</h3>
			
			<p>The character has been raised alone in the wild, by an hermit.<br><br>
				<b>Background Cost: </b>5<br><br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Survival (4)<li>
				<input type = "radio" name = "beenRaisedByAnHermitSkills1" value = "botany">Botany (3)</input> or <br>
					<input type = "radio" name = "beenRaisedByAnHermitSkills1" value = "zoology">Zoology (3)</input>
					<li><input type = "radio" name = "beenRaisedByAnHermitSkills2" value = "shamanism">Shamanism (2)</input> or <br>
					<input type = "radio" name = "beenRaisedByAnHermitSkills2" value = "witchcraft">Witchcraft (2)</input></ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'if (getFormValue("beenRaisedByAnHermitSkills1") != undefined && getFormValue("beenRaisedByAnHermitSkills2") != undefined)
					{addEventToSelected(new objSelectedEvent("beenRaisedByAnHermit", "Been Raised by an Hermit", 5, (getFormValue("beenRaisedByAnHermitSkills1"))[0], (getFormValue("beenRaisedByAnHermitSkills2"))[0]))}
					else{alert("Please select a skill.")}'>
					Select this Life Event
				</button>
			</section>
		
		</section>
		
		<section id = "sec_beenSeverelyBurnt" style = "text-align:left; display:none;">
		
			<h3>Been Severly Burnt</h3>
			
			<p>The character suffered severe burns on a major part of their body. They are still scared from the incident but otherwise, does not suffer from the burn any more.<br><br>
				<b>Background Cost: </b>4<br><br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Fire (2)<li>Natural Healing (4)<li>Perception & Vigilance (3)</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addEventToSelected(new objSelectedEvent("beenSeverelyBurnt", "Been Severly Burnt", 4))'>
					Select this Life Event
				</button>
			</section>
		
		</section>
		
		<section id = "sec_beenToAGoodSchool" style = "text-align:left; display:none;">
		
			<h3>Been to a Good School</h3>
			
			<p>The character received a superior education. It might be due to rich parent or simply due to luck.<br><br>
				<b>Background Cost: </b>3<br><br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Deduction & Logic (3)<li>Knowledge (3)<li>Science (3)</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addEventToSelected(new objSelectedEvent("beenToAGoodSchool", "Been to a Good School", 3))'>
					Select this Life Event
				</button>
			</section>
		
		</section>
		
		<section id = "sec_beenToAnOrphanage" style = "text-align:left; display:none;">
		
			<h3>Been to an Orphanage</h3>
			
			<p>Either because their parent died or because they were incapable or unwilling to take care of them, the character has been raised in an orphanage.<br><br>
				<b>Background Cost: </b>2<br><br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Brawling (2)<li>Insult & Intimidation (4)<li>Resist Hunger (3)</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addEventToSelected(new objSelectedEvent("beenToAnOrphanage", "Been to an Orphanage", 2))'>
					Select this Life Event
				</button>
			</section>
		
		</section>
		
		<section id = "sec_bornANoble" style = "text-align:left; display:none;">
		
			<h3>Born a Noble</h3>
			
			<p>The character won the lottery of birth and was born legitimately to a noble family. They have been prepared from a young age to become a noble themself as they grow old.<br><br>
				<b>Background Cost: </b>5<br><br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Heraldry & Nobility (4)<li>Laws & Legal Systems (3)<li>Melee Combat (2)</ul>
				<b>Career Path:</b> The character can start with the following career path:
				<ul><li>Government<li>Military</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addEventToSelected(new objSelectedEvent("bornANoble", "Born a Noble", 5))'>
					Select this Life Event
				</button>
			</section>
		
		</section>
		
		<section id = "sec_bornASlave" style = "text-align:left; display:none;">
		
			<h3>Born A Slave</h3>
			
			<p>The character was born from slave parents. Their childhood was one of hardship and little else. They manage in one way or another to get their freedom.<br><br>
				<b>Background Cost: </b>5<br><br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Lifting & Pushing (4)<li>Resist Hunger (3)<li>Resist Pain (3)</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addEventToSelected(new objSelectedEvent("bornASlave", "Born A Slave", 5))'>
					Select this Life Event
				</button>
			</section>
		
		</section>
		
		<section id = "sec_enteredAnElementalismWizardrySchool" style = "text-align:left; display:none;">
		
			<h3>Entered an Elementalism or Wizardry Academy</h3>
			
			<p>The character managed to gain a place in a magic academy as an apprentice.<br><br>
				<b>Background Cost: </b>5<br><br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Knowledge (2)<li>Science (3)<li>
				<input type = "radio" name = "enteredAnElementalismWizardrySchoolSkills" value = "elementalism">Elementalism (4)</input> or <br>
					<input type = "radio" name = "enteredAnElementalismWizardrySchoolSkills" value = "wizardry">Wizardry (4)</input></ul>
				<b>Career Path:</b> The character can start with the following career path:
				<ul><li>Scholar</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'if (getFormValue("enteredAnElementalismWizardrySchoolSkills") != undefined)
					{addEventToSelected(new objSelectedEvent("enteredAnElementalismWizardrySchool", "Entered an Elementalism or Wizardry Academy", 5, (getFormValue("enteredAnElementalismWizardrySchoolSkills"))[0]))}
					else{alert("Please select a skill.")}'>
					Select this Life Event
				</button>
			</section>
			
		</section>
		
		<section id = "sec_gotAChild" style = "text-align:left; display:none;">
		
			<h3>Got a Child</h3>
			
			<p>The character is now a parent. The child can be illegitimate or not, leaves with the character are not.<br><br>
				<b>Background Cost: </b>1<br><br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Cooking (3)<li>Perception & Vigilance (3)<li>Resist Fatigue (3)</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addEventToSelected(new objSelectedEvent("gotAChild", "Got a Child", 1))'>
					Select this Life Event
				</button>
			</section>
		
		</section>
		
		<section id = "sec_hasARichRelative" style = "text-align:left; display:none;">
		
			<h3>Has a Rich Relative</h3>
			
			<p>The character has someone in their family with a lot of money. They benefited from those riches receiving numerous gift while growing up.<br><br>
				<b>Background Cost: </b>3<br><br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Appraise (4)<li>Charm & Persuasion (3)<li>Luck (3)</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addEventToSelected(new objSelectedEvent("hasARichRelative", "Has a Rich Relative", 3))'>
					Select this Life Event
				</button>
			</section>
		
		</section>
		
		<section id = "sec_joinedAReligiousOrder" style = "text-align:left; display:none;">
		
			<h3>Joined a Religious Order</h3>
			
			<p>The character joined either a cult or a mainstream religious organisation. They may still be part of the organisation or not.<br><br>
				<b>Background Cost: </b>5<br><br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Confidence & Ego (3)<li>Mysticism (2)<li>Religions (4)</ul>
				<b>Career Path:</b> The character can start with the following career path:
				<ul><li>Religious</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addEventToSelected(new objSelectedEvent("joinedAReligiousOrder", "Joined a Religious Order", 5))'>
					Select this Life Event
				</button>
			</section>
		
		</section>
		
		<section id = "sec_joinedAStreetGang" style = "text-align:left; display:none;">
		
			<h3>Joined a Street Gang</h3>
			
			<p>The character joined a criminal street gang. They have committed some petty crimes while in this gang. They might be still part of this gang or not.<br><br>
				<b>Background Cost: </b>3<br><br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Brawling (2)<li>Insult & Intimidation (3)<li>Sleight of Hand (4)</ul>
				<b>Career Path:</b> The character can start with the following career path:
				<ul><li>Criminal</ul>
				<b>Honour:</b> The honour of the character is lowered by 1.<br>
				<b>Morality:</b> The morality of the character is lowered by 1.
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addEventToSelected(new objSelectedEvent("joinedAStreetGang", "Joined a Street Gang", 3))'>
					Select this Life Event
				</button>
			</section>
		
		</section>
		
		<section id = "sec_killedSomeone" style = "text-align:left; display:none;">
		
			<h3>Killed Someone</h3>
			
			<p>Either is self-defence, by accident or otherwise, the character killed someone.<br><br>
				<b>Background Cost: </b>5<br><br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Detect Motive (3)<li>Insult & Intimidation (4)<li>
				<input type = "radio" name = "killedSomeoneSkills" value = "meleeCombat">Melee Combat (2)</input> or <br>
					<input type = "radio" name = "killedSomeoneSkills" value = "rangeCombat">Range Combat (2)</input></ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'if (getFormValue("killedSomeoneSkills") != undefined)
					{addEventToSelected(new objSelectedEvent("killedSomeone", "Killed Someone", 5, (getFormValue("killedSomeoneSkills"))[0]))}
					else{alert("Please select a skill.")}'>
					Select this Life Event
				</button>
			</section>
		
		</section>
		
		<section id = "sec_lostAParentDueToExposureStarvation" style = "text-align:left; display:none;">
		
			<h3>Lost a Parent Due to Exposure or Starvation</h3>
			
			<p>Either is self-defence, by accident or otherwise, the character killed someone.<br><br>
				<b>Background Cost: </b>4<br><br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Resist Hunger (4)<li>
				<input type = "radio" name = "lostAParentDueToExposureStarvationSkills1" value = "elementalism">Elementalism (2)</input> or <br>
					<input type = "radio" name = "lostAParentDueToExposureStarvationSkills1" value = "mysticism">Mysticism (2)</input>
				<li><input type = "radio" name = "lostAParentDueToExposureStarvationSkills2" value = "resistCold">Resist Cold (3)</input> or <br>
					<input type = "radio" name = "lostAParentDueToExposureStarvationSkills2" value = "resistHeat">Resist Heat (3)</input></ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'if (getFormValue("lostAParentDueToExposureStarvationSkills1") != undefined && getFormValue("lostAParentDueToExposureStarvationSkills2") != undefined)
					{addEventToSelected(new objSelectedEvent("lostAParentDueToExposureStarvation", "Lost a Parent Due to Exposure or Starvation", 4, (getFormValue("lostAParentDueToExposureStarvationSkills1"))[0], (getFormValue("lostAParentDueToExposureStarvationSkills2"))[0]))}
					else{alert("Please select a skill.")}'>
					Select this Life Event
				</button>
			</section>
		
		</section>
		
		<section id = "sec_motherDiedInChildbirth" style = "text-align:left; display:none;">
		
			<h3>Mother Died in Childbirth</h3>
			
			<p>The mother of the character died giving birth to them or to a younger sibling. The character grew up without a mother and had to learn to be more self-reliant.<br><br>
				<b>Background Cost: </b>4<br><br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Confidence & Ego (4)<li>Cooking (3)<li>Medicine (2)</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addEventToSelected(new objSelectedEvent("motherDiedInChildbirth", "Mother Died in Childbirth", 4))'>
					Select this Life Event
				</button>
			</section>
		
		</section>
		
		<section id = "sec_neglectfulChildhood" style = "text-align:left; display:none;">
		
			<h3>Neglectful Childhood</h3>
			
			<p>The parents of the character took very little care of them.<br><br>
				<b>Background Cost: </b>2<br><br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Resist Hunger (4)<li>Sleight of Hand (4)<li>
				<input type = "radio" name = "neglectfulChildhoodSkills" value = "slings">Slings (2)</input> or <br>
					<input type = "radio" name = "neglectfulChildhoodSkills" value = "thrown">Thrown (2)</input></ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'if (getFormValue("neglectfulChildhoodSkills") != undefined)
					{addEventToSelected(new objSelectedEvent("neglectfulChildhood", "Neglectful Childhood", 2, (getFormValue("neglectfulChildhoodSkills"))[0]))}
					else{alert("Please select a skill.")}'>
					Select this Life Event
				</button>
			</section>
		
		</section>
		
		<section id = "sec_sawAMonster" style = "text-align:left; display:none;">
		
			<h3>Saw a Monster</h3>
			
			<p>The character saw an epic monster and survived to tell tale.<br><br>
				<b>Background Cost: </b>4<br><br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Confidence & Ego (2)<li>Perception & Vigilance (4)<li>Zoology (3)</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addEventToSelected(new objSelectedEvent("sawAMonster", "Saw a Monster", 4))'>
					Select this Life Event
				</button>
			</section>
		
		</section>
		
		<section id = "sec_spentTimeInJail" style = "text-align:left; display:none;">
		
			<h3>Spent Time in Jail</h3>
			
			<p>Rightfully or wrongfully, the character has spent some time in jail. They might have been released after their time was served or they might have escaped.<br><br>
				<b>Background Cost: </b>4<br><br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Brawling (2)<li>Insult & Intimidation (4)<li>
				<input type = "radio" name = "spentTimeInJailSkills" value = "resistHunger">Resist Hunger (3)</input> or <br>
					<input type = "radio" name = "spentTimeInJailSkills" value = "resistPain">Resist Pain (3)</input></ul>
				<b>Career Path:</b> The character can start with the following career path:
				<ul><li>Criminal</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'if (getFormValue("spentTimeInJailSkills") != undefined)
					{addEventToSelected(new objSelectedEvent("spentTimeInJail", "Spent Time in Jail", 4, (getFormValue("spentTimeInJailSkills"))[0]))}
					else{alert("Please select a skill.")}'>
					Select this Life Event
				</button>
			</section>
		
		</section>
		
		<section id = "sec_violentChildhood" style = "text-align:left; display:none;">
		
			<h3>Violent Childhood</h3>
			
			<p>The parents of the character where violent and beat up the character while they were growing up.<br><br>
				<b>Background Cost: </b>3<br><br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Brawling (2)<li>Insult & Intimidation (4)<li>
				<input type = "radio" name = "violentChildhoodSkills" value = "resistPain">Resist Pain (3)</input> or <br>
					<input type = "radio" name = "violentChildhoodSkills" value = "resistShock">Resist Shock (3)</input></ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'if (getFormValue("violentChildhoodSkills") != undefined)
					{addEventToSelected(new objSelectedEvent("violentChildhood", "Violent Childhood", 3, (getFormValue("violentChildhoodSkills"))[0]))}
					else{alert("Please select a skill.")}'>
					Select this Life Event
				</button>
			</section>
		
		</section>
		
		<section id = "sec_witnessedAMiracle" style = "text-align:left; display:none;">
		
			<h3>Witnessed a Miracle</h3>
			
			<p>The character witnessed an undeniable miracle.<br><br>
				<b>Background Cost: </b>4<br><br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Confidence & Ego (3)<li>Mysticism (2)<li>Religions (4)</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addEventToSelected(new objSelectedEvent("witnessedAMiracle", "Witnessed a Miracle", 4))'>
					Select this Life Event
				</button>
			</section>
		
		</section>
		
		<br>
		
		<section style = "text-align:center;">
			<select id = "selectedEventsId" name="selectedEvents[]" multiple size="8" style = "width: 70%;">
			</select><br>
			<button type="button" onclick="if(getMultipleSelectIndex('selectedEventsId')!= undefined){changeEventOrder(getMultipleSelectIndex('selectedEventsId'), -1)}"> Move Up</button>
			<button type="button" onclick="if(getMultipleSelectIndex('selectedEventsId')!= undefined){removeEventFromSelected(getMultipleSelectIndex('selectedEventsId'))}">Remove Selected Trait(s)</button>
			<button type="button" onclick="if(getMultipleSelectIndex('selectedEventsId')!= undefined){changeEventOrder(getMultipleSelectIndex('selectedEventsId'), 1)}"> Move Down</button>
		</section>
		
		
	</section>
	
	<hr>
	
	<h2 style="position:relative;">Occupations  <button type="button" id = "buttOccupations" onclick = 'toggleSection("secOccupations", this)' style="position:absolute; top:50%;right:0%;transform: translate(-50%, -50%);">+</button></h2>
	
	<section id = "secOccupations" style="display:none;">
	
		<p>Players can choose one or more previous occupations for their characters.  
			Each occupation must be undertaken for a certain number of years to grant any benefits, therefore making the characters older.<br>
			Occupations are divided in career path: Arts, Commerce, Crafts, Criminal, Government, Maritime, Military, Primary, Religious, Scholar, Service and Unemployed.  
			Some occupations fall under two career path.<br>
			Previous occupation are optional.
		</p>
		
		<table style = "text-align:left; width:90%; position:relative; left:5%">
			<tr><td valign = "top"><ul>
				<li><a id = "actor" onclick = "displayOccupation(this.id)">Actor</a>
				<li><a id = "altarBoy" onclick = "displayOccupation(this.id)">Altar Boy</a>
				<li><a id = "apothecary" onclick = "displayOccupation(this.id)">Apothecary</a>
				<li><a id = "apprentice" onclick = "displayOccupation(this.id)">Apprentice</a>
				<li><a id = "arbalestierArcher" onclick = "displayOccupation(this.id)">Arbalestier / Archer</a>
				<li><a id = "armourer" onclick = "displayOccupation(this.id)">Armourer</a>
				<li><a id = "aspiringArtist" onclick = "displayOccupation(this.id)">Aspiring Artist</a>
				<li><a id = "assassin" onclick = "displayOccupation(this.id)">Assassin</a>
				<li><a id = "banker" onclick = "displayOccupation(this.id)">Banker</a>
				<li><a id = "beadle" onclick = "displayOccupation(this.id)">Beadle</a>
				<li><a id = "beggar" onclick = "displayOccupation(this.id)">Beggar</a>
				<li><a id = "blacksmith" onclick = "displayOccupation(this.id)">Blacksmith</a>
				<li><a id = "burglar" onclick = "displayOccupation(this.id)">Burglar</a>
				<li><a id = "campServantSquire" onclick = "displayOccupation(this.id)">Camp Servant / Squire</a>
				<li><a id = "carpenter" onclick = "displayOccupation(this.id)">Carpenter</a>
				<li><a id = "cavalryman" onclick = "displayOccupation(this.id)">Cavalryman</a>
				<li><a id = "cheiftainMayor" onclick = "displayOccupation(this.id)">Chieftain / Mayor</a>
				<li><a id = "clerk" onclick = "displayOccupation(this.id)">Clerk</a>
				<li><a id = "conman" onclick = "displayOccupation(this.id)">Conman</a>
				<li><a id = "cook" onclick = "displayOccupation(this.id)">Cook</a>
				<li><a id = "dancer" onclick = "displayOccupation(this.id)">Dancer</a>
				<li><a id = "deckHand" onclick = "displayOccupation(this.id)">Deck Hand</a>
				<li><a id = "diplomat" onclick = "displayOccupation(this.id)">Diplomat</a>
				<li><a id = "drunk" onclick = "displayOccupation(this.id)">Drunk</a>
				<li><a id = "elementalist" onclick = "displayOccupation(this.id)">Elementalist</a>
				<li><a id = "engineer" onclick = "displayOccupation(this.id)">Engineer</a>
				<li><a id = "farmHand" onclick = "displayOccupation(this.id)">Farm Hand</a></ul>
			<td valign = "top"><ul><li><a id = "fence" onclick = "displayOccupation(this.id)">Fence</a>
				<li><a id = "firstMate" onclick = "displayOccupation(this.id)">First Mate</a>
				<li><a id = "fisherman" onclick = "displayOccupation(this.id)">Fisherman</a>
				<li><a id = "gambler" onclick = "displayOccupation(this.id)">Gambler</a>
				<li><a id = "guard" onclick = "displayOccupation(this.id)">Guard</a>
				<li><a id = "guide" onclick = "displayOccupation(this.id)">Guide</a>
				<li><a id = "hermit" onclick = "displayOccupation(this.id)">Hermit</a>
				<li><a id = "highwayman" onclick = "displayOccupation(this.id)">Highwayman</a>
				<li><a id = "hunter" onclick = "displayOccupation(this.id)">Hunter</a>
				<li><a id = "illuminator" onclick = "displayOccupation(this.id)">Illuminator</a>
				<li><a id = "inquisitor" onclick = "displayOccupation(this.id)">Inquisitor</a>
				<li><a id = "jailer" onclick = "displayOccupation(this.id)">Jailer</a>
				<li><a id = "jeweller" onclick = "displayOccupation(this.id)">Jeweller</a>
				<li><a id = "knight" onclick = "displayOccupation(this.id)">Knight</a>
				<li><a id = "lawyer" onclick = "displayOccupation(this.id)">Lawyer</a>
				<li><a id = "lumberjack" onclick = "displayOccupation(this.id)">Lumberjack</a>
				<li><a id = "mason" onclick = "displayOccupation(this.id)">Mason</a>
				<li><a id = "miner" onclick = "displayOccupation(this.id)">Miner</a>
				<li><a id = "musician" onclick = "displayOccupation(this.id)">Musician</a>
				<li><a id = "navigator" onclick = "displayOccupation(this.id)">Navigator</a>
				<li><a id = "noblePatriarch" onclick = "displayOccupation(this.id)">Noble / Patriarch</a>
				<li><a id = "operaComposer" onclick = "displayOccupation(this.id)">Opera Composer</a>
				<li><a id = "outcast" onclick = "displayOccupation(this.id)">Outcast</a>
				<li><a id = "outlaw" onclick = "displayOccupation(this.id)">Outlaw</a>
				<li><a id = "painter" onclick = "displayOccupation(this.id)">Painter</a>
				<li><a id = "peasant" onclick = "displayOccupation(this.id)">Peasant</a>
				<li><a id = "physician" onclick = "displayOccupation(this.id)">Physician</a></ul>
			<td valign = "top"><ul><li><a id = "pickpocket" onclick = "displayOccupation(this.id)">Pickpocket</a>
				<li><a id = "pikeman" onclick = "displayOccupation(this.id)">Pikeman</a>
				<li><a id = "pirate" onclick = "displayOccupation(this.id)">Pirate</a>
				<li><a id = "playwright" onclick = "displayOccupation(this.id)">Playwright</a>
				<li><a id = "poet" onclick = "displayOccupation(this.id)">Poet</a>
				<li><a id = "priest" onclick = "displayOccupation(this.id)">Priest</a>
				<li><a id = "prostitute" onclick = "displayOccupation(this.id)">Prostitute</a>
				<li><a id = "scholar" onclick = "displayOccupation(this.id)">Scholar</a>
				<li><a id = "scientist" onclick = "displayOccupation(this.id)">Scientist</a>
				<li><a id = "scout" onclick = "displayOccupation(this.id)">Scout</a>
				<li><a id = "scribe" onclick = "displayOccupation(this.id)">Scribe</a>
				<li><a id = "sculptor" onclick = "displayOccupation(this.id)">Sculptor</a>
				<li><a id = "shaman" onclick = "displayOccupation(this.id)">Shaman</a>
				<li><a id = "shepherd" onclick = "displayOccupation(this.id)">Shepherd</a>
				<li><a id = "shipwright" onclick = "displayOccupation(this.id)">Shipwright</a>
				<li><a id = "siegeEngineer" onclick = "displayOccupation(this.id)">Siege Engineer</a>
				<li><a id = "sorcerer" onclick = "displayOccupation(this.id)">Sorcerer</a>
				<li><a id = "student" onclick = "displayOccupation(this.id)">Student</a>
				<li><a id = "tailor" onclick = "displayOccupation(this.id)">Tailor</a>
				<li><a id = "taxCollector" onclick = "displayOccupation(this.id)">Tax Collector</a>
				<li><a id = "torturer" onclick = "displayOccupation(this.id)">Torturer</a>
				<li><a id = "trader" onclick = "displayOccupation(this.id)">Trader</a>
				<li><a id = "wanderer" onclick = "displayOccupation(this.id)">Wanderer</a>
				<li><a id = "warbandMusician" onclick = "displayOccupation(this.id)">Warband Musician</a>
				<li><a id = "witch" onclick = "displayOccupation(this.id)">Witch</a>
				<li><a id = "wizard" onclick = "displayOccupation(this.id)">Wizard</a>
				</ul>
		</table>
		
		<section id = "sec_actor" style = "text-align:left; display:none;">
		
			<h3>Actor</h3>
			
			<p>Being on a stage, reciting line, playing a character is the trade of the actor.<br><br>
				<b>Career Path:</b> Arts<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: 5<li>Commerce: 10<li>Crafts: 10<li>Criminal: 8</ul>
					<td><ul><li>Government: 9<li>Maritime: 10<li>Military: 8<li>Primary: 10</ul>
					<td><ul><li>Religious: 8<li>Scholar: 10<li>Service: 8<li>Unemployed: 7</ul>
					</table>
				<b>Age:</b> +2 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Acting (4)<li>Charm & Persuasion (3)<li>Confidence & Ego (2)</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addOccupationToSelected(new objSelectedOccupation("actor", "Actor"))'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_altarBoy" style = "text-align:left; display:none;">
		
			<h3>Altar Boy</h3>
			
			<p>The role of the altar boy is to help in the religious ceremony and serve the priest in different ways.<br><br>
				<b>Career Path:</b> Religious<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: 8<li>Commerce: 10<li>Crafts: 10<li>Criminal: 9</ul>
					<td><ul><li>Government: 10<li>Maritime: 8<li>Military: 8<li>Primary: 5</ul>
					<td><ul><li>Religious: N/A<li>Scholar: 9<li>Service: 5<li>Unemployed: 5</ul>
					</table>
				<b>Age:</b> +2 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Detect Motive (2)<li>Religions (2)<li>Sleight of Hand (3)</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addOccupationToSelected(new objSelectedOccupation("altarBoy", "Altar Boy"))'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_apothecary" style = "text-align:left; display:none;">
		
			<h3>Apothecary</h3>
			
			<p>Apothecaries prepare remedies for patients and practice medicine based on concoctions and ointments.<br><br>
				<b>Career Path:</b> Scholar or Service<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: 10<li>Commerce: 9<li>Crafts: 8<li>Criminal: 11</ul>
					<td><ul><li>Government: 10<li>Maritime: 11<li>Military: 11<li>Primary: 11</ul>
					<td><ul><li>Religious: 8<li>Scholar: 5<li>Service: 5<li>Unemployed: N/A</ul>
					</table>
				<b>Age:</b> +5 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Alchemy & Chemistry (4)<li>Botany (3)<li>Medicine (3)</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addOccupationToSelected(new objSelectedOccupation("apothecary", "Apothecary"))'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_apprentice" style = "text-align:left; display:none;">
		
			<h3>Apprentice</h3>
			
			<p>An entry level job for future craftsman, the apprentice will take care of all the simple and dirty tasks of the shop.<br><br>
				<b>Career Path:</b> Crafts<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: 4<li>Commerce: 2<li>Crafts: N/A<li>Criminal: 4</ul>
					<td><ul><li>Government: 4<li>Maritime: 4<li>Military: 2<li>Primary: 2</ul>
					<td><ul><li>Religious: 4<li>Scholar: 4<li>Service: 2<li>Unemployed: 2</ul>
					</table>
				<b>Age:</b> +2 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Detect Motive (3)<li>Lifting & Pushing (2)<li>Crafting (2)</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addOccupationToSelected(new objSelectedOccupation("apprentice", "Apprentice"))'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_arbalestierArcher" style = "text-align:left; display:none;">
		
			<h3>Arbalestier / Archer</h3>
			
			<p>Support troops for the knight, archer and arbalestier are the range specialists.<br><br>
				<b>Career Path:</b> Military<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: 10<li>Commerce: 8<li>Crafts: 8<li>Criminal: 7</ul>
					<td><ul><li>Government: 11<li>Maritime: 8<li>Military: 5<li>Primary: 7</ul>
					<td><ul><li>Religious: 10<li>Scholar: 10<li>Service: 10<li>Unemployed: 7</ul>
					</table>
				<b>Age:</b> +3 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Reflex (3)<li>
				<input type = "radio" name = "arbalestierArcherSkills1" value = "bows">Bows (4)</input> or <br>
					<input type = "radio" name = "arbalestierArcherSkills1" value = "crossbowsFirearms">Crossbows & Firearms (4)</input>
					<li><input type = "radio" name = "arbalestierArcherSkills2" value = "resistPain">Resist Pain (2)</input> or <br>
					<input type = "radio" name = "arbalestierArcherSkills2" value = "resistShock">Resist Shock (2)</input></ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'if (getFormValue("arbalestierArcherSkills1") != undefined && getFormValue("arbalestierArcherSkills2") != undefined)
					{addOccupationToSelected(new objSelectedOccupation("arbalestierArcher", "Arbalestier / Archer"))}else{alert("Please select a skill.")}'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_armourer" style = "text-align:left; display:none;">
		
			<h3>Armourer</h3>
			
			<p>A specialised craftsman building arms and armours<br><br>
				<b>Career Path:</b> Crafts or Military<br>
				<b>Prerequisite: </b>Must come from an occupation either in crafts or military.<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: N/A<li>Commerce: N/A<li>Crafts: 5<li>Criminal: N/A</ul>
					<td><ul><li>Government: N/A<li>Maritime: N/A<li>Military: 5<li>Primary: N/A</ul>
					<td><ul><li>Religious: N/A<li>Scholar: N/A<li>Service: N/A<li>Unemployed: N/A</ul>
					</table>
				<b>Age:</b> +3 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Melee Combat (2)<li>Metalworking (4)<li>Resist Heat (3)</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addOccupationToSelected(new objSelectedOccupation("armourer", "Armourer"))'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_aspiringArtist" style = "text-align:left; display:none;">
		
			<h3>Aspiring Artist</h3>
			
			<p>Before experiencing fame and success, an artist can only aspire to be discovered.<br><br>
				<b>Career Path:</b> Arts<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: N/A<li>Commerce: 2<li>Crafts: 2<li>Criminal: 2</ul>
					<td><ul><li>Government: 3<li>Maritime: 2<li>Military: 2<li>Primary: 3</ul>
					<td><ul><li>Religious: 4<li>Scholar: 4<li>Service: 2<li>Unemployed: 2</ul>
					</table>
				<b>Age:</b> +3 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Arts & Performance (2)<li>Confidence & Ego (3)<li>Resist Hunger (2)</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addOccupationToSelected(new objSelectedOccupation("aspiringArtist", "Aspiring Artist"))'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_assassin" style = "text-align:left; display:none;">
		
			<h3>Assassin</h3>
			
			<p>Assassins kill targets for money.<br><br>
				<b>Career Path:</b> Criminal<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: 10<li>Commerce: 10<li>Crafts: 10<li>Criminal: 5</ul>
					<td><ul><li>Government: 10<li>Maritime: 10<li>Military: 7<li>Primary: 10</ul>
					<td><ul><li>Religious: 10<li>Scholar: 10<li>Service: 10<li>Unemployed: 9</ul>
					</table>
				<b>Age:</b> +5 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Brawling (3)<li>Perception & Vigilance (3)<li>Stealth (3)</ul>
				<b>Morality:</b> The morality of the character is lowered by 2.<br>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addOccupationToSelected(new objSelectedOccupation("assassin", "Assassin"))'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_banker" style = "text-align:left; display:none;">
		
			<h3>Banker</h3>
			
			<p>Banker protects people money and valuable and lend money with interest.<br><br>
				<b>Career Path:</b> Commerce<br>
				<b>Prerequisite: </b>Must come from an occupation in commerce.<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: N/A<li>Commerce: 8<li>Crafts: N/A<li>Criminal: N/A</ul>
					<td><ul><li>Government: N/A<li>Maritime: N/A<li>Military: N/A<li>Primary: N/A</ul>
					<td><ul><li>Religious: N/A<li>Scholar: N/A<li>Service: N/A<li>Unemployed: N/A</ul>
					</table>
				<b>Age:</b> +5 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Appraise (4)<li>Detect Motive (4)<li>Heraldry & Nobility (3)</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addOccupationToSelected(new objSelectedOccupation("banker", "Banker"))'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_beadle" style = "text-align:left; display:none;">
		
			<h3>Beadle</h3>
			
			<p>Beadle works for a religious organisation, cleaning their establishment and doing most repairs.<br><br>
				<b>Career Path:</b> Religious<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: 10<li>Commerce: 9<li>Crafts: 6<li>Criminal: 9</ul>
					<td><ul><li>Government: 10<li>Maritime: 9<li>Military: 9<li>Primary: 6</ul>
					<td><ul><li>Religious: 5<li>Scholar: 10<li>Service: 6<li>Unemployed: 7</ul>
					</table>
				<b>Age:</b> +4 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Lifting & Pushing (3)<li>Religions (4)<li>Woodworking (2)</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addOccupationToSelected(new objSelectedOccupation("beadle", "Beadle"))'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_beggar" style = "text-align:left; display:none;">
		
			<h3>Beggar</h3>
			
			<p>Every city have its share of beggar. They live off the generosity of others.<br><br>
				<b>Career Path:</b> Unemployed<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: 6<li>Commerce: 10<li>Crafts: 9<li>Criminal: 6</ul>
					<td><ul><li>Government: 10<li>Maritime: 7<li>Military: 6<li>Primary: 7</ul>
					<td><ul><li>Religious: 7<li>Scholar: 10<li>Service: 10<li>Unemployed: 5</ul>
					</table>
				<b>Age:</b> +3 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Charm & Persuasion (3)<li>Resist Hunger (4)<li>
				<input type = "radio" name = "beggarSkills1" value = "resistCold">Resist Cold (2)</input> or <br>
					<input type = "radio" name = "beggarSkills1" value = "resistHeat">Resist Heat (2)</input></ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'if (getFormValue("beggarSkills1") != undefined)
					{addOccupationToSelected(new objSelectedOccupation("beggar", "Beggar"))}else{alert("Please select a skill.")}'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_blacksmith" style = "text-align:left; display:none;">
		
			<h3>Blacksmith</h3>
			
			<p>A craftsman doing all kind of metal work.<br><br>
				<b>Career Path:</b> Crafts<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: 10<li>Commerce: 8<li>Crafts: 5<li>Criminal: 9</ul>
					<td><ul><li>Government: 10<li>Maritime: 9<li>Military: 8<li>Primary: 7</ul>
					<td><ul><li>Religious: 10<li>Scholar: 10<li>Service: 9<li>Unemployed: 9</ul>
					</table>
				<b>Age:</b> +4 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Appraise (2)<li>Metalworking (4)<li>Resist Heat (3)</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addOccupationToSelected(new objSelectedOccupation("blacksmith", "Blacksmith"))'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_burglar" style = "text-align:left; display:none;">
		
			<h3>Burglar</h3>
			
			<p>Burglar are specialist at breaking and entering locations without being seen and robbing anything of value.<br><br>
				<b>Career Path:</b> Criminal<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: 10<li>Commerce: 9<li>Crafts: 10<li>Criminal: 5</ul>
					<td><ul><li>Government: 11<li>Maritime: 9<li>Military: 8<li>Primary: 10</ul>
					<td><ul><li>Religious: 10<li>Scholar: 10<li>Service: 10<li>Unemployed: 8</ul>
					</table>
				<b>Age:</b> +5 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Mechanics (2)<li>Perception & Vigilance (3)<li>Stealth (4)</ul>
				<b>Morality:</b> The morality of the character is lowered by 1.<br>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addOccupationToSelected(new objSelectedOccupation("burglar", "Burglar"))'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_campServantSquire" style = "text-align:left; display:none;">
		
			<h3>Camp Servant / Squire</h3>
			
			<p>Either following a knight around, taking care of their armour and feeding them while their out on campaign or staying at a military camp doing all kind of ingrate tasks.<br><br>
				<b>Career Path:</b> Military<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: 8<li>Commerce: 5<li>Crafts: 8<li>Criminal: 9</ul>
					<td><ul><li>Government: 9<li>Maritime: 7<li>Military: N/A<li>Primary: 5</ul>
					<td><ul><li>Religious: 9<li>Scholar: 11<li>Service: 10<li>Unemployed: 5</ul>
					</table>
				<b>Age:</b> +2 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Cooking (3)<li>Heraldry & Nobility (2)<li>Melee Combat (2)</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addOccupationToSelected(new objSelectedOccupation("campServantSquire", "Camp Servant / Squire"))'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_carpenter" style = "text-align:left; display:none;">
		
			<h3>Carpenter</h3>
			
			<p>A craftsman specialised in woodworking.<br><br>
				<b>Career Path:</b> Military<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: 10<li>Commerce: 9<li>Crafts: 5<li>Criminal: 10</ul>
					<td><ul><li>Government: 10<li>Maritime: 8<li>Military: 8<li>Primary: 6</ul>
					<td><ul><li>Religious: 9<li>Scholar: 10<li>Service: 9<li>Unemployed: 7</ul>
					</table>
				<b>Age:</b> +4 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Appraise (2)<li>Engineering & Physics (3)<li>Woodworking (4)</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addOccupationToSelected(new objSelectedOccupation("carpenter", "Carpenter"))'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_cavalryman" style = "text-align:left; display:none;">
		
			<h3>Cavalryman</h3>
			
			<p>Mounted soldiers of common birth. They are usually not as well armoured as knight and do not own their mount.<br><br>
				<b>Career Path:</b> Military<br>
				<b>Prerequisite: </b>Must come from an occupation in military.<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: N/A<li>Commerce: N/A<li>Crafts: N/A<li>Criminal: N/A</ul>
					<td><ul><li>Government: N/A<li>Maritime: N/A<li>Military: 5<li>Primary: N/A</ul>
					<td><ul><li>Religious: N/A<li>Scholar: N/A<li>Service: N/A<li>Unemployed: N/A</ul>
					</table>
				<b>Age:</b> +4 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Polearms (3)<li>Riding (4)<li>
				<input type = "radio" name = "cavalrymanSkills1" value = "oneHanded">One Handed Swords (3)</input> or <br>
					<input type = "radio" name = "cavalrymanSkills1" value = "axesMaces">Axes & Maces (3)</input></ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'if (getFormValue("cavalrymanSkills1") != undefined)
					{addOccupationToSelected(new objSelectedOccupation("cavalryman", "Cavalryman"))}else{alert("Please select a skill.")}'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_cheiftainMayor" style = "text-align:left; display:none;">
		
			<h3>Chieftain / Mayor</h3>
			
			<p>Chieftain in orchish and troll's society and mayor in lowlander society are selected amongst their peers for their individual qualities.  
				It is not a hereditary position but really based on merits.<br><br>
				<b>Career Path:</b> Government<br>
				<b>Prerequisite: </b>Must have at least two previous occupations.  Only available to Lowlander, Orcs, Goblins and Trolls.<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: 12<li>Commerce: 8<li>Crafts: 8<li>Criminal: 12</ul>
					<td><ul><li>Government: 8<li>Maritime: 10<li>Military: 8<li>Primary: 8</ul>
					<td><ul><li>Religious: 11<li>Scholar: 12<li>Service: 12<li>Unemployed: N/A</ul>
					</table>
				<b>Age:</b> +5 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Confidence & Ego (4)<li>Melee Combat (2)<li>
				<input type = "radio" name = "chieftainMayorSkills1" value = "charmPersuasion">Charm & Persuasion (4)</input> or <br>
					<input type = "radio" name = "chieftainMayorSkills1" value = "insultIntimidation">Insult & Intimidation (4)</input></ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'if (getFormValue("chieftainMayorSkills1") != undefined)
					{addOccupationToSelected(new objSelectedOccupation("chieftainMayor", "Chieftain / Mayor"))}else{alert("Please select a skill.")}'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_clerk" style = "text-align:left; display:none;">
		
			<h3>Clerk</h3>
			
			<p>An entry level job for government position. Usually very boring, tedious and repetitive tasks.<br><br>
				<b>Career Path:</b> Government<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: 5<li>Commerce: 5<li>Crafts: 5<li>Criminal: 7</ul>
					<td><ul><li>Government: N/A<li>Maritime: 6<li>Military: 6<li>Primary: 6</ul>
					<td><ul><li>Religious: 5<li>Scholar: 5<li>Service: 5<li>Unemployed: 7</ul>
					</table>
				<b>Age:</b> +2 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Charm & Persuasion (2)<li>Detect Motive (3)<li>Insult & Intimidation (2)</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addOccupationToSelected(new objSelectedOccupation("clerk", "Clerk"))'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_conman" style = "text-align:left; display:none;">
		
			<h3>Conman</h3>
			
			<p>Conman abuse the confidence of their victim to take their money.<br><br>
				<b>Career Path:</b> Criminal<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: 8<li>Commerce: 8<li>Crafts: 10<li>Criminal: 5</ul>
					<td><ul><li>Government: 8<li>Maritime: 10<li>Military: 10<li>Primary: 10</ul>
					<td><ul><li>Religious: 8<li>Scholar: 8<li>Service: 8<li>Unemployed: 9</ul>
					</table>
				<b>Age:</b> +4 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Charm & Persuasion (4)<li>Detect Motive (3)<li>Insult & Intimidation (2)</ul>
				<b>Honour:</b> The honour of the character is lowered by 1.<br>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addOccupationToSelected(new objSelectedOccupation("conman", "Conman"))'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_cook" style = "text-align:left; display:none;">
		
			<h3>Cook</h3>
			
			<p>Cooks prepare food for other people in exchange of money.<br><br>
				<b>Career Path:</b> Service<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: 7<li>Commerce: 7<li>Crafts: 8<li>Criminal: 8</ul>
					<td><ul><li>Government: 10<li>Maritime: 9<li>Military: 9<li>Primary: 8</ul>
					<td><ul><li>Religious: 8<li>Scholar: 10<li>Service: 5<li>Unemployed: 8</ul>
					</table>
				<b>Age:</b> +3 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Botany (2)<li>Cooking (4)<li>Foraging & Hunting (3)</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addOccupationToSelected(new objSelectedOccupation("cook", "Cook"))'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_dancer" style = "text-align:left; display:none;">
		
			<h3>Dancer</h3>
			
			<p>An artist using as a medium the movement of their own body.<br><br>
				<b>Career Path:</b> Arts<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: 5<li>Commerce: 10<li>Crafts: 10<li>Criminal: 8</ul>
					<td><ul><li>Government: 10<li>Maritime: 9<li>Military: 8<li>Primary: 10</ul>
					<td><ul><li>Religious: 8<li>Scholar: 10<li>Service: 9<li>Unemployed: 7</ul>
					</table>
				<b>Age:</b> +3 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Acrobatics (3)<li>Dancing (4)<li>Confidence & Ego (2)</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addOccupationToSelected(new objSelectedOccupation("dancer", "Dancer"))'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_deckHand" style = "text-align:left; display:none;">
		
			<h3>Deck Hand</h3>
			
			<p>An entry level job on a ship. The deck hand do all the jobs other won't do.<br><br>
				<b>Career Path:</b> Maritime<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: 8<li>Commerce: 7<li>Crafts: 5<li>Criminal: 6</ul>
					<td><ul><li>Government: 8<li>Maritime: N/A<li>Military: 5<li>Primary: 5</ul>
					<td><ul><li>Religious: 10<li>Scholar: 10<li>Service: 7<li>Unemployed: 5</ul>
					</table>
				<b>Age:</b> +5 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Lifting & Pushing (2)<li>Seamanship (3)<li>
				<input type = "radio" name = "deckHandSkills1" value = "oneHanded">One Handed Swords (2)</input> or <br>
					<input type = "radio" name = "deckHandSkills1" value = "axesMaces">Axes & Maces (2)</input></ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'if (getFormValue("deckHandSkills1") != undefined)
					{addOccupationToSelected(new objSelectedOccupation("deckHand", "Deck Hand"))}else{alert("Please select a skill.")}'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_diplomat" style = "text-align:left; display:none;">
		
			<h3>Diplomat</h3>
			
			<p>The role of the diplomat is to maintain and establish relations between different kingdoms or nations.<br><br>
				<b>Career Path:</b> Government<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: 9<li>Commerce: 8<li>Crafts: 10<li>Criminal: N/A</ul>
					<td><ul><li>Government: 5<li>Maritime: 9<li>Military: 9<li>Primary: 11</ul>
					<td><ul><li>Religious: 7<li>Scholar: 9<li>Service: 9<li>Unemployed: 11</ul>
					</table>
				<b>Age:</b> +8 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Charm & Persuasion (3)<li>Detect Motive (3)<li>Knowledge (3)</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addOccupationToSelected(new objSelectedOccupation("diplomat", "Diplomat"))'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_drunk" style = "text-align:left; display:none;">
		
			<h3>Drunk</h3>
			
			<p>Every village seems to have residents who seem to never be sober.<br><br>
				<b>Career Path:</b> Unemployed<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: 5<li>Commerce: 7<li>Crafts: 8<li>Criminal: 6</ul>
					<td><ul><li>Government: 8<li>Maritime: 6<li>Military: 5<li>Primary: 9</ul>
					<td><ul><li>Religious: 8<li>Scholar: 9<li>Service: 8<li>Unemployed: 5</ul>
					</table>
				<b>Age:</b> +2 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Brawling (2)<li>Insult & Intimidation (3)<li>Resist Poison (4)</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addOccupationToSelected(new objSelectedOccupation("drunk", "Drunk"))'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_elementalist" style = "text-align:left; display:none;">
		
			<h3>Elementalist</h3>
			
			<p>A magic user specialised in the elven tradition of control of the elements.<br><br>
				<b>Career Path:</b> Scholar<br>
				<b>Prerequisite: </b>Must come from an occupation as a scholar.<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: N/A<li>Commerce: N/A<li>Crafts: N/A<li>Criminal: N/A</ul>
					<td><ul><li>Government: N/A<li>Maritime: N/A<li>Military: N/A<li>Primary: N/A</ul>
					<td><ul><li>Religious: N/A<li>Scholar: 8<li>Service: N/A<li>Unemployed: N/A</ul>
					</table>
				<b>Age:</b> +8 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Elementalism (3)<li>Resist Cold (3)<li>Resist Heat (3)</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addOccupationToSelected(new objSelectedOccupation("elementalist", "Elementalist"))'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_engineer" style = "text-align:left; display:none;">
		
			<h3>Engineer</h3>
			
			<p>Engineer develop cranes and mills and help design the tallest building.<br><br>
				<b>Career Path:</b> Scholar<br>
				<b>Prerequisite: </b>Must come from an occupation as a scholar.<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: N/A<li>Commerce: N/A<li>Crafts: N/A<li>Criminal: N/A</ul>
					<td><ul><li>Government: N/A<li>Maritime: N/A<li>Military: N/A<li>Primary: N/A</ul>
					<td><ul><li>Religious: N/A<li>Scholar: 5<li>Service: N/A<li>Unemployed: N/A</ul>
					</table>
				<b>Age:</b> +5 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Deduction & Logic (3)<li>Engineering & Physics (4)<li>Mechanics (2)</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addOccupationToSelected(new objSelectedOccupation("engineer", "Engineer"))'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_farmHand" style = "text-align:left; display:none;">
		
			<h3>Farm Hand</h3>
			
			<p>An entry level job for farm job. Farm hand do all the dirty and ingrate task on the farm.<br><br>
				<b>Career Path:</b> Primary<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: 7<li>Commerce: 8<li>Crafts: 5<li>Criminal: 6</ul>
					<td><ul><li>Government: 9<li>Maritime: 5<li>Military: 5<li>Primary: N/A</ul>
					<td><ul><li>Religious: 5<li>Scholar: 7<li>Service: 5<li>Unemployed: 5</ul>
					</table>
				<b>Age:</b> +2 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Botany (2)<li>Lifting & Pushing (3)<li>Taming & Training (2)</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addOccupationToSelected(new objSelectedOccupation("farmHand", "Farm Hand"))'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_fence" style = "text-align:left; display:none;">
		
			<h3>Fence</h3>
			
			<p>A fence is the specialist of trading in stolen goods.<br><br>
				<b>Career Path:</b> Commerce or Criminal<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: 9<li>Commerce: 5<li>Crafts: 10<li>Criminal: 5</ul>
					<td><ul><li>Government: 9<li>Maritime: 8<li>Military: 10<li>Primary: 10</ul>
					<td><ul><li>Religious: 10<li>Scholar: 10<li>Service: 10<li>Unemployed: 8</ul>
					</table>
				<b>Age:</b> +5 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Appraise (4)<li>Charm & Persuasion (3)<li>Detect Motive (2)</ul>
				<b>Morality:</b> The morality of the character is lowered by 1.<br>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addOccupationToSelected(new objSelectedOccupation("fence", "Fence"))'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_firstMate" style = "text-align:left; display:none;">
		
			<h3>First Mate</h3>
			
			<p>The right hand of the captain on a ship.<br><br>
				<b>Career Path:</b> Maritime<br>
				<b>Prerequisite: </b>Must come from two previous maritime occupation.<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: N/A<li>Commerce: N/A<li>Crafts: N/A<li>Criminal: N/A</ul>
					<td><ul><li>Government: N/A<li>Maritime: 8<li>Military: N/A<li>Primary: N/A</ul>
					<td><ul><li>Religious: N/A<li>Scholar: N/A<li>Service: N/A<li>Unemployed: N/A</ul>
					</table>
				<b>Age:</b> +6 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>One Handed Swords (3)<li>Insult & Intimidation (4)<li>Navigation (3)</ul>
				<b>Morality:</b> The morality of the character is lowered by 1.<br>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addOccupationToSelected(new objSelectedOccupation("firstMate", "First Mate"))'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_fisherman" style = "text-align:left; display:none;">
		
			<h3>Fisherman</h3>
			
			<p>Fisherman go on the sea and river to catch fish and sell it in the market.<br><br>
				<b>Career Path:</b> Maritime or Primary<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: 10<li>Commerce: 8<li>Crafts: 7<li>Criminal: 6</ul>
					<td><ul><li>Government: 10<li>Maritime: 5<li>Military: 8<li>Primary: 5</ul>
					<td><ul><li>Religious: 10<li>Scholar: 11<li>Service: 10<li>Unemployed: 7</ul>
					</table>
				<b>Age:</b> +3 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Foraging & Hunting (4)<li>Swimming (3)<li>Seamanship (2)</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addOccupationToSelected(new objSelectedOccupation("fisherman", "Fisherman"))'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_gambler" style = "text-align:left; display:none;">
		
			<h3>Gambler</h3>
			
			<p>Professional gambler, living of wining at games of chance.<br><br>
				<b>Career Path:</b> Unemployed<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: 8<li>Commerce: 8<li>Crafts: 9<li>Criminal: 7</ul>
					<td><ul><li>Government: 9<li>Maritime: 7<li>Military: 7<li>Primary: 10</ul>
					<td><ul><li>Religious: 10<li>Scholar: 10<li>Service: 8<li>Unemployed: 5</ul>
					</table>
				<b>Age:</b> +5 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Detect Motive (3)<li>Luck (4)<li>Sleight of Hand (2)</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addOccupationToSelected(new objSelectedOccupation("gambler", "Gambler"))'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_guard" style = "text-align:left; display:none;">
		
			<h3>Guard</h3>
			
			<p>Somebody hired to protect a person or a location.<br><br>
				<b>Career Path:</b> Military<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: 11<li>Commerce: 10<li>Crafts: 9<li>Criminal: 8</ul>
					<td><ul><li>Government: 11<li>Maritime: 8<li>Military: 5<li>Primary: 7</ul>
					<td><ul><li>Religious: 9<li>Scholar: 11<li>Service: 10<li>Unemployed: 7</ul>
					</table>
				<b>Age:</b> +4 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Perception & Vigilance (4)<li>
				<input type = "radio" name = "guardSkills1" value = "detectMotive">Detect Motive (2)</input> or <br>
					<input type = "radio" name = "guardSkills1" value = "insultIntimidation">Insult & Intimidation (2)</input>
					<li><input type = "radio" name = "guardSkills2" value = "polearms">Polearms (3)</input> or <br>
					<input type = "radio" name = "guardSkills2" value = "crossbowsFirearms">Crossbows & Firearms (3)</input></ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'if (getFormValue("guardSkills1") != undefined && getFormValue("guardSkills2") != undefined)
					{addOccupationToSelected(new objSelectedOccupation("guard", "Guard"))}else{alert("Please select a skill.")}'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_guide" style = "text-align:left; display:none;">
		
			<h3>Guide</h3>
			
			<p>Guide are hired to escort people in inhospitable and unfamiliar terrain.<br><br>
				<b>Career Path:</b> Service<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: 9<li>Commerce: 8<li>Crafts: 9<li>Criminal: 9</ul>
					<td><ul><li>Government: 11<li>Maritime: 9<li>Military: 9<li>Primary: 7</ul>
					<td><ul><li>Religious: 9<li>Scholar: 10<li>Service: 5<li>Unemployed: 8</ul>
					</table>
				<b>Age:</b> +5 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Geography (3)<li>Navigation (4)<li>Riding (2)</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addOccupationToSelected(new objSelectedOccupation("guide", "Guide"))'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_hermit" style = "text-align:left; display:none;">
		
			<h3>Hermit</h3>
			
			<p>The hermit abandon society to live on their own in the wild.<br><br>
				<b>Career Path:</b> Scholar or Unemployed<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: 8<li>Commerce: 9<li>Crafts: 8<li>Criminal: 7</ul>
					<td><ul><li>Government: 10<li>Maritime: 8<li>Military: 7<li>Primary: 9</ul>
					<td><ul><li>Religious: 7<li>Scholar: 7<li>Service: 10<li>Unemployed: 5</ul>
					</table>
				<b>Age:</b> +8 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Athleticism (2)<li>Survival (4)<li>
				<input type = "radio" name = "hermitSkills1" value = "resistCold">Resist Cold (3)</input> or <br>
					<input type = "radio" name = "hermitSkills1" value = "resistHeat">Resist Heat (3)</input></ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'if (getFormValue("hermitSkills1") != undefined)
					{addOccupationToSelected(new objSelectedOccupation("hermit", "Hermit"))}else{alert("Please select a skill.")}'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_highwayman" style = "text-align:left; display:none;">
		
			<h3>Highwayman</h3>
			
			<p>Highwaymen specialised in ambushing travellers on the road to take their money and valuable.<br><br>
				<b>Career Path:</b> Criminal<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: 7<li>Commerce: 9<li>Crafts: 9<li>Criminal: 5</ul>
					<td><ul><li>Government: 11<li>Maritime: 9<li>Military: 6<li>Primary: 8</ul>
					<td><ul><li>Religious: 11<li>Scholar: 11<li>Service: 9<li>Unemployed: 7</ul>
					</table>
				<b>Age:</b> +3 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Insult & Intimidation (3)<li>Stealth (3)<li>
				<input type = "radio" name = "highwaymanSkills1" value = "meleeCombat">Melee Combat (3)</input> or <br>
					<input type = "radio" name = "highwaymanSkills1" value = "rangeCombat">Range Combat (3)</input></ul>
				<b>Morality:</b> The morality of the character is lowered by 2.<br>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'if (getFormValue("highwaymanSkills1") != undefined)
					{addOccupationToSelected(new objSelectedOccupation("highwayman", "Highwayman"))}else{alert("Please select a skill.")}'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_hunter" style = "text-align:left; display:none;">
		
			<h3>Hunter</h3>
			
			<p>Hunter goes in the wild to kill animals to sell the meat at the market.<br><br>
				<b>Career Path:</b> Primary<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: 10<li>Commerce: 9<li>Crafts: 7<li>Criminal: 8</ul>
					<td><ul><li>Government: 11<li>Maritime: 9<li>Military: 5<li>Primary: 5</ul>
					<td><ul><li>Religious: 10<li>Scholar: 11<li>Service: 9<li>Unemployed: 7</ul>
					</table>
				<b>Age:</b> +4 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Survival (4)<li>
				<input type = "radio" name = "hunterSkills1" value = "polearms">Polearms (3)</input> or <br>
					<input type = "radio" name = "hunterSkills1" value = "rangeCombat">Range Combat (3)</input>
					<li><input type = "radio" name = "hunterSkills2" value = "resistCold">Resist Cold (2)</input> or <br>
					<input type = "radio" name = "hunterSkills2" value = "resistHeat">Resist Heat (2)</input></ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'if (getFormValue("hunterSkills1") != undefined && getFormValue("hunterSkills2") != undefined)
					{addOccupationToSelected(new objSelectedOccupation("hunter", "Hunter"))}else{alert("Please select a skill.")}'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_illuminator" style = "text-align:left; display:none;">
		
			<h3>Illuminator</h3>
			
			<p>Illuminator are the specialist of book embellishment.<br><br>
				<b>Career Path:</b> Arts<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: 5<li>Commerce: 10<li>Crafts: 5<li>Criminal: 10</ul>
					<td><ul><li>Government: 10<li>Maritime: 10<li>Military: 9<li>Primary: 10</ul>
					<td><ul><li>Religious: 5<li>Scholar: 5<li>Service: 9<li>Unemployed: 9</ul>
					</table>
				<b>Age:</b> +4 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Drawing & Painting (4)<li>Linguistic (2)<li>Scribing (3)</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addOccupationToSelected(new objSelectedOccupation("illuminator", "Illuminator"))'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_inquisitor" style = "text-align:left; display:none;">
		
			<h3>Inquisitor</h3>
			
			<p>The role of the inquisitor is to find and punish religious heretics or political agitators.<br><br>
				<b>Career Path:</b> Government or Religious<br>
				<b>Prerequisite: </b>Must come from a religious or governmental occupation.<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: N/A<li>Commerce: N/A<li>Crafts: N/A<li>Criminal: N/A</ul>
					<td><ul><li>Government: 8<li>Maritime: N/A<li>Military: N/A<li>Primary: N/A</ul>
					<td><ul><li>Religious: 8<li>Scholar: N/A<li>Service: N/A<li>Unemployed: N/A</ul>
					</table>
				<b>Age:</b> +8 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Insult & Intimidation (3)<li>Religions (3)<li>Torture (3)</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addOccupationToSelected(new objSelectedOccupation("inquisitor", "Inquisitor"))'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_jailer" style = "text-align:left; display:none;">
		
			<h3>Jailer</h3>
			
			<p>The role of the jailer is to keep criminals locked-up.<br><br>
				<b>Career Path:</b> Government or Military<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: 11<li>Commerce: 10<li>Crafts: 10<li>Criminal: N/A</ul>
					<td><ul><li>Government: 5<li>Maritime: 8<li>Military: 5<li>Primary: 10</ul>
					<td><ul><li>Religious: 10<li>Scholar: 11<li>Service: 10<li>Unemployed: 8</ul>
					</table>
				<b>Age:</b> +4 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Detect Motive (2)<li>Insult & Intimidation (3)<li>Perception & Vigilance (4)</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addOccupationToSelected(new objSelectedOccupation("jailer", "Jailer"))'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_jeweller" style = "text-align:left; display:none;">
		
			<h3>Jeweller</h3>
			
			<p>The role of the inquisitor is to find and punish religious heretics or political agitators.<br><br>
				<b>Career Path:</b> Crafts<br>
				<b>Prerequisite: </b>Must come from a previous occupation in crafts.<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: N/A<li>Commerce: N/A<li>Crafts: 8<li>Criminal: N/A</ul>
					<td><ul><li>Government: N/A<li>Maritime: N/A<li>Military: N/A<li>Primary: N/A</ul>
					<td><ul><li>Religious: N/A<li>Scholar: N/A<li>Service: N/A<li>Unemployed: N/A</ul>
					</table>
				<b>Age:</b> +3 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Appraise (2)<li>Metalworking (4)<li>Stonecutting (4)</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addOccupationToSelected(new objSelectedOccupation("jeweller", "Jeweller"))'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_knight" style = "text-align:left; display:none;">
		
			<h3>Knight</h3>
			
			<p>A mounted fighter, often time of noble birth. They usually are heavily armoured and own their own horse.  
				Being knighted is a common way for military veteran to enter nobility, at the lowest level.<br><br>
				<b>Career Path:</b> Military<br>
				<b>Prerequisite: </b>Must have at least two previous military occupations.<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: N/A<li>Commerce: N/A<li>Crafts: N/A<li>Criminal: N/A</ul>
					<td><ul><li>Government: N/A<li>Maritime: N/A<li>Military: 8<li>Primary: N/A</ul>
					<td><ul><li>Religious: N/A<li>Scholar: N/A<li>Service: N/A<li>Unemployed: N/A</ul>
					</table>
				<b>Age:</b> +5 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Heraldry & Nobility (3)<li>Melee Combat (4)<li>Riding (3)</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addOccupationToSelected(new objSelectedOccupation("knight", "Knight"))'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_lawyer" style = "text-align:left; display:none;">
		
			<h3>Lawyer</h3>
			
			<p>Lawyers represent other people in matter of justice.<br><br>
				<b>Career Path:</b> Service<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: 8<li>Commerce: 8<li>Crafts: 10<li>Criminal: 10</ul>
					<td><ul><li>Government: 8<li>Maritime: 11<li>Military: 10<li>Primary: 11</ul>
					<td><ul><li>Religious: 8<li>Scholar: 7<li>Service: 5<li>Unemployed: 11</ul>
					</table>
				<b>Age:</b> +8 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Charm & Persuasion (3)<li>Deduction & Logic (2)<li>Laws & Legal Systems (4)</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addOccupationToSelected(new objSelectedOccupation("lawyer", "Lawyer"))'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_lumberjack" style = "text-align:left; display:none;">
		
			<h3>Lumberjack</h3>
			
			<p>Lumberjacks goes into the woods to cut down trees to sell them as lumber.<br><br>
				<b>Career Path:</b> Primary<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: 10<li>Commerce: 9<li>Crafts: 6<li>Criminal: 9</ul>
					<td><ul><li>Government: 11<li>Maritime: 10<li>Military: 9<li>Primary: 5</ul>
					<td><ul><li>Religious: 11<li>Scholar: 11<li>Service: 9<li>Unemployed: 7</ul>
					</table>
				<b>Age:</b> +2 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Axes & Maces (2)<li>Lifting & Pushing (4)<li>Woodworking (3)</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addOccupationToSelected(new objSelectedOccupation("lumberjack", "Lumberjack"))'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_mason" style = "text-align:left; display:none;">
		
			<h3>Mason</h3>
			
			<p>A craftsman specialised in working with stone, usually for building purpose.<br><br>
				<b>Career Path:</b> Crafts<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: 10<li>Commerce: 9<li>Crafts: 5<li>Criminal: 9</ul>
					<td><ul><li>Government: 10<li>Maritime: 10<li>Military: 8<li>Primary: 6</ul>
					<td><ul><li>Religious: 10<li>Scholar: 10<li>Service: 9<li>Unemployed: 7</ul>
					</table>
				<b>Age:</b> +3 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Appraise (2)<li>Lifting & Pushing (3)<li>Stonecutting (4)</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addOccupationToSelected(new objSelectedOccupation("mason", "Mason"))'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_miner" style = "text-align:left; display:none;">
		
			<h3>Miner</h3>
			
			<p>Miners goes in the belly of the world to extract ore and precious stones.<br><br>
				<b>Career Path:</b> Primary<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: 10<li>Commerce: 9<li>Crafts: 6<li>Criminal: 7</ul>
					<td><ul><li>Government: 11<li>Maritime: 8<li>Military: 7<li>Primary: 5</ul>
					<td><ul><li>Religious: 10<li>Scholar: 11<li>Service: 8<li>Unemployed: 6</ul>
					</table>
				<b>Age:</b> +2 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Axes & Maces (2)<li>Lifting & Pushing (4)<li>Stonecutting (3)</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addOccupationToSelected(new objSelectedOccupation("miner", "Miner"))'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_musician" style = "text-align:left; display:none;">
		
			<h3>Musician</h3>
			
			<p>Musicians will perform in tavern for money or on the street for donations.<br><br>
				<b>Career Path:</b> Arts<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: 5<li>Commerce: 10<li>Crafts: 9<li>Criminal: 8</ul>
					<td><ul><li>Government: 10<li>Maritime: 8<li>Military: 8<li>Primary: 9</ul>
					<td><ul><li>Religious: 8<li>Scholar: 10<li>Service: 9<li>Unemployed: 7</ul>
					</table>
				<b>Age:</b> +3 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Charm & Persuasion (3)<li>Confidence & Ego (2)<li>Music & Singing (4)</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addOccupationToSelected(new objSelectedOccupation("musician", "Musician"))'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_navigator" style = "text-align:left; display:none;">
		
			<h3>Navigator</h3>
			
			<p>On a ship, the navigator is a primordial role. They are the specialists of knowing where they are and where to go.<br><br>
				<b>Career Path:</b> Maritime<br>
				<b>Prerequisite: </b>Must come from a maritime occupation.<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: N/A<li>Commerce: N/A<li>Crafts: N/A<li>Criminal: N/A</ul>
					<td><ul><li>Government: N/A<li>Maritime: 5<li>Military: N/A<li>Primary: N/A</ul>
					<td><ul><li>Religious: N/A<li>Scholar: N/A<li>Service: N/A<li>Unemployed: N/A</ul>
					</table>
				<b>Age:</b> +4 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Geography (3)<li>Navigation (4)<li>Seamanship (3)</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addOccupationToSelected(new objSelectedOccupation("navigator", "Navigator"))'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_noblePatriarch" style = "text-align:left; display:none;">
		
			<h3>Noble / Patriarch</h3>
			
			<p>Noble in high-men and elven society and patriarch in highlander society are the rulers of their respective society.  
				There is different level of nobility and every family knows their place in the hierarchy.  
				Usually, nobility is hereditary but it is possible to become a noble or a patriarch by long successful military career or by faithful government works.<br><br>
				<b>Career Path:</b> Government or Military<br>
				<b>Prerequisite: </b>Must have at least two previous occupations in the military or government or having the life event "Born Noble".<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: N/A<li>Commerce: N/A<li>Crafts: N/A<li>Criminal: N/A</ul>
					<td><ul><li>Government: 8<li>Maritime: N/A<li>Military: 8<li>Primary: N/A</ul>
					<td><ul><li>Religious: N/A<li>Scholar: N/A<li>Service: N/A<li>Unemployed: N/A</ul>
					</table>
				<b>Age:</b> +5 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Heraldry & Nobility (4)<li>Laws & legal Systems (2)<li>Melee Combat (3)</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addOccupationToSelected(new objSelectedOccupation("noblePatriarch", "Noble / Patriarch"))'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_operaComposer" style = "text-align:left; display:none;">
		
			<h3>Opera Composer</h3>
			
			<p>Opera composer must have a good grasp of writing, music and choreography.<br><br>
				<b>Career Path:</b> Arts<br>
				<b>Prerequisite: </b>Must come from a previous occupation in arts.<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: 8<li>Commerce: N/A<li>Crafts: N/A<li>Criminal: N/A</ul>
					<td><ul><li>Government: N/A<li>Maritime: N/A<li>Military: N/A<li>Primary: N/A</ul>
					<td><ul><li>Religious: N/A<li>Scholar: N/A<li>Service: N/A<li>Unemployed: N/A</ul>
					</table>
				<b>Age:</b> +5 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Arts & Performance (4)<li>Music & Singing (3)<li>Oratory & Poetry (3)</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addOccupationToSelected(new objSelectedOccupation("operaComposer", "Opera Composer"))'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_outcast" style = "text-align:left; display:none;">
		
			<h3>Outcast</h3>
			
			<p>Outcast lives on the margin of society, usually not by choice. They might not have committed any crime but are disliked by their neighbour.<br><br>
				<b>Career Path:</b> Unemployed<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: 8<li>Commerce: 9<li>Crafts: 8<li>Criminal: 5</ul>
					<td><ul><li>Government: 10<li>Maritime: 9<li>Military: 8<li>Primary: 8</ul>
					<td><ul><li>Religious: 11<li>Scholar: 11<li>Service: 9<li>Unemployed: 5</ul>
					</table>
				<b>Age:</b> +1 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Detect Motive (3)<li>Insult & Intimidation (2)<li>Survival (4)</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addOccupationToSelected(new objSelectedOccupation("outcast", "Outcast"))'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_outlaw" style = "text-align:left; display:none;">
		
			<h3>Outlaw</h3>
			
			<p>Outlaw is a special status for criminals. An outlaw is no longer protected by the laws and it is therefore legal to cause them harm.<br><br>
				<b>Career Path:</b> Criminal<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: 5<li>Commerce: 5<li>Crafts: 5<li>Criminal: N/A</ul>
					<td><ul><li>Government: 6<li>Maritime: 4<li>Military: 4<li>Primary: 5</ul>
					<td><ul><li>Religious: 6<li>Scholar: 6<li>Service: 5<li>Unemployed: 3</ul>
					</table>
				<b>Age:</b> +3 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Brawling (3)<li>Detect Motive (2)<li>Insult & Intimidation (2)</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addOccupationToSelected(new objSelectedOccupation("outlaw", "Outlaw"))'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_painter" style = "text-align:left; display:none;">
		
			<h3>Painter</h3>
			
			<p>An artist using as medium paint and canvas.<br><br>
				<b>Career Path:</b> Arts<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: 5<li>Commerce: 9<li>Crafts: 8<li>Criminal: 9</ul>
					<td><ul><li>Government: 10<li>Maritime: 9<li>Military: 8<li>Primary: 10</ul>
					<td><ul><li>Religious: 8<li>Scholar: 10<li>Service: 9<li>Unemployed: 7</ul>
					</table>
				<b>Age:</b> +3 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Drawing & Painting (4)<li>Perception & Vigilance (3)<li>
				<input type = "radio" name = "painterSkills1" value = "botany">Botany (2)</input> or <br>
					<input type = "radio" name = "painterSkills1" value = "zoology">Zoology (2)</input></ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'if (getFormValue("painterSkills1") != undefined)
					{addOccupationToSelected(new objSelectedOccupation("painter", "Painter"))}else{alert("Please select a skill.")}'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_peasant" style = "text-align:left; display:none;">
		
			<h3>Peasant</h3>
			
			<p>Peasant works the land to produce food.<br><br>
				<b>Career Path:</b> Primary<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: 9<li>Commerce: 9<li>Crafts: 8<li>Criminal: 9</ul>
					<td><ul><li>Government: 11<li>Maritime: 9<li>Military: 8<li>Primary: 5</ul>
					<td><ul><li>Religious: 9<li>Scholar: 11<li>Service: 9<li>Unemployed: 8</ul>
					</table>
				<b>Age:</b> +5 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Crafting (3)<li>Taming & Training (3)<li>
				<input type = "radio" name = "peasantSkills1" value = "botany">Botany (3)</input> or <br>
					<input type = "radio" name = "peasantSkills1" value = "zoology">Zoology (3)</input></ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'if (getFormValue("peasantSkills1") != undefined)
					{addOccupationToSelected(new objSelectedOccupation("peasant", "Peasant"))}else{alert("Please select a skill.")}'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_physician" style = "text-align:left; display:none;">
		
			<h3>Physician</h3>
			
			<p>Physician practice medicine based on surgery and blood letting.<br><br>
				<b>Career Path:</b> Scholar or Service<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: 10<li>Commerce: 8<li>Crafts: 9<li>Criminal: 11</ul>
					<td><ul><li>Government: 10<li>Maritime: 11<li>Military: 11<li>Primary: 11</ul>
					<td><ul><li>Religious: 8<li>Scholar: 5<li>Service: 5<li>Unemployed: N/A</ul>
					</table>
				<b>Age:</b> +8 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Medicine (4)<li>Torture (3)<li>Zoology (3)</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addOccupationToSelected(new objSelectedOccupation("physician", "Physician"))'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_pickpocket" style = "text-align:left; display:none;">
		
			<h3>Pickpocket</h3>
			
			<p>Pickpockets specialise in taking things from other people's pocket without them noticing.<br><br>
				<b>Career Path:</b> Criminal<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: 10<li>Commerce: 10<li>Crafts: 10<li>Criminal: 5</ul>
					<td><ul><li>Government: 10<li>Maritime: 10<li>Military: 8<li>Primary: 9</ul>
					<td><ul><li>Religious: 10<li>Scholar: 10<li>Service: 9<li>Unemployed: 7</ul>
					</table>
				<b>Age:</b> +3 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Perception & Vigilance (3)<li>Sleight of Hand (4)<li>Stealth (2)</ul>
				<b>Morality:</b> The morality of the character is lowered by 1.<br>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addOccupationToSelected(new objSelectedOccupation("pickpocket", "Pickpocket"))'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_pikeman" style = "text-align:left; display:none;">
		
			<h3>Pikeman</h3>
			
			<p>A support troops for the knights, pikeman are the anti cavalry specialists.<br><br>
				<b>Career Path:</b> Military<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: 10<li>Commerce: 8<li>Crafts: 8<li>Criminal: 7</ul>
					<td><ul><li>Government: 10<li>Maritime: 8<li>Military: 5<li>Primary: 7</ul>
					<td><ul><li>Religious: 10<li>Scholar: 10<li>Service: 10<li>Unemployed: 7</ul>
					</table>
				<b>Age:</b> +2 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Polearms (4)<li>Reflex (3)<li>
				<input type = "radio" name = "pikemanSkills1" value = "resistPain">Resist Pain (2)</input> or <br>
					<input type = "radio" name = "pikemanSkills1" value = "resistShock">Resist Shock (2)</input></ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'if (getFormValue("pikemanSkills1") != undefined)
					{addOccupationToSelected(new objSelectedOccupation("pikeman", "Pikeman"))}else{alert("Please select a skill.")}'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_pirate" style = "text-align:left; display:none;">
		
			<h3>Pirate</h3>
			
			<p>Terror on the high sea, scourge of the maritime trading and of the coastal cities.<br><br>
				<b>Career Path:</b> Criminal or Maritime<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: 10<li>Commerce: 10<li>Crafts: 10<li>Criminal: 5</ul>
					<td><ul><li>Government: 11<li>Maritime: 5<li>Military: 8<li>Primary: 9</ul>
					<td><ul><li>Religious: 10<li>Scholar: 11<li>Service: 10<li>Unemployed: 8</ul>
					</table>
				<b>Age:</b> +3 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Insult & Intimidation (3)<li>Seamanship (3)<li>
				<input type = "radio" name = "pirateSkills1" value = "oneHanded">One Handed Swords (3)</input> or <br>
					<input type = "radio" name = "pirateSkills1" value = "axesMaces">Axes & Maces (3)</input></ul>
				<b>Morality:</b> The morality of the character is lowered by 2.<br>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'if (getFormValue("pirateSkills1") != undefined)
					{addOccupationToSelected(new objSelectedOccupation("pirate", "Pirate"))}else{alert("Please select a skill.")}'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_playwright" style = "text-align:left; display:none;">
		
			<h3>Playwright</h3>
			
			<p>Before the actor can perform a play, somebody has to write it; this is the playwright.<br><br>
				<b>Career Path:</b> Arts<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: 5<li>Commerce: 10<li>Crafts: 8<li>Criminal: 8</ul>
					<td><ul><li>Government: 10<li>Maritime: 10<li>Military: 8<li>Primary: 9</ul>
					<td><ul><li>Religious: 7<li>Scholar: 7<li>Service: 9<li>Unemployed: 7</ul>
					</table>
				<b>Age:</b> +3 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Acting (2)<li>Oratory & Poetry (4)<li>Scribing (3)</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addOccupationToSelected(new objSelectedOccupation("playwright", "Playwright"))'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_poet" style = "text-align:left; display:none;">
		
			<h3>Poet</h3>
			
			<p>An artist using languages as their medium.<br><br>
				<b>Career Path:</b> Arts<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: 5<li>Commerce: 10<li>Crafts: 9<li>Criminal: 7</ul>
					<td><ul><li>Government: 10<li>Maritime: 8<li>Military: 8<li>Primary: 10</ul>
					<td><ul><li>Religious: 7<li>Scholar: 10<li>Service: 9<li>Unemployed: 7</ul>
					</table>
				<b>Age:</b> +3 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Confidence & Ego (2)<li>Oratory & Poetry (4)<li>Scribing (3)</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addOccupationToSelected(new objSelectedOccupation("poet", "Poet"))'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_priest" style = "text-align:left; display:none;">
		
			<h3>Priest</h3>
			
			<p>Priest are official in a religious organisation, responsible for performing the different ceremonies.<br><br>
				<b>Career Path:</b> Religious<br>
				<b>Prerequisite: </b>Must have at least two previous religious occupations.<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: N/A<li>Commerce: N/A<li>Crafts: N/A<li>Criminal: N/A</ul>
					<td><ul><li>Government: N/A<li>Maritime: N/A<li>Military: N/A<li>Primary: N/A</ul>
					<td><ul><li>Religious: 8<li>Scholar: N/A<li>Service: N/A<li>Unemployed: N/A</ul>
					</table>
				<b>Age:</b> +8 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Charm & Persuasion (3)<li>Mysticism (2)<li>Religions (4)</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addOccupationToSelected(new objSelectedOccupation("priest", "Priest"))'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_prostitute" style = "text-align:left; display:none;">
		
			<h3>Prostitute</h3>
			
			<p>Prostitutes offer companionship and sex in exchange of money. In some culture the profession is illegal while in other it is well respected.<br><br>
				<b>Career Path:</b> Criminal or Service<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: 5<li>Commerce: 9<li>Crafts: 10<li>Criminal: 5</ul>
					<td><ul><li>Government: 10<li>Maritime: 10<li>Military: 8<li>Primary: 9</ul>
					<td><ul><li>Religious: 9<li>Scholar: 9<li>Service: 5<li>Unemployed: 5</ul>
					</table>
				<b>Age:</b> +1 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Charm & Persuasion (4)<li>Detect Motive (3)<li>Sleight of Hand (2)</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addOccupationToSelected(new objSelectedOccupation("prostitute", "Prostitute"))'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_scholar" style = "text-align:left; display:none;">
		
			<h3>Scholar</h3>
			
			<p>Scholars spend their time learning and researching. They are often consulted by the wealthy and powerful for all kind of academic matters.<br><br>
				<b>Career Path:</b> Scholar<br>
				<b>Prerequisite: </b>Must come from a scholarly occupations.<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: N/A<li>Commerce: N/A<li>Crafts: N/A<li>Criminal: N/A</ul>
					<td><ul><li>Government: N/A<li>Maritime: N/A<li>Military: N/A<li>Primary: N/A</ul>
					<td><ul><li>Religious: N/A<li>Scholar: 5<li>Service: N/A<li>Unemployed: N/A</ul>
					</table>
				<b>Age:</b> +5 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Deduction & Logic (2)<li>Knowledge (4)<li>Science (3)</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addOccupationToSelected(new objSelectedOccupation("scholar", "Scholar"))'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_scientist" style = "text-align:left; display:none;">
		
			<h3>Scientist</h3>
			
			<p>Scientist spend their time researching the natural world. They have a very methodical approach and like to categorise things.<br><br>
				<b>Career Path:</b> Scholar<br>
				<b>Prerequisite: </b>Must come from a scholarly occupations.<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: N/A<li>Commerce: N/A<li>Crafts: N/A<li>Criminal: N/A</ul>
					<td><ul><li>Government: N/A<li>Maritime: N/A<li>Military: N/A<li>Primary: N/A</ul>
					<td><ul><li>Religious: N/A<li>Scholar: 5<li>Service: N/A<li>Unemployed: N/A</ul>
					</table>
				<b>Age:</b> +5 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Deduction & Logic (3)<li>Knowledge (2)<li>Science (4)</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addOccupationToSelected(new objSelectedOccupation("scientist", "Scientist"))'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_scout" style = "text-align:left; display:none;">
		
			<h3>Scout</h3>
			
			<p>Scouts are an invaluable part of an army. They are useful to keep track of hat the enemy is doing.<br><br>
				<b>Career Path:</b> Military<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: 9<li>Commerce: 10<li>Crafts: 10<li>Criminal: 7</ul>
					<td><ul><li>Government: 11<li>Maritime: 9<li>Military: 5<li>Primary: 7</ul>
					<td><ul><li>Religious: 11<li>Scholar: 11<li>Service: 10<li>Unemployed: 8</ul>
					</table>
				<b>Age:</b> +3 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Perception & Vigilance (4)<li>Riding (2)<li>Stealth (3)</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addOccupationToSelected(new objSelectedOccupation("scout", "Scout"))'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_scribe" style = "text-align:left; display:none;">
		
			<h3>Scribe</h3>
			
			<p>Scribe spend their time writing and copying books. Nobles often keep a scribe on staff to write all their letters and keep their records.<br><br>
				<b>Career Path:</b> Crafts<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: 8<li>Commerce: 9<li>Crafts: 5<li>Criminal: 10</ul>
					<td><ul><li>Government: 7<li>Maritime: 9<li>Military: 9<li>Primary: 10</ul>
					<td><ul><li>Religious: 6<li>Scholar: 7<li>Service: 8<li>Unemployed: 9</ul>
					</table>
				<b>Age:</b> +5 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Appraise (2)<li>Drawing & Painting (3)<li>Scribing (4)</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addOccupationToSelected(new objSelectedOccupation("scribe", "Scribe"))'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_sculptor" style = "text-align:left; display:none;">
		
			<h3>Sculptor</h3>
			
			<p>An artist working with three dimensional material, either clay, wood, stone or metal.<br><br>
				<b>Career Path:</b> Arts<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: 5<li>Commerce: 10<li>Crafts: 5<li>Criminal: 9</ul>
					<td><ul><li>Government: 10<li>Maritime: 10<li>Military: 8<li>Primary: 9</ul>
					<td><ul><li>Religious: 9<li>Scholar: 9<li>Service: 9<li>Unemployed: 7</ul>
					</table>
				<b>Age:</b> +4 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Metalworking (2)<li>Stonecutting (4)<li>Woodworking (3)</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addOccupationToSelected(new objSelectedOccupation("sculptor", "Sculptor"))'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_shaman" style = "text-align:left; display:none;">
		
			<h3>Shaman</h3>
			
			<p>A magic user specialised in the contact with spirits of nature and of ancestors.<br><br>
				<b>Career Path:</b> Religious<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: 10<li>Commerce: 10<li>Crafts: 9<li>Criminal: 8</ul>
					<td><ul><li>Government: 8<li>Maritime: 8<li>Military: 9<li>Primary: 6</ul>
					<td><ul><li>Religious: 5<li>Scholar: 9<li>Service: 9<li>Unemployed: 8</ul>
					</table>
				<b>Age:</b> +8 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Resist Hunger (2)<li>Resist Poison (3)<li>Shamanism (4)</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addOccupationToSelected(new objSelectedOccupation("shaman", "Shaman"))'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_shepherd" style = "text-align:left; display:none;">
		
			<h3>Shepherd</h3>
			
			<p>Shepherds are responsible of a herd of sheep or goats. They will bring them to pasture and protect them from predators.<br><br>
				<b>Career Path:</b> Primary<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: 10<li>Commerce: 10<li>Crafts: 9<li>Criminal: 7</ul>
					<td><ul><li>Government: 10<li>Maritime: 7<li>Military: 7<li>Primary: 5</ul>
					<td><ul><li>Religious: 7<li>Scholar: 10<li>Service: 8<li>Unemployed: 5</ul>
					</table>
				<b>Age:</b> +3 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Perception & Vigilance (4)<li>Slings (2)<li>Taming & Training (4)</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addOccupationToSelected(new objSelectedOccupation("shepherd", "Shepherd"))'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_shipwright" style = "text-align:left; display:none;">
		
			<h3>Shipwright</h3>
			
			<p>Shipwrights are the ones designing and building ships.<br><br>
				<b>Career Path:</b> Crafts<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: 10<li>Commerce: 9<li>Crafts: 5<li>Criminal: 10</ul>
					<td><ul><li>Government: 10<li>Maritime: 7<li>Military: 8<li>Primary: 7</ul>
					<td><ul><li>Religious: 10<li>Scholar: 10<li>Service: 10<li>Unemployed: 8</ul>
					</table>
				<b>Age:</b> +4 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Appraise (2)<li>Seamanship (3)<li>Woodworking (4)</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addOccupationToSelected(new objSelectedOccupation("shipwright", "Shipwright"))'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_siegeEngineer" style = "text-align:left; display:none;">
		
			<h3>Siege Engineer</h3>
			
			<p>An engineer specialised in siege warfare. They design and build trebuchets, catapults, ballistas, siege towers and the like.<br><br>
				<b>Career Path:</b> Military or Scholar<br>
				<b>Prerequisite: </b>Must come from a military or scholarly occupations.<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: N/A<li>Commerce: N/A<li>Crafts: N/A<li>Criminal: N/A</ul>
					<td><ul><li>Government: N/A<li>Maritime: N/A<li>Military: 5<li>Primary: N/A</ul>
					<td><ul><li>Religious: N/A<li>Scholar: 5<li>Service: N/A<li>Unemployed: N/A</ul>
					</table>
				<b>Age:</b> +4 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Engineering & Physics (4)<li>Mechanics (3)<li>Woodworking (3)</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addOccupationToSelected(new objSelectedOccupation("siegeEngineer", "Siege Engineer"))'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		<section id = "sec_sorcerer" style = "text-align:left; display:none;">
		
			<h3>Sorcerer</h3>
			
			<p>A magic user gaining their power from deal they made with dark powers.<br><br>
				<b>Career Path:</b> Unemployed<br>
				<b>Background Cost: </b>The cost varies based on your previous occupation.
				<table style = "text-align:left; width:90%; position:relative; left:2.5%">
					<td><ul><li>Arts: 10<li>Commerce: 10<li>Crafts: 10<li>Criminal: 7</ul>
					<td><ul><li>Government: 11<li>Maritime: 9<li>Military: 9<li>Primary: 10</ul>
					<td><ul><li>Religious: 11<li>Scholar: 8<li>Service: 10<li>Unemployed: 5</ul>
					</table>
				<b>Age:</b> +8 years.<br>
				<b>Skills: </b>Gain experience in the following skills:
				<ul><li>Charm & Persuasion (2)<li>Detect Motive (3)<li>Sorcery (4)</ul>
				<b>Resources:</b> The character gains the following items:
				<ul><li>TO DO!</ul>
			</p>
			
			
			<section style = "text-align:center;">
				<button type="button" 
					onclick = 'addOccupationToSelected(new objSelectedOccupation("sorcerer", "Sorcerer"))'>
					Select this Occupation
				</button>
			</section>
		
		</section>
		
		
		<br>
		
		<section style = "text-align:center;">
			<select id = "selectedOccupationsId" name="selectedOccupations[]" multiple size="8" style = "width: 70%;">
			</select><br>
			<button type="button" onclick="if(getMultipleSelectIndex('selectedOccupationsId')!= undefined){changeOccupationOrder(getMultipleSelectIndex('selectedOccupationsId'), -1)}"> Move Up</button>
			<button type="button" onclick="if(getMultipleSelectIndex('selectedOccupationsId')!= undefined){removeOccupationFromSelected(getMultipleSelectIndex('selectedOccupationsId'))}">Remove Selected Occupation(s)</button>
			<button type="button" onclick="if(getMultipleSelectIndex('selectedOccupationsId')!= undefined){changeOccupationOrder(getMultipleSelectIndex('selectedOccupationsId'), 1)}"> Move Down</button>
		</section>
		
	</section>
	
	<hr>

</section>

<section style="position:fixed; top:10%; left:46%; width:50%; height:75%;transform: translate(0, 60px);overflow:auto;">

	<p id = "display" style = "text-align:left"></p>

</section>

<script>
	updateCharacter();
</script>

</body>
</html>